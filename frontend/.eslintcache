[{"G:\\GR_Project_K63\\frontend\\src\\index.js":"1","G:\\GR_Project_K63\\frontend\\src\\store.js":"2","G:\\GR_Project_K63\\frontend\\src\\App.js":"3","G:\\GR_Project_K63\\frontend\\src\\reducers\\notifyReducer.js":"4","G:\\GR_Project_K63\\frontend\\src\\reducers\\courseReducers.js":"5","G:\\GR_Project_K63\\frontend\\src\\reducers\\userReducers.js":"6","G:\\GR_Project_K63\\frontend\\src\\reducers\\cartReducers.js":"7","G:\\GR_Project_K63\\frontend\\src\\reducers\\registerCourseReducer.js":"8","G:\\GR_Project_K63\\frontend\\src\\reducers\\orderReducers.js":"9","G:\\GR_Project_K63\\frontend\\src\\reducers\\categoryReducer.js":"10","G:\\GR_Project_K63\\frontend\\src\\reducers\\bannerReducer.js":"11","G:\\GR_Project_K63\\frontend\\src\\actions\\userActions.js":"12","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\Shipping.js":"13","G:\\GR_Project_K63\\frontend\\src\\components\\layout\\Footer.js":"14","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\ConfirmOrder.js":"15","G:\\GR_Project_K63\\frontend\\src\\components\\layout\\Header.js":"16","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\Payment.js":"17","G:\\GR_Project_K63\\frontend\\src\\components\\order\\ListOrders.js":"18","G:\\GR_Project_K63\\frontend\\src\\components\\order\\OrderDetails.js":"19","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\OrderSuccess.js":"20","G:\\GR_Project_K63\\frontend\\src\\components\\route\\ProtectedRoute.js":"21","G:\\GR_Project_K63\\frontend\\src\\pages\\Home\\Home.js":"22","G:\\GR_Project_K63\\frontend\\src\\pages\\Course\\CourseDetails.js":"23","G:\\GR_Project_K63\\frontend\\src\\pages\\Course\\Lesson.js":"24","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\Cart.js":"25","G:\\GR_Project_K63\\frontend\\src\\pages\\RegisterCourse\\RegisterCourseList.js":"26","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\Register.js":"27","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\Profile.js":"28","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\UpdatePassword.js":"29","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\UpdateProfile.js":"30","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\ForgotPassword.js":"31","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\Login.js":"32","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\NewPassword.js":"33","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\OrdersList.js":"34","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\CoursesList.js":"35","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\UpdateCourse.js":"36","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\NewCourse.js":"37","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Lesson\\NewLesson.js":"38","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Dashboard.js":"39","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\CourseReview\\CourseReviews.js":"40","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Quiz\\NewQuiz.js":"41","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Users\\UpdateUser.js":"42","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Document\\NewDocument.js":"43","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Topic\\NewTopic.js":"44","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Category\\UpdateCategory.js":"45","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Category\\CategoryList.js":"46","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Category\\NewCategory.js":"47","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Banner\\NewBanner.js":"48","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\ProcessOrder.js":"49","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Banner\\BannerList.js":"50","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Users\\UsersList.js":"51","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Banner\\UpdateBanner.js":"52","G:\\GR_Project_K63\\frontend\\src\\constants\\notifyContants.js":"53","G:\\GR_Project_K63\\frontend\\src\\constants\\courseConstants.js":"54","G:\\GR_Project_K63\\frontend\\src\\constants\\userConstants.js":"55","G:\\GR_Project_K63\\frontend\\src\\constants\\cartConstants.js":"56","G:\\GR_Project_K63\\frontend\\src\\constants\\orderConstants.js":"57","G:\\GR_Project_K63\\frontend\\src\\constants\\registerCourseContants.js":"58","G:\\GR_Project_K63\\frontend\\src\\constants\\categoryConstant.js":"59","G:\\GR_Project_K63\\frontend\\src\\constants\\bannerConstant.js":"60","G:\\GR_Project_K63\\frontend\\src\\components\\layout\\MetaData.js":"61","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\CheckoutSteps.js":"62","G:\\GR_Project_K63\\frontend\\src\\actions\\cartActions.js":"63","G:\\GR_Project_K63\\frontend\\src\\actions\\categoryAction.js":"64","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Sidebar.js":"65","G:\\GR_Project_K63\\frontend\\src\\actions\\bannerAction.js":"66","G:\\GR_Project_K63\\frontend\\src\\components\\layout\\Loader.js":"67","G:\\GR_Project_K63\\frontend\\src\\actions\\orderActions.js":"68","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Topic\\TopicList.js":"69","G:\\GR_Project_K63\\frontend\\src\\actions\\courseActions.js":"70","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Topic\\TopicForm.js":"71","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Document\\DocumentList.js":"72","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Document\\DocumentForm.js":"73","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Quiz\\QuizList.js":"74","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Quiz\\QuizForm.js":"75","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Lesson\\UploadForm.js":"76","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Lesson\\UploadsList.js":"77","G:\\GR_Project_K63\\frontend\\src\\actions\\registerCourseAction.js":"78","G:\\GR_Project_K63\\frontend\\src\\pages\\Course\\Course.js":"79","G:\\GR_Project_K63\\frontend\\src\\components\\layout\\Search.js":"80","G:\\GR_Project_K63\\frontend\\src\\actions\\notifyAction.js":"81","G:\\GR_Project_K63\\frontend\\src\\components\\banner\\Banner.js":"82","G:\\GR_Project_K63\\frontend\\src\\components\\layout\\NotifyMe\\NotifyMe.js":"83","G:\\GR_Project_K63\\frontend\\src\\components\\review\\ListReviews.js":"84","G:\\GR_Project_K63\\frontend\\src\\components\\quiz\\Quiz.js":"85"},{"size":613,"mtime":1681120369930,"results":"86","hashOfConfig":"87"},{"size":3341,"mtime":1681120369952,"results":"88","hashOfConfig":"87"},{"size":6707,"mtime":1681120369915,"results":"89","hashOfConfig":"87"},{"size":1702,"mtime":1681120369951,"results":"90","hashOfConfig":"87"},{"size":20695,"mtime":1681120369950,"results":"91","hashOfConfig":"87"},{"size":6651,"mtime":1681120369952,"results":"92","hashOfConfig":"87"},{"size":1141,"mtime":1681120369949,"results":"93","hashOfConfig":"87"},{"size":3681,"mtime":1681135566841,"results":"94","hashOfConfig":"87"},{"size":4574,"mtime":1681120369951,"results":"95","hashOfConfig":"87"},{"size":4187,"mtime":1681120369950,"results":"96","hashOfConfig":"87"},{"size":4075,"mtime":1681120369949,"results":"97","hashOfConfig":"87"},{"size":7998,"mtime":1681120369918,"results":"98","hashOfConfig":"87"},{"size":4886,"mtime":1681120369921,"results":"99","hashOfConfig":"87"},{"size":4763,"mtime":1681120369922,"results":"100","hashOfConfig":"87"},{"size":3835,"mtime":1681120369920,"results":"101","hashOfConfig":"87"},{"size":6422,"mtime":1681120369922,"results":"102","hashOfConfig":"87"},{"size":5679,"mtime":1681120369921,"results":"103","hashOfConfig":"87"},{"size":2809,"mtime":1681120369925,"results":"104","hashOfConfig":"87"},{"size":3861,"mtime":1681120369925,"results":"105","hashOfConfig":"87"},{"size":758,"mtime":1681120369921,"results":"106","hashOfConfig":"87"},{"size":951,"mtime":1681120369927,"results":"107","hashOfConfig":"87"},{"size":10318,"mtime":1681120369945,"results":"108","hashOfConfig":"87"},{"size":11763,"mtime":1681126818091,"results":"109","hashOfConfig":"87"},{"size":16276,"mtime":1681143133224,"results":"110","hashOfConfig":"87"},{"size":4709,"mtime":1681120369920,"results":"111","hashOfConfig":"87"},{"size":4292,"mtime":1681120369946,"results":"112","hashOfConfig":"87"},{"size":6063,"mtime":1681120369948,"results":"113","hashOfConfig":"87"},{"size":2202,"mtime":1681120369947,"results":"114","hashOfConfig":"87"},{"size":3086,"mtime":1681120369948,"results":"115","hashOfConfig":"87"},{"size":5462,"mtime":1681120369949,"results":"116","hashOfConfig":"87"},{"size":2293,"mtime":1681120369946,"results":"117","hashOfConfig":"87"},{"size":3581,"mtime":1681120369947,"results":"118","hashOfConfig":"87"},{"size":3083,"mtime":1681120369947,"results":"119","hashOfConfig":"87"},{"size":3984,"mtime":1681120369943,"results":"120","hashOfConfig":"87"},{"size":5985,"mtime":1681120369936,"results":"121","hashOfConfig":"87"},{"size":10782,"mtime":1681120369942,"results":"122","hashOfConfig":"87"},{"size":8651,"mtime":1681120369939,"results":"123","hashOfConfig":"87"},{"size":3401,"mtime":1681120369938,"results":"124","hashOfConfig":"87"},{"size":5922,"mtime":1681120369943,"results":"125","hashOfConfig":"87"},{"size":5292,"mtime":1681120369935,"results":"126","hashOfConfig":"87"},{"size":3319,"mtime":1681120369940,"results":"127","hashOfConfig":"87"},{"size":4806,"mtime":1681120369944,"results":"128","hashOfConfig":"87"},{"size":3381,"mtime":1681120369937,"results":"129","hashOfConfig":"87"},{"size":3377,"mtime":1681120369941,"results":"130","hashOfConfig":"87"},{"size":3588,"mtime":1681120369935,"results":"131","hashOfConfig":"87"},{"size":3961,"mtime":1681120369934,"results":"132","hashOfConfig":"87"},{"size":3017,"mtime":1681120369934,"results":"133","hashOfConfig":"87"},{"size":4405,"mtime":1681120369933,"results":"134","hashOfConfig":"87"},{"size":6452,"mtime":1681120369944,"results":"135","hashOfConfig":"87"},{"size":3957,"mtime":1681120369933,"results":"136","hashOfConfig":"87"},{"size":3752,"mtime":1681120369945,"results":"137","hashOfConfig":"87"},{"size":5109,"mtime":1681120369933,"results":"138","hashOfConfig":"87"},{"size":500,"mtime":1681120369928,"results":"139","hashOfConfig":"87"},{"size":5428,"mtime":1681120369928,"results":"140","hashOfConfig":"87"},{"size":2264,"mtime":1681120369929,"results":"141","hashOfConfig":"87"},{"size":148,"mtime":1681120369927,"results":"142","hashOfConfig":"87"},{"size":1186,"mtime":1681120369929,"results":"143","hashOfConfig":"87"},{"size":1178,"mtime":1681134338444,"results":"144","hashOfConfig":"87"},{"size":1174,"mtime":1681120369928,"results":"145","hashOfConfig":"87"},{"size":1096,"mtime":1681120369927,"results":"146","hashOfConfig":"87"},{"size":244,"mtime":1681120369923,"results":"147","hashOfConfig":"87"},{"size":1886,"mtime":1681120369920,"results":"148","hashOfConfig":"87"},{"size":1112,"mtime":1681120369916,"results":"149","hashOfConfig":"87"},{"size":3334,"mtime":1681120369916,"results":"150","hashOfConfig":"87"},{"size":3320,"mtime":1681120369944,"results":"151","hashOfConfig":"87"},{"size":3234,"mtime":1681120369916,"results":"152","hashOfConfig":"87"},{"size":143,"mtime":1681120369922,"results":"153","hashOfConfig":"87"},{"size":3831,"mtime":1681120369918,"results":"154","hashOfConfig":"87"},{"size":1192,"mtime":1681120369942,"results":"155","hashOfConfig":"87"},{"size":17623,"mtime":1681138075748,"results":"156","hashOfConfig":"87"},{"size":1102,"mtime":1681120369941,"results":"157","hashOfConfig":"87"},{"size":1847,"mtime":1681120369937,"results":"158","hashOfConfig":"87"},{"size":2269,"mtime":1681120369937,"results":"159","hashOfConfig":"87"},{"size":1578,"mtime":1681120369940,"results":"160","hashOfConfig":"87"},{"size":3463,"mtime":1681120369940,"results":"161","hashOfConfig":"87"},{"size":2302,"mtime":1681120369938,"results":"162","hashOfConfig":"87"},{"size":1528,"mtime":1681120369939,"results":"163","hashOfConfig":"87"},{"size":3557,"mtime":1681140019527,"results":"164","hashOfConfig":"87"},{"size":1306,"mtime":1681120369931,"results":"165","hashOfConfig":"87"},{"size":1063,"mtime":1681120369924,"results":"166","hashOfConfig":"87"},{"size":1265,"mtime":1681120369917,"results":"167","hashOfConfig":"87"},{"size":835,"mtime":1681120369919,"results":"168","hashOfConfig":"87"},{"size":7638,"mtime":1681120369924,"results":"169","hashOfConfig":"87"},{"size":823,"mtime":1681123420197,"results":"170","hashOfConfig":"87"},{"size":2139,"mtime":1681120369926,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"1cgmfnm",{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"174"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"174"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"174"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"174"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"174"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"174"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"174"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"174"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"174"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"174"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"174"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"174"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"174"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"174"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"174"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"174"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"174"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"174"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"174"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"174"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"174"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"174"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"174"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"174"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"174"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"174"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"174"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"174"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"174"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"174"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"174"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"369"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"174"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"G:\\GR_Project_K63\\frontend\\src\\index.js",[],["377","378"],"G:\\GR_Project_K63\\frontend\\src\\store.js",["379"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { coursesReducer, newCourseReducer, courseReducer, courseDetailsReducer, newReviewReducer, courseReviewsReducer, reviewReducer, newLessonReducer, courseLessonsReducer, lessonReducer, courseLessonReducer, courseTopicReducer, courseTopicsReducer, newTopicReducer, newQuizReducer, topicQuizReducer, topicQuizsReducer, quizReducer, newDocumentReducer, courseDocumentsReducer, documentReducer } from './reducers/courseReducers'\r\nimport { notifiesReducer } from './reducers/notifyReducer';\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\nimport { newRegisterCourseReducer, RegisterCourseReducer, registerCoursesReducer } from './reducers/registerCourseReducer';\r\nimport { categoriesReducer, categoryDetailsReducer, categoryReducer, newCategoryReducer } from './reducers/categoryReducer';\r\nimport { bannerDetailsReducer, bannerReducer, bannersReducer, newBannerReducer } from './reducers/bannerReducer';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    courses: coursesReducer,\r\n    courseDetails: courseDetailsReducer,\r\n    newCourse: newCourseReducer,\r\n    course: courseReducer,\r\n    courseReviews: courseReviewsReducer,\r\n    review: reviewReducer,\r\n    courseLessons: courseLessonsReducer,\r\n    courseTopics: courseTopicsReducer,\r\n    newTopic: newTopicReducer,\r\n    topic: courseTopicReducer,\r\n    newQuiz: newQuizReducer,\r\n    quiz: topicQuizReducer,\r\n    topicQuizs:topicQuizsReducer,\r\n    lesson: lessonReducer,\r\n    media: courseLessonReducer,\r\n    newDoc: newDocumentReducer,\r\n    docs: courseDocumentsReducer,\r\n    doc:documentReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer,\r\n    newLesson: newLessonReducer,\r\n    notifies: notifiesReducer,\r\n    registerCourse: RegisterCourseReducer,\r\n    registerCourses: registerCoursesReducer,\r\n    newRegisterCourse: newRegisterCourseReducer,\r\n    categories: categoriesReducer,\r\n    newCategory: newCategoryReducer,\r\n    category: categoryReducer,\r\n    categoryDetails: categoryDetailsReducer,\r\n    banners: bannersReducer,\r\n    newBanner: newBannerReducer,\r\n    banner: bannerReducer,\r\n    bannerDetails: bannerDetailsReducer,\r\n})\r\n\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n}\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\nexport default store;","G:\\GR_Project_K63\\frontend\\src\\App.js",["380","381","382","383"],"import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Header from './components/layout/Header'\r\nimport Footer from './components/layout/Footer'\r\n\r\nimport Home from './pages/Home/Home'\r\nimport CourseDetails from './pages/Course/CourseDetails'\r\n\r\n// Cart Imports\r\nimport RegisterCourseList from './pages/RegisterCourse/RegisterCourseList'\r\nimport Cart from './components/cart/Cart'\r\nimport Shipping from './components/cart/Shipping'\r\nimport ConfirmOrder from './components/cart/ConfirmOrder'\r\nimport Payment from './components/cart/Payment'\r\nimport OrderSuccess from './components/cart/OrderSuccess'\r\n\r\n// Order Imports\r\nimport ListOrders from './components/order/ListOrders'\r\nimport OrderDetails from './components/order/OrderDetails'\r\n\r\n// Auth or User imports\r\nimport Login from './pages/User/Login'\r\nimport Register from './pages/User/Register'\r\nimport Profile from './pages/User/Profile'\r\nimport UpdateProfile from './pages/User/UpdateProfile'\r\nimport UpdatePassword from './pages/User/UpdatePassword'\r\nimport ForgotPassword from './pages/User/ForgotPassword'\r\nimport NewPassword from './pages/User/NewPassword'\r\n\r\n// Admin Imports\r\nimport Dashboard from './pages/Dashboard/Dashboard'\r\nimport CoursesList from './pages/Dashboard/Courses/CoursesList'\r\nimport NewCourse from './pages/Dashboard/Courses/NewCourse'\r\nimport UpdateCourse from './pages/Dashboard/Courses/UpdateCourse'\r\nimport OrdersList from './pages/Dashboard/OrdersList'\r\nimport ProcessOrder from './pages/Dashboard/ProcessOrder'\r\nimport UsersList from './pages/Dashboard/Users/UsersList'\r\nimport UpdateUser from './pages/Dashboard/Users/UpdateUser'\r\nimport CourseReviews from './pages/Dashboard/CourseReview/CourseReviews'\r\nimport NewLesson from './pages/Dashboard/Courses/Lesson/NewLesson'\r\nimport Lessons from './pages/Course/Lesson'\r\nimport ProtectedRoute from './components/route/ProtectedRoute'\r\nimport { loadUser } from './actions/userActions'\r\nimport { useSelector } from 'react-redux'\r\nimport store from './store'\r\nimport axios from 'axios'\r\n\r\n// Payment\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport NewTopic from './pages/Dashboard/Courses/Topic/NewTopic'\r\nimport NewQuiz from './pages/Dashboard/Courses/Quiz/NewQuiz'\r\nimport NewDocument from './pages/Dashboard/Courses/Document/NewDocument'\r\nimport CategoryList from './pages/Dashboard/Category/CategoryList'\r\nimport NewCategory from './pages/Dashboard/Category/NewCategory'\r\nimport UpdateCategory from './pages/Dashboard/Category/UpdateCategory'\r\nimport BannerList from './pages/Dashboard/Banner/BannerList'\r\nimport NewBanner from './pages/Dashboard/Banner/NewBanner'\r\nimport UpdateBanner from './pages/Dashboard/Banner/UpdateBanner'\r\n\r\nfunction App() {\r\n\r\n  const [stripeApiKey, setStripeApiKey] = useState('');\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser())\r\n\r\n    async function getStripApiKey() {\r\n      const { data } = await axios.get('/api/v1/stripeapi');\r\n\r\n      setStripeApiKey(data.stripeApiKey)\r\n    }\r\n\r\n    getStripApiKey();\r\n\r\n  }, [])\r\n\r\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\r\n\r\n  \r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"\">\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/search\" component={Home} />\r\n          <Route path=\"/course/:id\" component={CourseDetails} exact />\r\n          <Route path=\"/course/:id/lessons\"  component={Lessons} exact/>\r\n          <Route path=\"/registerCourse\" component={RegisterCourseList} exact />\r\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\r\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\r\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\r\n          {stripeApiKey &&\r\n            <Elements stripe={loadStripe(stripeApiKey)}>\r\n              <ProtectedRoute path=\"/payment\" component={Payment} />\r\n            </Elements>\r\n          }\r\n\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\r\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\r\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\r\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\r\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\r\n\r\n          <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\r\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\r\n        </div>\r\n\r\n        <ProtectedRoute path=\"/admin/courses\" isAdmin={true} component={Dashboard} exact />\r\n        <ProtectedRoute path=\"/me/courses\" isAdmin={false} component={CoursesList} exact />\r\n        <ProtectedRoute path=\"/me/course\" isAdmin={false} component={NewCourse} exact />\r\n        <ProtectedRoute path=\"/me/course/:id\" isAdmin={false} component={UpdateCourse} exact />\r\n        <ProtectedRoute path=\"/me/course/:id/lessons\" isAdmin={false} component={NewLesson} exact />\r\n        <ProtectedRoute path=\"/me/course/:id/documents\" isAdmin={false} component={NewDocument} exact />\r\n        <ProtectedRoute path=\"/me/course/:id/topics\" isAdmin={false} component={NewTopic} exact />\r\n        <ProtectedRoute path=\"/me/topic/:id/quizs\" isAdmin={false} component={NewQuiz} exact />\r\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\r\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\r\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\r\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\r\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={CourseReviews} exact />\r\n        <ProtectedRoute path=\"/admin/categories\" isAdmin={false} component={CategoryList} exact />\r\n        <ProtectedRoute path=\"/admin/category/new\" isAdmin={false} component={NewCategory} exact />\r\n        <ProtectedRoute path=\"/admin/category/update/:id\" isAdmin={false} component={UpdateCategory} exact />\r\n        <ProtectedRoute path=\"/admin/banners\" isAdmin={false} component={BannerList} exact />\r\n        <ProtectedRoute path=\"/admin/banner/new\" isAdmin={false} component={NewBanner} exact />\r\n        <ProtectedRoute path=\"/admin/banner/update/:id\" isAdmin={false} component={UpdateBanner} exact />\r\n\r\n       \r\n        <Footer />\r\n        \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\GR_Project_K63\\frontend\\src\\reducers\\notifyReducer.js",[],"G:\\GR_Project_K63\\frontend\\src\\reducers\\courseReducers.js",[],"G:\\GR_Project_K63\\frontend\\src\\reducers\\userReducers.js",[],"G:\\GR_Project_K63\\frontend\\src\\reducers\\cartReducers.js",[],"G:\\GR_Project_K63\\frontend\\src\\reducers\\registerCourseReducer.js",[],"G:\\GR_Project_K63\\frontend\\src\\reducers\\orderReducers.js",[],"G:\\GR_Project_K63\\frontend\\src\\reducers\\categoryReducer.js",[],"G:\\GR_Project_K63\\frontend\\src\\reducers\\bannerReducer.js",[],"G:\\GR_Project_K63\\frontend\\src\\actions\\userActions.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\cart\\Shipping.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\layout\\Footer.js",["384","385","386","387"],"import React, { Fragment, useEffect } from 'react'\r\nimport './index.css'\r\nimport { getCategories } from '../../actions/categoryAction'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nconst Footer = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { categories } = useSelector(state => state.categories);\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategories())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"footer-bottom-area bg-dark-light section-padding-sm\" style={{position:'relative', marginTop:'40px'}}>\r\n                <div className=\"container py-3\">\r\n                    <div className=\"row widgets footer-widgets\">\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-12 my-1\">\r\n                            <div className=\"single-widget widget-about\">\r\n                                <h5 className=\"widget-title\">Onraincoosu</h5>\r\n                                <img style={{width: '60px', marginBottom:'20px'}} src=\"/images/logo.png\" alt=\"Logo trang web\"/>\r\n                                <p>Bạn sẽ có một trải nghiệm học tập vô cùng tuyệt vời và <a href=\"/about\">Đọc thêm...</a></p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-12 my-1\">\r\n                            <div className=\"single-widget widget-quick-links\">\r\n                                <h5 className=\"widget-title\">Tài khoản của tôi</h5>\r\n                                <ul>\r\n                                {user && user.role === 'admin' && (\r\n                                    <li><Link to=\"/me/courses\">Dashboard</Link></li>\r\n                                )}\r\n                                {user && user.role === 'user' && (\r\n                                    <li><Link to=\"/me/courses\">Khóa học của tôi</Link></li>\r\n                                )}\r\n                                <li><Link to=\"/registerCourse\" >Khóa học đã đăng ký</Link></li>\r\n                                <li><Link to=\"/me\">Thông tin cá nhân</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-12 my-1\">\r\n                            <div className=\"single-widget widget-quick-links\">\r\n                                <h5 className=\"widget-title\">Danh mục các khóa học</h5>\r\n                                <ul>\r\n                                    {categories && categories.map((category) => (\r\n                                        <li><Link key={category._id}  to={`/search?keyword=&&category=${category.name}`} >{category.name}</Link></li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-6 col-12 my-1\">\r\n                            <div className=\"single-widget widget-contact\">\r\n                                <h5 className=\"widget-title\">Liên hệ với chúng tôi</h5>\r\n                                <ul>\r\n                                    <li className=\"address\">\r\n                                        <span className=\"icon\"><i className=\"fa fa-map-marker\"></i></span>\r\n                                        <p>Địa chỉ : 232 phố Kẻ Vẽ, phường Thụy Phương, quận Bắc Từ Liêm, Hà Nội.</p>\r\n                                    </li>\r\n                                    <li className=\"phone\">\r\n                                        <span className=\"icon\"><i className=\"fa fa-phone\"></i></span>\r\n                                        <p><a href=\"#\">+840123456789</a></p>\r\n                                    </li>\r\n                                    <li className=\"fax\">\r\n                                        <span className=\"icon\"><i className=\"fa fa-fax\"></i></span>\r\n                                        <p><a href=\"#\">+840123456789</a></p>\r\n                                    </li>\r\n                                    <li className=\"email\">\r\n                                        <span className=\"icon\"><i className=\"fa fa-envelope-o\"></i></span>\r\n                                        <p><a href=\"#\">onraincoosu@gmail.com</a></p>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n\r\n}\r\nexport default Footer\r\n","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\layout\\Header.js",["388","389"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\nimport { getMeNotifies, deleteAllNotifies } from '../../actions/notifyAction'\r\nimport Search from './Search'\r\nimport NotifyMe from './NotifyMe/NotifyMe'\r\nimport { DELETE_ALL_NOTIFIES_RESET } from '../../constants/notifyContants'\r\nimport '../../App.css'\r\nimport { getCategories } from '../../actions/categoryAction'\r\nimport './index.css'\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    const { categories } = useSelector(state => state.categories);\r\n    const { notifies, error, isDeleted } = useSelector(state => state.notifies)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Đăng xuất thành công.')\r\n    }\r\n\r\n    const deleteNotifiesHandler = () =>{\r\n        dispatch(deleteAllNotifies(user._id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategories());\r\n\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n        if(user)\r\n            dispatch(getMeNotifies(user._id))\r\n            \r\n        if (isDeleted) {\r\n                \r\n            dispatch({ type: DELETE_ALL_NOTIFIES_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error,user,isDeleted])\r\n\r\n    return (\r\n        \r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\" style={{color: 'white'}}>\r\n                        <Link to=\"/\">\r\n                            <img style={{width: '60px'}} src=\"/images/logo.png\" />\r\n                            Onraincoosu\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"ml-4 dropdown d-inline dropdown-hover\">\r\n                        <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <span>Thể loại</span>\r\n                        </Link>\r\n\r\n                        <div className=\"dropdown-menu dropdown-hover\" aria-labelledby=\"dropDownMenuButton\">\r\n                            {categories && categories.map((category) => (\r\n                                <Link key={category._id} className=\"dropdown-item\" to={`/search?keyword=&&category=${category.name}`} >{category.name}</Link>\r\n                            ))}\r\n                                    \r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center d-flex\">\r\n                    {/* <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link> */}\r\n                    \r\n\r\n\r\n                    {user ? (\r\n                        <>\r\n                            <span className='ml-3'>\r\n                                <NotifyMe\r\n                                    data={notifies.reverse()}\r\n                                    storageKey=\"notific_key\"\r\n                                    notific_key=\"createdAt\"\r\n                                    notific_value=\"content\"\r\n                                    heading=\"Thông báo\"\r\n                                    sortedByKey={false}\r\n                                    showDate={true}\r\n                                    size={24}\r\n                                    color=\"white\"\r\n                                    deleteNotifiesHandler={deleteNotifiesHandler}\r\n                                />\r\n                            </span>\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/me/courses\">Dashboard</Link>\r\n                                )}\r\n                                {user && user.role === 'user' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/me/courses\">Khóa học của tôi</Link>\r\n                                )}\r\n                                {/* <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link> */}\r\n                                <Link className=\"dropdown-item\" to=\"/registerCourse\" >Khóa học đã đăng ký</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Thông tin cá nhân</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Đăng xuất\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        </>\r\n                        \r\n                        \r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Đăng nhập</Link>}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\Payment.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\order\\ListOrders.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\order\\OrderDetails.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Home\\Home.js",["390"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport MetaData from '../../components/layout/MetaData'\r\nimport Course from '../Course/Course'\r\nimport Loader from '../../components/layout/Loader'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getCourses } from '../../actions/courseActions'\r\nimport { getCategories } from '../../actions/categoryAction';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getBanners } from '../../actions/bannerAction';\r\nimport Banner from '../../components/banner/Banner';\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\nconst useQuery = () => {\r\n    const { search } = useLocation();\r\n  \r\n    return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n\r\nconst Home = ({history}) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([0, 1000])\r\n    const [category, setCategory] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    const { categories } = useSelector(state => state.categories);\r\n    const { banners } = useSelector(state => state.banners)\r\n\r\n    let query = useQuery();\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, courses, error, coursesCount, resPerPage, filteredCoursesCount } = useSelector(state => state.courses)\r\n\r\n    \r\n    const keyword = query.get(\"keyword\") || \"\"\r\n    const categoryQuery = query.get(\"category\") || \"\"\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        dispatch(getCategories());\r\n        dispatch(getBanners());\r\n        \r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        if(categoryQuery){\r\n            dispatch(getCourses(keyword, currentPage, price, categoryQuery, rating));\r\n        }else{\r\n            dispatch(getCourses(keyword, currentPage, price, category, rating));\r\n        }\r\n        \r\n        \r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating,categoryQuery])\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n\r\n    const handleCategory = (categoryName) =>{\r\n        setCategory(categoryName)\r\n        history.push(`/search?keyword=${keyword}&&category=${categoryName}`)\r\n\r\n    }\r\n\r\n    let count = coursesCount;\r\n    if (keyword) {\r\n        count = filteredCoursesCount\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Onraincoosu - Hãy tận hưởng những khóa bổ ích'} />\r\n                    <Banner/>\r\n                    \r\n\r\n                    <section id=\"courses\" className=\"container mt-5\">\r\n                        <h1 id=\"courses_heading\">Khóa học mới nhất</h1>\r\n                        <div className=\"row\">\r\n\r\n                            {(keyword || categoryQuery) ? (\r\n                                <Fragment>\r\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                        <div className=\"px-5\">\r\n                                            <Range\r\n                                                marks={{\r\n                                                    0: `$0`,\r\n                                                    1000: `$1000`\r\n                                                }}\r\n                                                min={0}\r\n                                                max={1000}\r\n                                                defaultValue={[0, 1000]}\r\n                                                tipFormatter={value => `$${value}`}\r\n                                                tipProps={{\r\n                                                    placement: \"top\",\r\n                                                    visible: true\r\n                                                }}\r\n                                                value={price}\r\n                                                onChange={price => setPrice(price)}\r\n                                            />\r\n\r\n                                            <hr className=\"my-5\" />\r\n\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Danh mục\r\n                                                </h4>\r\n\r\n                                                <ul className=\"pl-0\">\r\n                                                    {categories && \r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            onClick={() => handleCategory(\"\")}\r\n                                                        >\r\n                                                            Tất cả\r\n                                                        </li>\r\n                                                    }\r\n                                                    {categories && categories.map(category => (\r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            key={category._id}\r\n                                                            onClick={() => handleCategory(category.name)}\r\n                                                        >\r\n                                                            {category.name}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                            <hr className=\"my-3\" />\r\n\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Ratings\r\n                                                </h4>\r\n\r\n                                                <ul className=\"pl-0\">\r\n                                                    {[5, 4, 3, 2, 1].map(star => (\r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            key={star}\r\n                                                            onClick={() => setRating(star)}\r\n                                                        >\r\n                                                            <div className=\"rating-outer\">\r\n                                                                <div className=\"rating-inner\"\r\n                                                                    style={{\r\n                                                                        width: `${star * 20}%`\r\n                                                                    }}\r\n                                                                >\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-md-9\">\r\n                                        <div className=\"row\">\r\n                                            {courses.map(course => (\r\n                                                <Course key={course._id} course={course} col={4} />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            ) : (\r\n                                    courses.map(course => (\r\n                                        <Course key={course._id} course={course} col={3} />\r\n                                    ))\r\n                                )}\r\n\r\n                        </div>\r\n                    </section>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={coursesCount}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Tiếp'}\r\n                                prevPageText={'Trước'}\r\n                                firstPageText={'Đầu tiên'}\r\n                                lastPageText={'Cuối cùng'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    \r\n\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Course\\CourseDetails.js",["391","392","393","394","395"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../../components/layout/Loader'\r\nimport MetaData from '../../components/layout/MetaData'\r\nimport ListReviews from '../../components/review/ListReviews'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCourseDetails, newReview, clearErrors } from '../../actions/courseActions'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/courseConstants'\r\nimport { deleteRegisterCourse, getMeRegisterCourses, newRegisterCourse } from '../../actions/registerCourseAction'\r\nimport { DELETE_REGISTER_COURSE_RESET, NEW_REGISTER_COURSE_RESET } from '../../constants/registerCourseContants'\r\nconst CourseDetails = ({ match }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, course } = useSelector(state => state.courseDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n    const { registerCourses } = useSelector(state => state.registerCourses)\r\n    const { success: newSuccess} = useSelector(state => state.newRegisterCourse)\r\n\r\n    const formatDate = (dateInput) =>{\r\n        const date = new Date(dateInput)\r\n        return \"ngày \" + ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + ' tháng ' + ((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + ' năm ' +  date.getFullYear()\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCourseDetails(match.params.id))\r\n        dispatch(getMeRegisterCourses())\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Đánh giá được đăng tải thành công')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n        if (newSuccess) {\r\n            alert.success('Đăng ký thành công')\r\n            dispatch({ type: NEW_REGISTER_COURSE_RESET })\r\n        }\r\n\r\n\r\n    }, [dispatch, alert, error, reviewError, match.params.id,success,newSuccess])\r\n\r\n\r\n\r\n    const addCourse = () =>{\r\n        dispatch(newRegisterCourse(match.params.id))\r\n    }\r\n\r\n\r\n    const isRegister = () =>{\r\n        for(let i =0; i < registerCourses.length; i++){\r\n            if(registerCourses[i].course === match.params.id){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = (e) => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        let formdata ={\r\n            rating,\r\n            comment,\r\n            courseId: match.params.id\r\n        }\r\n        formData.append('rating', rating);\r\n        formData.append('comment', comment);\r\n        formData.append('courseId', match.params.id);\r\n\r\n        dispatch(newReview(formdata));\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : course.details && (\r\n                <div className='container'>\r\n                    <MetaData title={course.details.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"course_image\">\r\n                            <Carousel pause='hover'>\r\n                                {course.details.images && course.details.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={course.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{course.details.name}</h3>\r\n                            <p id=\"course_id\">Khóa học # {course.details._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(course.details.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({course.details.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"course_price\">{course.details.price} ĐỒNG</p>\r\n                            {new Date() > new Date(course.details.startDate) && new Date() < new Date(course.details.endDate) ? \r\n                            <>\r\n                            {\r\n                                isRegister() ? \r\n                                <>\r\n                                <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" >Đã đăng ký</button>\r\n                                <Link to={`/course/${course.details._id}/lessons`}>\r\n                                    <button type=\"button\" id=\"cart_btn\" className=\"btn btn-danger d-inline ml-4\" >Xem khóa học</button>\r\n                                \r\n                                </Link>\r\n                                </>\r\n                                :\r\n                                <button onClick={() => addCourse()} type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" >Đăng ký học</button>}\r\n\r\n\r\n                            </>\r\n                            :\r\n                            <div className=\"alert alert-danger mt-5\" type='alert'>Khóa học hiện tại nằm ngoài khoảng thời gian khả dụng</div>\r\n                            }                           \r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Mô tả:</h4>\r\n                            <p>{course.details.description}</p>\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Thông tin tác giả:</h4>\r\n                            <p>Tên: {course.user.name}</p>\r\n                            <p>Email: {course.user.email}</p>\r\n                            <hr />\r\n                            {/* <p id=\"course_seller mb-3\">Sold by: <strong>{course.seller}</strong></p> */}\r\n\r\n                             <h4 className='mt-2'>Thời gian</h4>\r\n                             <p>Ngày bắt đầu: {formatDate(course.details.startDate)}</p> \r\n                             <p>Ngày kết thúc: {formatDate(course.details.endDate)}</p>       \r\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                Gửi đánh giá\r\n                            </button>\r\n                                :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Đăng nhập để viết đánh giá</div>\r\n                            }\r\n\r\n\r\n                            <div className=\"row mt-2 \">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Đánh giá</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={(e) => reviewHandler(e)} data-dismiss=\"modal\" aria-label=\"Close\">Gửi</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {course.details.reviews && course.details.reviews.length > 0 && (\r\n                        <ListReviews reviews={course.details.reviews} />\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CourseDetails\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Course\\Lesson.js",["396","397","398","399","400","401"],"import {useEffect, useState, useRef} from \"react\";\r\nimport Loader from '../../components/layout/Loader'\r\nimport ReactPlayer from 'react-player'\r\nimport { clearErrors, getCourseLessons, getCourseLesson, getCourseTopics, getTopicQuizs, getCourseDetails, getCourseDocuments, newReview } from '../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_LESSON_RESET,NEW_REVIEW_RESET } from '../../constants/courseConstants'\r\nimport { Collapse } from 'antd';\r\nimport { useAlert } from 'react-alert'\r\n\r\n\r\nimport './index.css'\r\nimport Quiz from \"../../components/quiz/Quiz\";\r\nimport ListReviews from \"../../components/review/ListReviews\";\r\nimport { NEW_REGISTER_COURSE_RESET } from \"../../constants/registerCourseContants\";\r\nimport { comleteVideo, completedVideo, getMeRegisterCourses } from \"../../actions/registerCourseAction\";\r\n\r\nconst Lessons = ({match}) => {\r\n  const { Panel } = Collapse;\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert()\r\n  const { loading, lessons,error } = useSelector(state => state.courseLessons)\r\n  const { error: lessonError, success } = useSelector(state => state.newLesson)\r\n  const {  topics } = useSelector(state => state.courseTopics)\r\n  const {  quizs } = useSelector(state => state.topicQuizs)\r\n  const { documents } = useSelector(state => state.docs)\r\n  const { error: reviewError, success:reviewSuccess } = useSelector(state => state.newReview)\r\n  const [index, setIndex] = useState(0)\r\n  const [indexTopic,setIndexTopic] = useState(0)\r\n  const [checked, setChecked] = useState([true])\r\n  const [checkedExercise, setCheckedExercise] = useState([false])\r\n  const [exercise,setExercise] = useState(false)\r\n  const { course } = useSelector(state => state.courseDetails)\r\n  const {user} = useSelector(state => state.auth)\r\n  const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n  const onChangeChecked = (index) =>{\r\n    \r\n    const newCheck = []\r\n    for( let i; i < lessons.length + 1; i++){\r\n      newCheck[i] = false;\r\n    }\r\n    newCheck[index] = true;\r\n    console.log(newCheck)\r\n    setChecked(newCheck)\r\n    setCheckedExercise([false])\r\n    setIndex(index);\r\n    \r\n  }\r\n\r\n  const onChangeCheckedExercise = (index) =>{\r\n    const newCheck = []\r\n    for( let i; i < topics.length; i++){\r\n      newCheck[i] = false;\r\n    } \r\n\r\n\r\n    newCheck[index] = true;\r\n    setCheckedExercise(newCheck)\r\n    setChecked([false])\r\n    console.log(newCheck,index)\r\n  }\r\n\r\n\r\n  const openInNewTab = (url) => {\r\n    window.open(url, '_blank', 'noreferrer');\r\n  };\r\n\r\n  const { completeVideos } = useSelector(state => state.registerCourses)\r\n  const { success: complete } = useSelector(state => state.newRegisterCourse)\r\n  const { isUpdated } = useSelector(state => state.registerCourse)\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourseLessons(match.params.id))\r\n    dispatch(getCourseTopics(match.params.id))\r\n    dispatch(getCourseDetails(match.params.id))\r\n    dispatch(getCourseDocuments(match.params.id))\r\n    dispatch(getMeRegisterCourses())\r\n    \r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    if (lessonError) {\r\n        alert.error(lessonError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Đăng tải thành công')\r\n        dispatch({ type: NEW_LESSON_RESET })\r\n    }\r\n    if (reviewError) {\r\n      alert.error(reviewError);\r\n      dispatch(clearErrors())\r\n  }\r\n\r\n  if (reviewSuccess) {\r\n      alert.success('Đánh giá được đăng tải thành công')\r\n      dispatch({ type: NEW_REVIEW_RESET })\r\n  } \r\n  \r\n  if (complete || isUpdated) {\r\n    dispatch({type: NEW_REGISTER_COURSE_RESET})\r\n  }\r\n   \r\n}, [dispatch, alert, error,lessonError,success,match.params.id,checked,checkedExercise,reviewSuccess,complete,isUpdated])\r\n  \r\n\r\nfunction setUserRatings() {\r\n  const stars = document.querySelectorAll('.star');\r\n\r\n  stars.forEach((star, index) => {\r\n      star.starValue = index + 1;\r\n\r\n      ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n          star.addEventListener(e, showRatings);\r\n      })\r\n  })\r\n\r\n  function showRatings(e) {\r\n      stars.forEach((star, index) => {\r\n          if (e.type === 'click') {\r\n              if (index < this.starValue) {\r\n                  star.classList.add('orange');\r\n\r\n                  setRating(this.starValue)\r\n              } else {\r\n                  star.classList.remove('orange')\r\n              }\r\n          }\r\n\r\n          if (e.type === 'mouseover') {\r\n              if (index < this.starValue) {\r\n                  star.classList.add('yellow');\r\n              } else {\r\n                  star.classList.remove('yellow')\r\n              }\r\n          }\r\n\r\n          if (e.type === 'mouseout') {\r\n              star.classList.remove('yellow')\r\n          }\r\n      })\r\n  }\r\n}\r\n\r\nconst reviewHandler = (e) => {\r\n  e.preventDefault();\r\n  let formData = new FormData();\r\n  let formdata ={\r\n      rating,\r\n      comment,\r\n      courseId: match.params.id\r\n  }\r\n  formData.append('rating', rating);\r\n  formData.append('comment', comment);\r\n  formData.append('courseId', match.params.id);\r\n\r\n  dispatch(newReview(formdata));\r\n}\r\n\r\nconst checkCompleteVideo = (mediaId) =>{\r\n  if(user && completeVideos){\r\n    for(let i = 0; i < completeVideos.length; i++){\r\n      if(completeVideos[i].user === user._id && completeVideos[i].media === mediaId){\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n\r\nconst checkCompleteTopic = (videoData) =>{\r\n  for(let i = 0;i < completeVideos.length; i++){\r\n    if(completeVideos.user === user._id && completeVideos.topic === videoData.topic){\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst checkCompletedVideo = (mediaId) =>{\r\n  if(completeVideos && user){\r\n    for(let i = 0; i < completeVideos.length; i++){\r\n      if(completeVideos[i].user === user._id && completeVideos[i].completed && completeVideos[i].media === mediaId){\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n\r\nconst checkCompletedTopic = (topicId) =>{\r\n  if(completeVideos && user){\r\n    const completedVideos = completeVideos.filter(item => item.topic === topicId && item.user === user._id)\r\n    if(completedVideos.length === 0){\r\n      return false;\r\n    }\r\n    for(let i = 0; i < completedVideos.length;  i++){\r\n      if(!completedVideos[i].completed){\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n}\r\n\r\n\r\nreturn (\r\n    <>\r\n        {loading  ? <Loader/> :\r\n        <div className=\"container\">        \r\n        <div className=\"row mt-5\">\r\n        {exercise === false && lessons.length !== 0 &&\r\n              <div className=\"col-md-8\">\r\n                <video\r\n                    onEnded={() => {\r\n                      if(lessons[index +1]){\r\n                        let data={\r\n                          course: match.params.id,\r\n                          topic: lessons[index + 1].topicId,\r\n                          media: lessons[index + 1]._id\r\n                        }\r\n                        dispatch(comleteVideo(data))\r\n                      }\r\n\r\n\r\n                      let tmp={\r\n                        course: match.params.id,\r\n                        topic: lessons[index].topicId,\r\n                        media: lessons[index]._id\r\n                      }\r\n                     \r\n                      dispatch(completedVideo(tmp))\r\n                    }}\r\n                    controls\r\n                  >\r\n                    <source src={ lessons[index] ? lessons[index].videos : \"\"} />\r\n                </video>\r\n            \r\n              </div>\r\n            } \r\n\r\n            {exercise ? <Quiz quizs={quizs}/> : ''}\r\n      <div className=\"col-md-4\">\r\n          <div className=\"season_tabs\">\r\n            {topics[indexTopic] &&\r\n            <Collapse defaultActiveKey={[topics[indexTopic]._id]}>\r\n            {topics && topics.map((topic,indexTopic) => {\r\n              return (\r\n                <Panel  header={topic.name} key={topic._id}>\r\n                   {lessons &&\r\n                    lessons.map((lesson,index) => {\r\n                      if(lesson.topicId === topic._id){\r\n                        return (\r\n                          <>\r\n                            {checkCompleteVideo(lesson._id) ? \r\n                            <div key={lesson._id} className=\"season_tab\">\r\n                            {index === 0 ? \r\n                              <input  onChange={() => {onChangeChecked(index);setIndexTopic(indexTopic);setExercise(false)}} type=\"radio\" id={`tab-${index+1}`} name={`tab-group-1`} checked={checked[0]}/> \r\n                              :<input onChange={() => {onChangeChecked(index);setIndexTopic(indexTopic);setExercise(false)}} type=\"radio\" id={`tab-${index+1}`} name={`tab-group-1`} checked={checked[index]}/>\r\n                              }\r\n                          \r\n                            <label className=\"d-flex justify-content-between\" htmlFor={`tab-${index+1}`}>\r\n                              <span>{lesson.name}</span>\r\n                              {checkCompletedVideo(lesson._id) ?\r\n                              <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i> : \"\"\r\n                              }\r\n                            </label>\r\n                            \r\n  \r\n                              \r\n                            </div>\r\n                            :\r\n  \r\n                            <div key={lesson._id} className=\"season_tab video-lock\">\r\n                          \r\n                            <label className=\"d-flex justify-content-between\" htmlFor={`tab-${index+1}`}>\r\n                              <span>{lesson.name}</span>\r\n                              <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                            </label>\r\n                            \r\n  \r\n                              \r\n                            </div>\r\n                          }\r\n  \r\n                          </>\r\n  \r\n                        );\r\n                        \r\n                      }\r\n\r\n                    })}\r\n                  {\r\n                  checkCompletedTopic(topic._id) ?  \r\n                  <div className=\"season_tab\">\r\n                      <input  onChange={() => {setExercise(true) ; dispatch(getTopicQuizs(topic._id)); onChangeCheckedExercise(indexTopic);setIndexTopic(indexTopic)}} type=\"radio\" id={`tabb-${indexTopic}`} name={`tab-group-1`} checked={checkedExercise[indexTopic]}/> \r\n                    <label className=\"d-flex justify-content-between\" htmlFor={`tabb-${indexTopic}`}>\r\n                        <span>Bài tập</span>\r\n                        \r\n                    </label>\r\n                    \r\n                      \r\n                  </div>\r\n                  :\r\n                  <div className=\"season_tab video-lock\"> \r\n                    <label className=\"d-flex justify-content-between\" htmlFor={`tabb-${indexTopic}`}>\r\n                        <span>Bài tập</span>\r\n                        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                        \r\n                    </label>\r\n                    \r\n                      \r\n                  </div>\r\n                  }\r\n                </Panel>\r\n              )\r\n            })}\r\n            </Collapse>\r\n            }\r\n          </div>\r\n      </div>\r\n\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"col-md-8 mt-3\">\r\n            {documents &&\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n              \r\n                <th>Bài giảng</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n              <td>\r\n              {\r\n                documents.map((document) => {\r\n                  return (\r\n                    <>\r\n                        {document.docs.map((doc) => {\r\n                          return (\r\n                            <>\r\n                              <button\r\n                                style={{width:'100px',height:'100px',marginRight:'10px',background:'white'}}\r\n                                role=\"link\"\r\n                                onClick={() => openInNewTab(`http://localhost:4000${doc}`)}\r\n                              >\r\n                                <i style={{fontSize:'40px',color:'red'}} className=\"fa fa-file-pdf-o \" aria-hidden=\"true\"></i>\r\n                                <div>{document.name}</div>\r\n                              </button>\r\n  \r\n                            </>\r\n\r\n                          );\r\n                        })}\r\n\r\n                    </>\r\n                  );\r\n                })}\r\n                </td>\r\n                </tr>\r\n            </tbody>\r\n          </table>\r\n          }\r\n          </div>\r\n          <div className=\"mt-5\">\r\n            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mb-2\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n            Gửi đánh giá\r\n            </button>\r\n                                :\r\n            <div className=\"alert alert-danger mt-5\" type='alert'>Đăng nhập để viết đánh giá</div>\r\n            }\r\n            <div className=\"row mt-2\" style={{height:'0px'}}>\r\n              <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Đánh giá</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={(e) => reviewHandler(e)} data-dismiss=\"modal\" aria-label=\"Close\">Gửi</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n            </div>\r\n            \r\n            {course.details && course.details.reviews && course.details.reviews.length > 0 && (\r\n              <ListReviews reviews={course.details.reviews} />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n\r\n    \r\n      </div>\r\n\r\n         }\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default Lessons;\r\n","G:\\GR_Project_K63\\frontend\\src\\components\\cart\\Cart.js",["402"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.course}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/courses/${item.course}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.course, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.course, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.course)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\RegisterCourse\\RegisterCourseList.js",["403","404","405","406"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../../components/layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\nimport { getMeRegisterCourses,newRegisterCourse,deleteRegisterCourse } from '../../actions/registerCourseAction'\r\nimport { useEffect } from 'react'\r\nimport { DELETE_REGISTER_COURSE_RESET } from '../../constants/registerCourseContants'\r\nconst CourseList = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { registerCourses } = useSelector(state => state.registerCourses)\r\n\r\n    const alert = useAlert();\r\n\r\n    const { isDeleted } = useSelector(state => state.registerCourse)\r\n\r\n    const removeCourseHandler = (id) => {\r\n        dispatch(deleteRegisterCourse(id))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(getMeRegisterCourses())\r\n        if(isDeleted){\r\n            alert.success('Khóa học đã được bỏ đăng ký')\r\n            dispatch({ type: DELETE_REGISTER_COURSE_RESET })\r\n        }\r\n    },[dispatch,isDeleted])\r\n\r\n\r\n    // const checkoutHandler = () => {\r\n    //     history.push('/login?redirect=shipping')\r\n    // }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <MetaData title={'Your Cart'} />\r\n            {registerCourses && registerCourses.length !== 0 ?  (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Số lượng đã đăng ký: <b>{registerCourses? registerCourses.length: 0} khóa học</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-12\">\r\n\r\n                            {registerCourses && registerCourses.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.course}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.images[0].url} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-6 col-lg-3\" style={{fontSize:'30px'}}>\r\n                                                <Link to={`/course/${item.course}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCourseHandler(item._id)} >\r\n                                                    {' '}Hủy Đăng ký\r\n                                                </i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n{/* \r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{registerCourses.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${registerCourses.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                </Fragment>\r\n            ): <h2 className=\"mt-5\">Bạn chưa đăng ký khóa học nào</h2> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseList\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\Register.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\User\\Profile.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\User\\UpdatePassword.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\User\\UpdateProfile.js",["407"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../../components/layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Thông tin đã được cập nhật thành công')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('email', email);\r\n        //formData.append('avatar', avatar);\r\n        for (let key in avatar) {\r\n            formData.append('avatar', avatar[key]);\r\n        }\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(e.target.files)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Cập nhật thông tin'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Cập nhật thông tin</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Tên</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Ảnh đại diện</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Chọn ảnh đại diện\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Cập nhật</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\ForgotPassword.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\User\\Login.js",["408"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/layout/Loader'\r\nimport MetaData from '../../components/layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n            \r\n        }\r\n       \r\n        if (error) {\r\n           \r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Đăng nhập'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Đăng nhập</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Mật khẩu</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Quên mật khẩu?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    ĐĂNG NHẬP\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">Tạo tài khoản mới?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\User\\NewPassword.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\OrdersList.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\CoursesList.js",["409","410"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../../../components/layout/MetaData'\r\nimport Loader from '../../../components/layout/Loader'\r\nimport Sidebar from '../Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getMeCourses, getAdminCourses, deleteCourse, clearErrors, acceptCourse } from '../../../actions/courseActions'\r\nimport { DELETE_COURSE_RESET,  UPDATE_COURSE_RESET } from '../../../constants/courseConstants'\r\n\r\n\r\nconst CoursesList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.auth)\r\n    const { loading, error, courses } = useSelector(state => state.courses);\r\n    const { error: deleteError, isDeleted, isUpdated } = useSelector(state => state.course)\r\n\r\n    const deleteCourseHandler = (id) => {\r\n        dispatch(deleteCourse(id))\r\n    }\r\n\r\n    const acceptCourseHandler = (id) =>{\r\n        dispatch(acceptCourse(id,courses))\r\n    }\r\n    useEffect(() => {\r\n        if(user.role === 'user')\r\n            dispatch(getMeCourses(user._id));\r\n        else\r\n            dispatch(getAdminCourses());\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Xóa khóa học thành công');\r\n            history.push('/me/courses');\r\n            dispatch({ type: DELETE_COURSE_RESET })\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Phê duyệt thành công');\r\n            dispatch({ type: UPDATE_COURSE_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, deleteError, isDeleted, isUpdated, history])\r\n\r\n    const setCourses = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Tên',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Giá thành',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Các chủ đề',\r\n                    field: 'topics',\r\n                },\r\n                {\r\n                    label: 'Các bài học',\r\n                    field: 'lessons',\r\n                },\r\n                {\r\n                    label: 'Tài liệu',\r\n                    field: 'documents',\r\n                },\r\n                {\r\n                    label: 'Thao tác',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        !!courses && courses.forEach(course => {\r\n            data.rows.push({\r\n                id: course._id,\r\n                name: course.name,\r\n                price: `$${course.price}`,\r\n                lessons: <Fragment>\r\n                    <Link to={`/me/course/${course._id}/lessons`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                </Fragment>,\r\n                documents: <Fragment>\r\n                    <Link to={`/me/course/${course._id}/documents`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                </Fragment>,\r\n                topics: <Fragment>\r\n                    <Link to={`/me/course/${course._id}/topics`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                </Fragment>,\r\n                actions: <Fragment>\r\n                    <Link to={`/me/course/${course._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteCourseHandler(course._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                    {user.role === 'admin' && course.accepted ===true &&\r\n                        <button className=\"btn btn-success py-1 px-2 ml-2\">\r\n                            Đã phê duyệt\r\n                        </button>\r\n                    }\r\n                    {user.role === 'admin' && course.accepted === false &&\r\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => acceptCourseHandler(course._id)}>\r\n                            Phê duyệt\r\n                        </button>\r\n                    }\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Tất cả các khóa học'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">Tất cả các khóa học của tôi</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setCourses()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CoursesList\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\UpdateCourse.js",["411","412"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../../../components/layout/MetaData'\r\nimport Sidebar from '../Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateCourse, getCourseDetails, clearErrors } from '../../../actions/courseActions'\r\nimport { UPDATE_COURSE_RESET } from '../../../constants/courseConstants'\r\nimport moment from 'moment'\r\nimport { getCategories } from '../../../actions/categoryAction'\r\nconst UpdateCourse = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { categories } = useSelector(state => state.categories);\r\n    const { error, course } = useSelector(state => state.courseDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.course);\r\n\r\n    const courseId = match.params.id;\r\n\r\n    console.log(course);\r\n    useEffect(() => {\r\n        dispatch(getCategories());\r\n        dispatch(getCourseDetails(match.params.id));\r\n        \r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (updateError) {\r\n            alert.error(updateError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/me/courses');\r\n            alert.success('Cập nhật khóa học thành công');\r\n            dispatch({ type: UPDATE_COURSE_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, history, updateError,match])\r\n\r\n\r\n    const onChangeStartDate = e => {\r\n        const newDate = moment(new Date(e.target.value)).format('YYYY-MM-DD');\r\n        setStartDate(newDate);\r\n        \r\n      };\r\n\r\n      \r\n    const onChangeEndDate = e => {\r\n        const newDate = moment(new Date(e.target.value)).format('YYYY-MM-DD');\r\n        setEndDate(newDate);\r\n        \r\n      };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name? name: course.details.name);\r\n        formData.append('price',  price ? price: course.details.price);\r\n        formData.append('description', description ? description : course.details.description);\r\n        formData.append('category', category ? category : course.details.category);\r\n\r\n        formData.append('startDate',startDate ? startDate : course.details.startDate);\r\n        formData.append('endDate',endDate ? endDate : course.details.endDate);\r\n\r\n        \r\n\r\n        if(images.length > 0){\r\n            for (let key in images) {\r\n                formData.append(\"images\", images[key]);\r\n            }\r\n            \r\n        }\r\n\r\n        // const data = {\r\n        //     name: name? name: course.details.name,\r\n        //     price: price ? price: course.details.price,\r\n        //     description:  description ? description : course.details.description,\r\n        //     category: category ? category : course.details.category,\r\n        //     images:images.length > 0 ? images : course.details.images,\r\n        //     startDate: startDate ? startDate : course.details.startDate,\r\n        //     endDate: endDate ? endDate : course.details.endDate\r\n        // }\r\n        \r\n        dispatch(updateCourse(course.details._id, formData))\r\n    }\r\n\r\n    //console.log(new Date(course.details.startDate).toJSON().slice(0,10).split('-').reverse().join('/'));\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n        \r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n        \r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview([reader.result])\r\n                    setImages(e.target.files)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Course'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        {course && course.details &&\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Cập nhật khóa học</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Tên</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={course.details.name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Giá</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={course.details.price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Mô tả</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Danh mục</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" defaultValue={course.details.category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories && categories.map(category => (\r\n                                            <option key={category._id} value={category.name} >{category.name}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label htmlFor='startDate_field'>Ngày bắt đầu</label>\r\n                                    <input\r\n                                        type='date'\r\n                                        id='startDate_field'\r\n                                        className='form-control'\r\n                                        defaultValue={course.details.startDate ? new Date(course.details.startDate).toISOString().substr(0, 10) :\"\"}\r\n                                        onChange={onChangeStartDate}\r\n                                    />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <label htmlFor='startDate_field'>Ngày kết thúc</label>\r\n                                    <input\r\n                                        type='date'\r\n                                        id='endDate_field'\r\n                                        className='form-control'\r\n                                        defaultValue={course.details.endDate ? new Date(course.details.endDate).toISOString().substr(0, 10) : \"\"}\r\n                                        onChange={onChangeEndDate}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Ảnh</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            accept='.png ,.jpg ,.jpeg'\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Chọn ảnh\r\n                                 </label>\r\n                                    </div>\r\n\r\n                                    {course.details.images && course.details.images.map(img => (\r\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CẬP NHẬT\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                        }\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateCourse\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\NewCourse.js",["413"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../../../components/layout/MetaData'\r\nimport Sidebar from '../Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newCourse, clearErrors } from '../../../actions/courseActions'\r\nimport { NEW_COURSE_RESET } from '../../../constants/courseConstants'\r\n\r\nimport { getCategories } from '../../../actions/categoryAction'\r\n\r\n\r\nconst NewCourse = ({ history }) => {\r\n\r\n    const { categories } = useSelector(state => state.categories);\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('Công nghệ thông tin');\r\n    const [images, setImages] = useState([]);\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n   \r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    // const categories = [\r\n    //     'Công nghệ thông tin',\r\n    //     'Ngoại ngữ'\r\n    // ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newCourse);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategories());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/me/courses');\r\n            alert.success('Tạo khóa học thành công');\r\n            dispatch({ type: NEW_COURSE_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', price);\r\n        formData.append('description', description);\r\n        formData.append('category', category);\r\n        formData.append('startDate',startDate);\r\n        formData.append('endDate',endDate);\r\n\r\n        for (let key in images) {\r\n            formData.append(\"images\", images[key]);\r\n        }\r\n\r\n        console.log(images)\r\n        const data = {name,price,description,category,images}\r\n\r\n        //console.log(images)\r\n    \r\n        \r\n\r\n        dispatch(newCourse(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])  \r\n                    setImages(e.target.files)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Khóa học mới'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Khóa học mới</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Tên</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Giá</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Mô tả</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Danh mục</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories && categories.map(category => (\r\n                                            <option key={category._id} value={category.name} >{category.name}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label htmlFor='startDate_field'>Ngày bắt đầu</label>\r\n                                    <input\r\n                                        type='date'\r\n                                        id='startDate_field'\r\n                                        className='form-control'\r\n                                        onChange={(e) => setStartDate(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <label htmlFor='startDate_field'>Ngày kết thúc</label>\r\n                                    <input\r\n                                        type='date'\r\n                                        id='endDate_field'\r\n                                        className='form-control'\r\n                                        onChange={(e) => setEndDate(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Ảnh đại diện</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            //multiple\r\n                                            accept=\".png, .jpeg, .jpg\"\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Chọn ảnh\r\n                                     </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    TẠO MỚI\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewCourse\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Lesson\\NewLesson.js",["414","415"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport UploadForm from \"./UploadForm\";\r\nimport UploadsList from \"./UploadsList\";\r\nimport Loader from '../../../../components/layout/Loader'\r\nimport MetaData from \"../../../../components/layout/MetaData\";\r\nimport Sidebar from '../../Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport {  newLesson, clearErrors, getCourseLessons, deleteLesson, getCourseTopics } from '../../../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_LESSON_RESET,DELETE_LESSON_RESET } from '../../../../constants/courseConstants'\r\n\r\nconst NewLesson = ({match}) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, lessons,error } = useSelector(state => state.courseLessons)\r\n  const { error: lessonError, success } = useSelector(state => state.newLesson)\r\n  const { error: deleteError, isDeleted } = useSelector(state => state.lesson)\r\n  const {  topics } = useSelector(state => state.courseTopics)\r\n  useEffect(() => {\r\n    dispatch(getCourseLessons(match.params.id))\r\n\r\n    dispatch(getCourseTopics(match.params.id))\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    if (lessonError) {\r\n        alert.error(lessonError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Đăng tải thành công')\r\n        dispatch({ type: NEW_LESSON_RESET })\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n        alert.success('Xóa thành công');\r\n        dispatch({ type: DELETE_LESSON_RESET })\r\n    }\r\n\r\n}, [dispatch, alert, error,lessonError,success,deleteError, isDeleted, match.params.id])\r\n\r\nconsole.log(topics);\r\n  const deleteLessonHandler = (id) => {\r\n    dispatch(deleteLesson(id))\r\n  }\r\n  return (\r\n    <>\r\n      <MetaData title={'Những bài học mới'} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <UploadForm topics={topics} courseId={match.params.id} newLesson={newLesson}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                }}\r\n              >\r\n                {loading ? <Loader /> :\r\n                <div className=\"card-body\">\r\n                  <UploadsList  medias={lessons} deleteLessonHandler={deleteLessonHandler} />\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewLesson;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Dashboard.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\CourseReview\\CourseReviews.js",["416"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../../../components/layout/MetaData'\r\nimport Loader from '../../../components/layout/Loader'\r\nimport Sidebar from '../Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCourseReviews, deleteReview, clearErrors } from '../../../actions/courseActions'\r\nimport { DELETE_REVIEW_RESET } from '../../../constants/courseConstants'\r\n\r\nconst CourseReviews = () => {\r\n\r\n    const [courseId, setCourseId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.courseReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (courseId !== '') {\r\n            dispatch(getCourseReviews(courseId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Xóa bình luận thành công');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, courseId, isDeleted, deleteError])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, courseId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getCourseReviews(courseId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Đánh giá',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Bình luận',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Người dùng',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Thao tác',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Course Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"courseId_field\">Nhập mã khóa học</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"courseId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={courseId}\r\n                                            onChange={(e) => setCourseId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        TÌM KIẾM\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">Không có bình luận nào</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CourseReviews\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Quiz\\NewQuiz.js",["417","418"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Loader from '../../../../components/layout/Loader'\r\nimport MetaData from \"../../../../components/layout/MetaData\";\r\nimport Sidebar from '../../Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport {   clearErrors, deleteQuiz, getTopicQuizs, newQuiz } from '../../../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_QUIZ_RESET,DELETE_QUIZ_RESET, UPDATE_QUIZ_RESET } from '../../../../constants/courseConstants'\r\nimport QuizForm from \"./QuizForm\";\r\nimport QuizList from \"./QuizList\";\r\n\r\nconst NewQuiz = ({match}) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, quizs,error } = useSelector(state => state.topicQuizs)\r\n  const { error: quizError, success } = useSelector(state => state.newQuiz)\r\n  const { error: crudError, isDeleted, isUpdated } = useSelector(state => state.quiz)\r\n  console.log(quizs)\r\n  useEffect(() => {\r\n    dispatch(getTopicQuizs(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    if (quizError) {\r\n        alert.error(quizError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Thành công')\r\n        dispatch({ type: NEW_QUIZ_RESET })\r\n    }\r\n\r\n    if (crudError) {\r\n      alert.error(crudError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n        alert.success('Xóa thành công');\r\n        dispatch({ type: DELETE_QUIZ_RESET })\r\n    }\r\n    if (isUpdated) {\r\n      alert.success('Cập nhật thành công');\r\n      dispatch({ type: UPDATE_QUIZ_RESET })\r\n  }\r\n\r\n}, [dispatch, alert, error,quizError,success,crudError, isDeleted,isUpdated, match.params.id])\r\n\r\n  const deleteQuizHandler = (id) => {\r\n    dispatch(deleteQuiz(id))\r\n  }\r\n  return (\r\n    <>\r\n      <MetaData title={'Những bài học mới'} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <QuizForm topicId={match.params.id}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                {loading ? <Loader /> :\r\n                <div className=\"card-body\">\r\n                  <QuizList  quizs={quizs} deleteQuizHandler={deleteQuizHandler} />\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewQuiz;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Users\\UpdateUser.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Document\\NewDocument.js",["419"],"import React, { useState, useEffect } from \"react\";\r\nimport Loader from '../../../../components/layout/Loader'\r\nimport MetaData from \"../../../../components/layout/MetaData\";\r\nimport Sidebar from '../../Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport {  newDocument, clearErrors, getCourseDocuments, deleteDocument, getCourseTopics } from '../../../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_DOCUMENT_RESET,DELETE_DOCUMENT_RESET } from '../../../../constants/courseConstants'\r\nimport DocumentForm from \"./DocumentForm\";\r\nimport DocumentList from \"./DocumentList\";\r\n\r\nconst NewDocument = ({match}) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, documents,error } = useSelector(state => state.docs)\r\n  const { error: docError, success } = useSelector(state => state.newDoc)\r\n  const { error: deleteError, isDeleted } = useSelector(state => state.doc)\r\n  const {  topics } = useSelector(state => state.courseTopics)\r\n  useEffect(() => {\r\n    dispatch(getCourseDocuments(match.params.id))\r\n\r\n    dispatch(getCourseTopics(match.params.id))\r\n    \r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    if (docError) {\r\n        alert.error(docError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Đăng tải thành công')\r\n        dispatch({ type: NEW_DOCUMENT_RESET })\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n        alert.success('Xóa thành công');\r\n        dispatch({ type: DELETE_DOCUMENT_RESET })\r\n    }\r\n\r\n}, [dispatch, alert, error,docError,success,deleteError, isDeleted, match.params.id])\r\n\r\n\r\n  const deleteDocumentHandler = (id) => {\r\n    dispatch(deleteDocument(id))\r\n  }\r\n  return (\r\n    <>\r\n      <MetaData title={'Những tài liệu mới'} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <DocumentForm topics={topics} courseId={match.params.id} newDocument={newDocument}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                }}\r\n              >\r\n                {loading ? <Loader /> :\r\n                <div className=\"card-body\">\r\n                  <DocumentList  documents={documents} deleteDocumentHandler={deleteDocumentHandler} />\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewDocument;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Topic\\NewTopic.js",["420","421"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Loader from '../../../../components/layout/Loader'\r\nimport MetaData from \"../../../../components/layout/MetaData\";\r\nimport Sidebar from '../../Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport {  newTopic, clearErrors, getCourseTopics, deleteTopic,updateTopic } from '../../../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_TOPIC_RESET,DELETE_TOPIC_RESET, UPDATE_TOPIC_RESET } from '../../../../constants/courseConstants'\r\nimport TopicForm from \"./TopicForm\";\r\nimport TopicList from \"./TopicList\";\r\n\r\nconst NewTopic = ({match}) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, topics,error } = useSelector(state => state.courseTopics)\r\n  const { error: topicError, success } = useSelector(state => state.newTopic)\r\n  const { error: crudError, isDeleted, isUpdated } = useSelector(state => state.topic)\r\n  useEffect(() => {\r\n    dispatch(getCourseTopics(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    if (topicError) {\r\n        alert.error(topicError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Đăng tải thành công')\r\n        dispatch({ type: NEW_TOPIC_RESET })\r\n    }\r\n\r\n    if (crudError) {\r\n      alert.error(crudError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n        alert.success('Xóa thành công');\r\n        dispatch({ type: DELETE_TOPIC_RESET })\r\n    }\r\n    if (isUpdated) {\r\n      alert.success('Cập nhật thành công');\r\n      dispatch({ type: UPDATE_TOPIC_RESET })\r\n  }\r\n\r\n}, [dispatch, alert, error,topicError,success,crudError, isDeleted,isUpdated, match.params.id])\r\n\r\n  const deleteTopicHandler = (id) => {\r\n    dispatch(deleteTopic(id))\r\n  }\r\n  return (\r\n    <>\r\n      <MetaData title={'Những bài học mới'} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <TopicForm courseId={match.params.id} newTopic={newTopic}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                {loading ? <Loader /> :\r\n                <div className=\"card-body\">\r\n                  <TopicList  topics={topics} deleteTopicHandler={deleteTopicHandler} />\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTopic;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Category\\UpdateCategory.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Category\\CategoryList.js",["422","423"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../../../components/layout/MetaData'\r\nimport Loader from '../../../components/layout/Loader'\r\nimport Sidebar from '../Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { clearErrors, deleteCategory, getCategories } from '../../../actions/categoryAction'\r\nimport { DELETE_CATEGORY_RESET, UPDATE_CATEGORY_RESET } from '../../../constants/categoryConstant'\r\n\r\n\r\nconst CategoryList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.auth)\r\n    const { loading, error, categories } = useSelector(state => state.categories);\r\n    const { error: deleteError, isDeleted, isUpdated } = useSelector(state => state.category)\r\n\r\n    const deleteCategoryHandler = (id) => {\r\n        dispatch(deleteCategory(id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user.role === 'admin')\r\n            dispatch(getCategories());\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Xóa thể loại thành công');\r\n            history.push('/admin/categories');\r\n            dispatch({ type: DELETE_CATEGORY_RESET })\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Phê duyệt thành công');\r\n            dispatch({ type: UPDATE_CATEGORY_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, deleteError, isDeleted, isUpdated, history])\r\n\r\n    const setCategories = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Tên',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Thao tác',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        !!categories && categories.forEach(category => {\r\n            data.rows.push({\r\n                id: category._id,\r\n                name: category.name,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/banner/update/${category._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteCategoryHandler(category._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Tất cả các thể loại'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">Tất cả các thể loại</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setCategories()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CategoryList\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Category\\NewCategory.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Banner\\NewBanner.js",["424"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../../../components/layout/MetaData'\r\nimport Sidebar from '../Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { clearErrors, getBanners, newBanner } from '../../../actions/bannerAction'\r\nimport { NEW_BANNER_RESET } from '../../../constants/bannerConstant'\r\n\r\n\r\nconst NewBanner = ({ history }) => {\r\n\r\n   \r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newBanner);\r\n\r\n    useEffect(() => {\r\n        dispatch(getBanners());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/admin/banners');\r\n            alert.success('Tạo banner thành công');\r\n            dispatch({ type: NEW_BANNER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n\r\n        for (let key in images) {\r\n            formData.append(\"images\", images[key]);\r\n        }\r\n\r\n        const data = {images}\r\n        \r\n\r\n        dispatch(newBanner(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])  \r\n                    setImages(e.target.files)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Banner mới'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Banner mới</h1>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Ảnh Banner</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            //multiple\r\n                                            accept=\".png, .jpeg, .jpg\"\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Chọn ảnh\r\n                                     </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"600\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    TẠO MỚI\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewBanner\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\ProcessOrder.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Banner\\BannerList.js",["425","426","427"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../../../components/layout/MetaData'\r\nimport Loader from '../../../components/layout/Loader'\r\nimport Sidebar from '../Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { DELETE_BANNER_RESET, UPDATE_BANNER_RESET } from '../../../constants/bannerConstant'\r\nimport { clearErrors, deletebanner, getBanners } from '../../../actions/bannerAction'\r\n\r\n\r\nconst BannerList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.auth)\r\n    const { loading, error, banners } = useSelector(state => state.banners);\r\n    const { error: deleteError, isDeleted, isUpdated } = useSelector(state => state.banner)\r\n\r\n    const deleteBannerHandler = (id) => {\r\n        dispatch(deletebanner(id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user.role === 'admin')\r\n            dispatch(getBanners());\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Xóa banner thành công');\r\n            history.push('/admin/banners');\r\n            dispatch({ type: DELETE_BANNER_RESET })\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Phê duyệt thành công');\r\n            dispatch({ type: UPDATE_BANNER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, deleteError, isDeleted, isUpdated, history])\r\n\r\n    const setCategories = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Ảnh',\r\n                    field: 'image',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Thao tác',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        !!banners && banners.forEach(banner => {\r\n            data.rows.push({\r\n                id: banner._id,\r\n                image: <img className=\"mt-3 mr-2\" width=\"400\" src={banner.images[0].url}/>,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/banner/update/${banner._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteBannerHandler(banner._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Tất cả các thể loại'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">Tất cả các thể loại</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setCategories()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default BannerList\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Users\\UsersList.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Banner\\UpdateBanner.js",[],"G:\\GR_Project_K63\\frontend\\src\\constants\\notifyContants.js",[],"G:\\GR_Project_K63\\frontend\\src\\constants\\courseConstants.js",[],"G:\\GR_Project_K63\\frontend\\src\\constants\\userConstants.js",[],"G:\\GR_Project_K63\\frontend\\src\\constants\\cartConstants.js",[],"G:\\GR_Project_K63\\frontend\\src\\constants\\orderConstants.js",[],"G:\\GR_Project_K63\\frontend\\src\\constants\\registerCourseContants.js",[],"G:\\GR_Project_K63\\frontend\\src\\constants\\categoryConstant.js",[],"G:\\GR_Project_K63\\frontend\\src\\constants\\bannerConstant.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\layout\\MetaData.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"G:\\GR_Project_K63\\frontend\\src\\actions\\cartActions.js",[],"G:\\GR_Project_K63\\frontend\\src\\actions\\categoryAction.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Sidebar.js",[],"G:\\GR_Project_K63\\frontend\\src\\actions\\bannerAction.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\layout\\Loader.js",[],"G:\\GR_Project_K63\\frontend\\src\\actions\\orderActions.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Topic\\TopicList.js",[],"G:\\GR_Project_K63\\frontend\\src\\actions\\courseActions.js",["428","429","430","431","432","433","434","435","436"],"import axios from 'axios';\r\n\r\nimport {\r\n    ALL_COURSES_REQUEST,\r\n    ALL_COURSES_SUCCESS,\r\n    ALL_COURSES_FAIL,\r\n    ADMIN_COURSES_REQUEST,\r\n    ADMIN_COURSES_SUCCESS,\r\n    ADMIN_COURSES_FAIL,\r\n    NEW_COURSE_REQUEST,\r\n    NEW_COURSE_SUCCESS,\r\n    NEW_COURSE_FAIL,\r\n    DELETE_COURSE_REQUEST,\r\n    DELETE_COURSE_SUCCESS,\r\n    DELETE_COURSE_FAIL,\r\n    UPDATE_COURSE_REQUEST,\r\n    UPDATE_COURSE_SUCCESS,\r\n    UPDATE_COURSE_FAIL,\r\n    COURSE_DETAILS_REQUEST,\r\n    COURSE_DETAILS_SUCCESS,\r\n    COURSE_DETAILS_FAIL,\r\n    NEW_LESSON_REQUEST,\r\n    NEW_LESSON_SUCCESS,\r\n    NEW_LESSON_FAIL,\r\n    GET_LESSONS_REQUEST,\r\n    GET_LESSONS_SUCCESS,\r\n    GET_LESSONS_FAIL,\r\n    GET_LESSON_REQUEST,\r\n    GET_LESSON_SUCCESS,\r\n    GET_LESSON_FAIL,\r\n    DELETE_LESSON_REQUEST,\r\n    DELETE_LESSON_SUCCESS,\r\n    DELETE_LESSON_RESET,\r\n    DELETE_LESSON_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    NEW_TOPIC_REQUEST,\r\n    NEW_TOPIC_SUCCESS,\r\n    NEW_TOPIC_RESET,\r\n    NEW_TOPIC_FAIL,\r\n    GET_TOPICS_REQUEST,\r\n    GET_TOPICS_SUCCESS,\r\n    GET_TOPICS_FAIL,\r\n\r\n    DELETE_TOPIC_REQUEST,\r\n    DELETE_TOPIC_SUCCESS,\r\n    DELETE_TOPIC_RESET,\r\n    DELETE_TOPIC_FAIL,\r\n    UPDATE_TOPIC_REQUEST,\r\n    UPDATE_TOPIC_SUCCESS,\r\n    UPDATE_TOPIC_RESET,\r\n    UPDATE_TOPIC_FAIL,\r\n\r\n    NEW_QUIZ_REQUEST,\r\n    NEW_QUIZ_SUCCESS,\r\n    NEW_QUIZ_RESET,\r\n    NEW_QUIZ_FAIL,\r\n    GET_QUIZS_REQUEST,\r\n    GET_QUIZS_SUCCESS,\r\n    GET_QUIZS_FAIL,\r\n    DELETE_QUIZ_REQUEST,\r\n    DELETE_QUIZ_SUCCESS,\r\n    DELETE_QUIZ_RESET,\r\n    DELETE_QUIZ_FAIL,\r\n    UPDATE_QUIZ_REQUEST,\r\n    UPDATE_QUIZ_SUCCESS,\r\n    UPDATE_QUIZ_RESET,\r\n    UPDATE_QUIZ_FAIL,\r\n\r\n    NEW_DOCUMENT_REQUEST,\r\n    NEW_DOCUMENT_SUCCESS,\r\n    NEW_DOCUMENT_FAIL,\r\n    GET_DOCUMENTS_REQUEST,\r\n    GET_DOCUMENTS_SUCCESS,\r\n    GET_DOCUMENTS_FAIL,\r\n    GET_DOCUMENT_REQUEST,\r\n    GET_DOCUMENT_SUCCESS,\r\n    GET_DOCUMENT_FAIL,\r\n    DELETE_DOCUMENT_REQUEST,\r\n    DELETE_DOCUMENT_SUCCESS,\r\n    DELETE_DOCUMENT_RESET,\r\n    DELETE_DOCUMENT_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/courseConstants'\r\n\r\nexport const getCourses = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_COURSES_REQUEST })\r\n\r\n        let link = `/api/v1/courses?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n\r\n        if (category) {\r\n            link = `/api/v1/courses?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n        }\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: ALL_COURSES_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_COURSES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newCourse = (courseData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_COURSE_REQUEST })\r\n\r\n        const config = {\r\n            credentials: 'include',\r\n            headers: {'Content-type': 'multipart/form-data; boundary=XXX' },\r\n            body: '--XXX\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"filename.csv\"\\r\\nContent-Type: text/csv\\r\\n\\r\\nA,B,C\\r\\n1,1.1,name1\\r\\n2,2.2,name2\\r\\n\\r\\n--XXX--'\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/course/new`, courseData, config)\r\n\r\n        dispatch({\r\n            type: NEW_COURSE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete course (Admin)\r\nexport const deleteCourse = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_COURSE_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/course/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_COURSE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update Course (ADMIN)\r\nexport const updateCourse = (id, courseData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_COURSE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/course/${id}`, courseData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_COURSE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const acceptCourse = (id, courseData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_COURSE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/course/accept/${id}`, courseData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_COURSE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: COURSE_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/course/${id}`)\r\n\r\n        dispatch({\r\n            type: COURSE_DETAILS_SUCCESS,\r\n            payload: data.course\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: COURSE_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newLesson = (lessonData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_LESSON_REQUEST })\r\n\r\n        const config = {\r\n            credentials: 'include',\r\n            headers: {'Content-type': 'multipart/form-data; boundary=XXX' },\r\n            body: '--XXX\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"filename.csv\"\\r\\nContent-Type: text/csv\\r\\n\\r\\nA,B,C\\r\\n1,1.1,name1\\r\\n2,2.2,name2\\r\\n\\r\\n--XXX--'\r\n        }\r\n\r\n       \r\n\r\n        const { data } = await axios.post(`/api/v1/media/create`, lessonData, config)\r\n\r\n        dispatch({\r\n            type: NEW_LESSON_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_LESSON_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseLessons = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_LESSONS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/media/all/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_LESSONS_SUCCESS,\r\n            payload: data.media\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_LESSONS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseLesson = (courseId,index) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_LESSON_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/media/${courseId}/${index}`)\r\n\r\n        dispatch({\r\n            type: GET_LESSON_SUCCESS,\r\n            payload: data.media\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_LESSON_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteLesson = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_LESSON_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/media/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_LESSON_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n\r\n\r\n        dispatch({\r\n            type: DELETE_LESSON_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getAdminCourses = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_COURSES_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/courses`)\r\n\r\n        dispatch({\r\n            type: ADMIN_COURSES_SUCCESS,\r\n            payload: data.courses\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_COURSES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getMeCourses = (userId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_COURSES_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/me/courses/${userId}`)\r\n\r\n        dispatch({\r\n            type: ADMIN_COURSES_SUCCESS,\r\n            payload: data.courses\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_COURSES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get course reviews\r\nexport const getCourseReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete course review\r\nexport const deleteReview = (id, courseId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&courseId=${courseId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n    \r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}\r\n\r\n\r\nexport const newTopic = (topicData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_TOPIC_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n\r\n\r\n        const { data } = await axios.post(`/api/v1/topic/new`, topicData, config)\r\n\r\n        dispatch({\r\n            type: NEW_TOPIC_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_TOPIC_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseTopics = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_TOPICS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/topics/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_TOPICS_SUCCESS,\r\n            payload: data.topics\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_TOPICS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteTopic = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_TOPIC_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/topic/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_TOPIC_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n\r\n        dispatch({\r\n            type: DELETE_TOPIC_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateTopic = (id, topicData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_TOPIC_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/topic/update/${id}`, topicData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_TOPIC_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_TOPIC_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const newQuiz = (quizData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_QUIZ_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n\r\n        const { data } = await axios.post(`/api/v1/quiz/new`, quizData, config)\r\n\r\n        dispatch({\r\n            type: NEW_QUIZ_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_QUIZ_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getTopicQuizs = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_QUIZS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/quizs/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_QUIZS_SUCCESS,\r\n            payload: data.quiz\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_QUIZS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteQuiz = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_QUIZ_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/quiz/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_QUIZ_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n\r\n\r\n        dispatch({\r\n            type: DELETE_QUIZ_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateQuiz = (id, quizData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_QUIZ_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/quiz/update/${id}`, quizData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_QUIZ_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_QUIZ_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const newDocument = (docData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_DOCUMENT_REQUEST })\r\n\r\n        const config = {\r\n            credentials: 'include',\r\n            headers: {'Content-type': 'multipart/form-data; boundary=XXX' },\r\n            body: '--XXX\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"filename.csv\"\\r\\nContent-Type: text/csv\\r\\n\\r\\nA,B,C\\r\\n1,1.1,name1\\r\\n2,2.2,name2\\r\\n\\r\\n--XXX--'\r\n        }\r\n\r\n       \r\n\r\n        const { data } = await axios.post(`/api/v1/document/create`, docData, config)\r\n\r\n        dispatch({\r\n            type: NEW_DOCUMENT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_DOCUMENT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseDocuments = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_DOCUMENTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/document/all/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_DOCUMENTS_SUCCESS,\r\n            payload: data.documents\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_DOCUMENTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseDocument = (courseId,index) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_DOCUMENT_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/document/${courseId}/${index}`)\r\n\r\n        dispatch({\r\n            type: GET_DOCUMENT_SUCCESS,\r\n            payload: data.document\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_DOCUMENT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteDocument = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_DOCUMENT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/document/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_DOCUMENT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: DELETE_DOCUMENT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Topic\\TopicForm.js",["437","438"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst TopicForm = ({courseId, newTopic }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  \r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"courseId\",courseId);\r\n    setName(\"\");\r\n    dispatch(newTopic({name,courseId}));\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={hadleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Tên chủ đề</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={name}  \r\n            className=\"form-control\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n          Gửi\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopicForm;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Document\\DocumentList.js",[],"G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Document\\DocumentForm.js",["439"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst DocumentForm = ({courseId, newDocument,topics }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [topicId,setTopicId] = useState('');\r\n  const [documents, setDocuments] = useState([]);\r\n \r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  \r\n useEffect(() =>{\r\n  if(topics.length > 0)\r\n    setTopicId(topics[0]._id)\r\n },[topics])\r\n\r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n    for (let key in documents) {\r\n      formdata.append(\"documents\", documents[key]);\r\n    }\r\n\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"courseId\",courseId);\r\n    formdata.append(\"topicId\",topicId)\r\n    setName(\"\");\r\n    dispatch(newDocument(formdata));\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={hadleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Tiêu đề</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={name}  \r\n            className=\"form-control\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Chủ đề</label>\r\n          <select className=\"form-control\" value={topicId} onChange={(e) => setTopicId(e.target.value)}>\r\n            {topics && topics.map(topic => {\r\n              return <option key={topic._id} value={topic._id}>{topic.name}</option>\r\n            })} \r\n            \r\n            \r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"documents\">Đăng tải document bài giảng</label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"documents\"\r\n            id=\"documents\"\r\n            className=\"form-control\"\r\n            accept=\".pdf\"\r\n            \r\n            onChange={(e) => {\r\n              setDocuments(e.target.files);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DocumentForm;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Quiz\\QuizList.js",["440","441","442"],"import React from \"react\";\r\nimport { Divider, List, Typography } from 'antd';\r\nconst QuizList = ({ quizs,deleteQuizHandler }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Danh sách các câu hỏi</th>\r\n              <th>Câu trả lời</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {quizs &&\r\n              quizs.map((quiz) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      {quiz.question}\r\n                      <button className=\"float-right\" onClick={() => deleteQuizHandler(quiz._id)}>Xóa</button>\r\n                    </td>\r\n                    <td>\r\n                    <ul class=\"list-group\">\r\n                      {quiz.choice && quiz.choice.map((choice,index) => {\r\n                        return (\r\n                          <li index={index} class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            {choice.body}\r\n                            {choice.isCorrect &&<span class=\"badge badge-primary badge-pill\">Đáp án đúng</span>}\r\n                           \r\n                          </li>\r\n                        )\r\n                      })}\r\n                    </ul>\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizList;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Quiz\\QuizForm.js",["443","444","445","446","447","448","449","450","451","452"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Divider, List, Typography } from 'antd';\r\nimport { newQuiz } from \"../../../../actions/courseActions\";\r\nconst QuizForm = ({topicId}) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [quantity,setQuantity] = useState([1]);\r\n  const [choice,setChoice] = useState({})\r\n  const [choices,setChoices] = useState([])\r\n  const [correct,setCorrect] = useState(true)\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  console.log(question)\r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n\r\n    formdata.append(\"question\", question);\r\n    formdata.append(\"topicId\",topicId);\r\n    formdata.append(\"choice\",choices);\r\n\r\n   \r\n    dispatch(newQuiz({question,topicId,choice:choices}));\r\n    setQuestion(\"\");\r\n    setChoices([]);\r\n    setChoice(\"\");\r\n  };\r\n\r\n  const addChoice = () =>{\r\n    setChoices(prev => [...prev,choice])\r\n    \r\n  }\r\n\r\n  const deleteChoice = (body) => {\r\n    let newChoices = choices.filter(choice => {\r\n      if(choice.body !== body)\r\n      return choice\r\n    })\r\n\r\n    setChoices(newChoices)\r\n  }\r\n\r\n  const addCorrect = (e) =>{\r\n    let newChoices = choices.map(item => {\r\n        if(item.body === e){\r\n            return {body:item.body,isCorrect:true}\r\n        }else{\r\n            return {body:item.body,isCorrect:false}\r\n        }\r\n    })\r\n    setChoices(newChoices)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={(e) => hadleSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Câu hỏi</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"question\"\r\n            id=\"question\"\r\n            value={question}  \r\n            className=\"form-control\"\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button style={{position:'absolute', bottom:'10px'}} type=\"submit\" className=\"btn btn-success mt-2\">\r\n          Gửi\r\n        </button>\r\n      </form>\r\n      <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Phương án lựa chọn</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"choice\"\r\n                 \r\n                  className=\"form-control\"\r\n                  onChange={(e) => setChoice({body: e.target.value, isCorrect:false})}\r\n                />\r\n                <button onClick={() => addChoice()} className=\"mt-1 btn btn-success float-right\">Thêm</button>\r\n        </div>\r\n\r\n        <div className=\"mb-5\">\r\n        {choices[0] ? <h4 className=\"mt-5\">Danh sách đáp án</h4> : ''}\r\n        <ul class=\"list-group\">\r\n          {choices && choices.map((choice,index) => {\r\n            return (\r\n              <li index={index} class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                {choice.body}\r\n                {choice.isCorrect &&<span class=\"badge badge-primary badge-pill\">Đáp án đúng</span>}\r\n                <button onClick={() => addCorrect(choice.body)} className=\"btn btn-success float-right btn-sm mb-2\">Đặt đúng</button>\r\n                <button onClick={() => deleteChoice(choice.body)} className=\"btn btn-success float-right btn-sm mb-2\">Xóa</button>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n        </div>\r\n        \r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizForm;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Lesson\\UploadForm.js",["453","454","455","456"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst UploadForm = ({courseId, newLesson,topics }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [topicId,setTopicId] = useState(topics[0] ? topics[0]._id : '');\r\n  const [videos, setVideos] = useState([]);\r\n  const [videoName, setVideoName] = useState(\"\");\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  \r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n    for (let key in videos) {\r\n      formdata.append(\"videos\", videos[key]);\r\n    }\r\n\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"courseId\",courseId);\r\n    formdata.append(\"topicId\",topicId)\r\n    console.log(topicId)\r\n    setName(\"\");\r\n    console.log(videos.length)\r\n    dispatch(newLesson(formdata));\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={hadleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Tiêu đề</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={name}  \r\n            className=\"form-control\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Chủ đề</label>\r\n          <select className=\"form-control\" value={topicId} onChange={(e) => setTopicId(e.target.value)}>\r\n            {topics && topics.map(topic => {\r\n              return <option key={topic._id} value={topic._id}>{topic.name}</option>\r\n            })} \r\n            \r\n            \r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"videos\">Đăng tải video bài giảng</label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"videos\"\r\n            id=\"videos\"\r\n            multiple\r\n            className=\"form-control\"\r\n            accept=\".mp4, .mkv\"\r\n            \r\n            onChange={(e) => {\r\n              setVideos(e.target.files);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","G:\\GR_Project_K63\\frontend\\src\\pages\\Dashboard\\Courses\\Lesson\\UploadsList.js",[],"G:\\GR_Project_K63\\frontend\\src\\actions\\registerCourseAction.js",["457","458","459"],"import {\r\n    ALL_REGISTER_COURSES_REQUEST,\r\n    ALL_REGISTER_COURSES_FAIL,\r\n    ALL_REGISTER_COURSES_SUCCESS,\r\n    NEW_REGISTER_COURSE_FAIL,\r\n    NEW_REGISTER_COURSE_REQUEST,\r\n    NEW_REGISTER_COURSE_RESET,\r\n    NEW_REGISTER_COURSE_SUCCESS,\r\n    DELETE_REGISTER_COURSE_FAIL,\r\n    DELETE_REGISTER_COURSE_REQUEST,\r\n    DELETE_REGISTER_COURSE_RESET,\r\n    DELETE_REGISTER_COURSE_SUCCESS,\r\n    CLEAR_ERRORS,\r\n    UPDATE_REGISTER_COURSE_REQUEST,\r\n    UPDATE_REGISTER_COURSE_SUCCESS,\r\n    UPDATE_REGISTER_COURSE_FAIL\r\n} from '../constants/registerCourseContants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const getMeRegisterCourses = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_REGISTER_COURSES_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/getRegisterCourses`)\r\n\r\n       \r\n        dispatch({\r\n            type: ALL_REGISTER_COURSES_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n            type: ALL_REGISTER_COURSES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newRegisterCourse = (courseId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REGISTER_COURSE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        const { data } = await axios.post(`/api/v1/registerCourse/${courseId}`,{}, config)\r\n\r\n        dispatch({\r\n            type: NEW_REGISTER_COURSE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REGISTER_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const comleteVideo = (videoData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REGISTER_COURSE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        const { data } = await axios.post(`/api/v1/completeVideo`,videoData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REGISTER_COURSE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REGISTER_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const completedVideo = (videoData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_REGISTER_COURSE_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/completedVideo`,videoData,config)\r\n\r\n        dispatch({\r\n            type: UPDATE_REGISTER_COURSE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n\r\n        dispatch({\r\n            type: UPDATE_REGISTER_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteRegisterCourse = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REGISTER_COURSE_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/cancelRegister/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REGISTER_COURSE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n\r\n        dispatch({\r\n            type: DELETE_REGISTER_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}","G:\\GR_Project_K63\\frontend\\src\\pages\\Course\\Course.js",["460"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Course = ({ course, col }) => {\r\n    return (\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img\r\n                    className=\"card-img-top mx-auto\"\r\n                    src={course.images[0].url}\r\n                />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/course/${course._id}`}>{course.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(course.ratings / 5) * 100}%` }}></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({course.numOfReviews} Đánh giá)</span>\r\n                    </div>\r\n                    <p className=\"card-text\">{course.price === 0 ? \"Miễn phí\" : '$' + course.price}</p>\r\n                    <Link to={`/course/${course._id}`} id=\"view_btn\" className=\"btn btn-block\">Xem chi tiết</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Course\r\n","G:\\GR_Project_K63\\frontend\\src\\components\\layout\\Search.js",[],"G:\\GR_Project_K63\\frontend\\src\\actions\\notifyAction.js",["461","462"],"import axios from 'axios';\r\nimport {\r\n    GET_NOTIFIES_REQUEST,\r\n    GET_NOTIFIES_SUCCESS,\r\n    GET_NOTIFIES_FAIL,\r\n    DELETE_ALL_NOTIFIES_FAIL,\r\n    DELETE_ALL_NOTIFIES_REQUEST,\r\n    DELETE_ALL_NOTIFIES_RESET,\r\n    DELETE_ALL_NOTIFIES_SUCCESS,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/notifyContants'\r\nexport const getMeNotifies = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_NOTIFIES_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/me/notifies/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_NOTIFIES_SUCCESS,\r\n            payload: data.notifies\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_NOTIFIES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteAllNotifies = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_ALL_NOTIFIES_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/me/notifies/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ALL_NOTIFIES_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ALL_NOTIFIES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}","G:\\GR_Project_K63\\frontend\\src\\components\\banner\\Banner.js",["463"],"import { useEffect } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBanners } from \"../../actions/bannerAction\";\r\n\r\nimport './index.css'\r\n\r\nconst Banner = () => {\r\n    const { banners } = useSelector(state => state.banners)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        \r\n        dispatch(getBanners());\r\n\r\n    }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n        <div className=\"\">\r\n            <Carousel >\r\n                {banners && banners.map(banner => (\r\n                    <Carousel.Item key={banner._id}>\r\n                        <img className=\"banner\" src={banner.images[0].url} />\r\n                    </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Banner",["464","465"],"G:\\GR_Project_K63\\frontend\\src\\components\\layout\\NotifyMe\\NotifyMe.js",["466","467","468"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Overlay from \"react-bootstrap/Overlay\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nimport { Bell, BellOff, BookOpen, AlertTriangle } from \"react-feather\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./NotifyMe.css\";\r\n\r\nconst NotifyMe = (props) => {\r\n  moment.locale(navigator.languages[0].toLowerCase());\r\n\r\n  // State variabls\r\n  const [showCount, setShowCount] = useState(false);\r\n  const [messageCount, setMessageCount] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const [target, setTarget] = useState(null);\r\n  const [raedIndex, setReadIndex] = useState(0);\r\n\r\n  // Useref for the overlay\r\n  const ref = useRef(null);\r\n\r\n\r\n  // Props passed to the component\r\n  const data = props.data;\r\n  const storageKey = props.storageKey || \"notification_timeline_storage_id\";\r\n  const key = props.notific_key;\r\n  const notificationMsg = props.notific_value;\r\n  const sortedByKey = props.sortedByKey;\r\n  const heading = props.heading || \"Thông báo\";\r\n  const bellSize = props.size || 32;\r\n  const bellColor = props.color || \"#FFFFFF\";\r\n  const multiLineSplitter = props.multiLineSplitter || \"\\n\";\r\n  const showDate = props.showDate || false;\r\n  const deleteNotifiesHandler = props.deleteNotifiesHandler;\r\n\r\n  useEffect(() => {\r\n    if (!sortedByKey) {\r\n      data.sort((a, b) => b[key] - a[key]);\r\n    }\r\n\r\n    // We read if any last read item id is in the local storage\r\n    let readItemLs = reactLocalStorage.getObject(storageKey);\r\n    let readMsgId = Object.keys(readItemLs).length > 0 ? readItemLs[\"id\"] : \"\";\r\n\r\n    // if the id found, we check what is the index of that message in the array and query it. If not found,\r\n    // nothing has been read. Hence count should be same as all the message count.\r\n    let readIndex =\r\n      readMsgId === \"\"\r\n        ? data.length\r\n        : data.findIndex((elem) => elem[key] === readMsgId);\r\n\r\n    // if the id is not found, it all flushed out and start again\r\n    if(readIndex === -1){\r\n        readIndex = data.length\r\n    } \r\n\r\n    setReadIndex(readIndex);\r\n\r\n    // If there are messages and readIndex is pointing to at least one message, we will show the count bubble.\r\n    (data.length && readIndex) > 0 ? setShowCount(true) : setShowCount(false);\r\n    setMessageCount(readIndex);\r\n  }, [data]);\r\n\r\n  // Handle the click on the notification bell\r\n  const handleClick = (event) => {\r\n    setShow(!show);\r\n    setTarget(event.target);\r\n  };\r\n\r\n  // Calculate the day diff\r\n  const getDayDiff = (timestamp) => {\r\n    let a = moment();\r\n    let b = moment(timestamp);\r\n    let diff = a.diff(b, \"year\");\r\n    if (diff === 0) {\r\n      diff = a.diff(b, \"month\");\r\n      if (diff === 0) {\r\n        diff = a.diff(b, \"days\");\r\n        if (diff === 0) {\r\n          diff = a.diff(b, \"hour\");\r\n          if (diff === 0) {\r\n            diff = a.diff(b, \"minute\");\r\n            if (diff === 0) {\r\n              diff = a.diff(b, \"second\");\r\n              return `${diff} giây trước`;\r\n            } else {\r\n              return `${diff} phút trước`;\r\n            }\r\n          } else {\r\n            return `${diff} giờ trước`;\r\n          }\r\n        } else {\r\n          return `${diff} ngày trước`;\r\n        }\r\n      } else {\r\n        return `${diff} tháng trước`;\r\n      }\r\n    } else {\r\n      return `${diff} năm trước`;\r\n    }\r\n  };\r\n\r\n  const getWhen = (timestamp) => {\r\n    let when = `${moment(timestamp).format(\"L\")} ${moment(timestamp).format(\r\n      \"LTS\"\r\n    )}`;\r\n    return when;\r\n  };\r\n\r\n  // Get the notification message\r\n  const getContent = (message) => {\r\n    if (message.indexOf(multiLineSplitter) >= 0) {\r\n      let splitted = message.split(multiLineSplitter);\r\n      let ret = \"<ul>\";\r\n\r\n      for (let i = 0; i <= splitted.length - 1; i++) {\r\n        if (splitted[i] !== \"\") {\r\n          ret = ret + \"<li>\" + splitted[i] + \"</li>\";\r\n        }\r\n      }\r\n\r\n      ret = ret + \"</ul>\";\r\n      return {\r\n        __html: ret\r\n      };\r\n    }\r\n    return {\r\n      __html: `<ul><li>${message}</li></ul>`\r\n    };\r\n  };\r\n\r\n  // Hide the notification on clicking outside\r\n  const hide = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  // Call the function when mark as read link is clicked\r\n  const markAsRead = () => {\r\n    setShowCount(false);\r\n    reactLocalStorage.setObject(storageKey, { id: data[0][key] });\r\n    setReadIndex(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"notification-container\">\r\n        <div\r\n          className={\r\n            showCount ? \"notification notify show-count\" : \"notification notify\"\r\n          }\r\n          data-count={messageCount}\r\n          onClick={(event) => handleClick(event)}\r\n        >\r\n          <Bell color={bellColor} size={bellSize} />\r\n        </div>\r\n      </div>\r\n\r\n      <div ref={ref}>\r\n        <Overlay\r\n          show={show}\r\n          target={target}\r\n          placement=\"bottom\"\r\n          container={ref.current}\r\n          containerPadding={20}\r\n          rootClose={true}\r\n          onHide={hide}\r\n        >\r\n          <Popover id=\"popover-contained\">\r\n            <Popover.Title as=\"h3\">{heading}</Popover.Title>\r\n            <Popover.Content style={{ padding: \"3px 3px\" }}>\r\n              {showCount && (\r\n                <div>\r\n                  <Button variant=\"link\" onClick={deleteNotifiesHandler}>\r\n                    <BookOpen size={24} />\r\n                        {' '}Đánh dấu đã đọc tất cả\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              <ul className=\"notification-info-panel\">\r\n                {data.length > 0 ? (\r\n                  data.map((message, index) => (\r\n                    <li\r\n                      className={\r\n                        index < raedIndex\r\n                          ? \"notification-message unread\"\r\n                          : \"notification-message\"\r\n                      }\r\n                      key={index}\r\n                    >\r\n                      <div className=\"timestamp\">\r\n                        <span style={{paddingLeft: '8px'}}>{getDayDiff(message[key])}</span>\r\n                        {showDate && (\r\n                          <span>\r\n                            {\" (\"}\r\n                            {getWhen(message[key])}\r\n                            {\")\"}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div\r\n                        className=\"content\"\r\n                        dangerouslySetInnerHTML={getContent(\r\n                          message[notificationMsg]\r\n                        )}\r\n                      />\r\n                    </li>\r\n                  ))\r\n                ) : (\r\n                  <>\r\n                    <AlertTriangle color=\"#000000\" size={32} />\r\n                    <h6 className=\"nodata\">Không tìm thấy thông báo</h6>\r\n                  </>\r\n                )}\r\n              </ul>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Overlay>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nNotifyMe.prototype = {\r\n  storageKey: PropTypes.string,\r\n  notific_key: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  notific_value: PropTypes.string.isRequired,\r\n  sortedByKey: PropTypes.bool,\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  multiLineSplitter: PropTypes.string,\r\n  showDate: PropTypes.bool\r\n};\r\n\r\nexport default NotifyMe;\r\n","G:\\GR_Project_K63\\frontend\\src\\components\\review\\ListReviews.js",[],"G:\\GR_Project_K63\\frontend\\src\\components\\quiz\\Quiz.js",[],{"ruleId":"469","replacedBy":"470"},{"ruleId":"471","replacedBy":"472"},{"ruleId":"473","severity":1,"message":"474","line":5,"column":323,"nodeType":"475","messageId":"476","endLine":5,"endColumn":334},{"ruleId":"473","severity":1,"message":"477","line":12,"column":8,"nodeType":"475","messageId":"476","endLine":12,"endColumn":12},{"ruleId":"473","severity":1,"message":"478","line":79,"column":11,"nodeType":"475","messageId":"476","endLine":79,"endColumn":15},{"ruleId":"473","severity":1,"message":"479","line":79,"column":17,"nodeType":"475","messageId":"476","endLine":79,"endColumn":32},{"ruleId":"473","severity":1,"message":"480","line":79,"column":34,"nodeType":"475","messageId":"476","endLine":79,"endColumn":41},{"ruleId":"473","severity":1,"message":"480","line":10,"column":19,"nodeType":"475","messageId":"476","endLine":10,"endColumn":26},{"ruleId":"481","severity":1,"message":"482","line":68,"column":44,"nodeType":"483","endLine":68,"endColumn":56},{"ruleId":"481","severity":1,"message":"482","line":72,"column":44,"nodeType":"483","endLine":72,"endColumn":56},{"ruleId":"481","severity":1,"message":"482","line":76,"column":44,"nodeType":"483","endLine":76,"endColumn":56},{"ruleId":"473","severity":1,"message":"484","line":1,"column":38,"nodeType":"475","messageId":"476","endLine":1,"endColumn":46},{"ruleId":"485","severity":1,"message":"486","line":58,"column":29,"nodeType":"483","endLine":58,"endColumn":83},{"ruleId":"473","severity":1,"message":"487","line":35,"column":13,"nodeType":"475","messageId":"476","endLine":35,"endColumn":20},{"ruleId":"473","severity":1,"message":"488","line":11,"column":10,"nodeType":"475","messageId":"476","endLine":11,"endColumn":23},{"ruleId":"473","severity":1,"message":"489","line":13,"column":10,"nodeType":"475","messageId":"476","endLine":13,"endColumn":30},{"ruleId":"473","severity":1,"message":"490","line":14,"column":10,"nodeType":"475","messageId":"476","endLine":14,"endColumn":38},{"ruleId":"473","severity":1,"message":"491","line":17,"column":12,"nodeType":"475","messageId":"476","endLine":17,"endColumn":20},{"ruleId":"473","severity":1,"message":"492","line":17,"column":22,"nodeType":"475","messageId":"476","endLine":17,"endColumn":33},{"ruleId":"473","severity":1,"message":"493","line":1,"column":30,"nodeType":"475","messageId":"476","endLine":1,"endColumn":36},{"ruleId":"473","severity":1,"message":"494","line":3,"column":8,"nodeType":"475","messageId":"476","endLine":3,"endColumn":19},{"ruleId":"473","severity":1,"message":"495","line":4,"column":41,"nodeType":"475","messageId":"476","endLine":4,"endColumn":56},{"ruleId":"496","severity":1,"message":"497","line":108,"column":4,"nodeType":"498","endLine":108,"endColumn":121,"suggestions":"499"},{"ruleId":"473","severity":1,"message":"500","line":176,"column":7,"nodeType":"475","messageId":"476","endLine":176,"endColumn":25},{"ruleId":"501","severity":1,"message":"502","line":258,"column":48,"nodeType":"503","messageId":"504","endLine":258,"endColumn":50},{"ruleId":"473","severity":1,"message":"505","line":6,"column":10,"nodeType":"475","messageId":"476","endLine":6,"endColumn":18},{"ruleId":"473","severity":1,"message":"488","line":8,"column":10,"nodeType":"475","messageId":"476","endLine":8,"endColumn":23},{"ruleId":"473","severity":1,"message":"506","line":8,"column":25,"nodeType":"475","messageId":"476","endLine":8,"endColumn":43},{"ruleId":"473","severity":1,"message":"507","line":9,"column":31,"nodeType":"475","messageId":"476","endLine":9,"endColumn":48},{"ruleId":"496","severity":1,"message":"508","line":32,"column":7,"nodeType":"498","endLine":32,"endColumn":27,"suggestions":"509"},{"ruleId":"496","severity":1,"message":"510","line":47,"column":8,"nodeType":"498","endLine":47,"endColumn":52,"suggestions":"511"},{"ruleId":"496","severity":1,"message":"512","line":36,"column":8,"nodeType":"498","endLine":36,"endColumn":58,"suggestions":"513"},{"ruleId":"473","severity":1,"message":"484","line":1,"column":38,"nodeType":"475","messageId":"476","endLine":1,"endColumn":46},{"ruleId":"496","severity":1,"message":"514","line":56,"column":8,"nodeType":"498","endLine":56,"endColumn":76,"suggestions":"515"},{"ruleId":"473","severity":1,"message":"516","line":22,"column":12,"nodeType":"475","messageId":"476","endLine":22,"endColumn":21},{"ruleId":"473","severity":1,"message":"517","line":32,"column":11,"nodeType":"475","messageId":"476","endLine":32,"endColumn":19},{"ruleId":"473","severity":1,"message":"518","line":69,"column":15,"nodeType":"475","messageId":"476","endLine":69,"endColumn":19},{"ruleId":"473","severity":1,"message":"484","line":1,"column":17,"nodeType":"475","messageId":"476","endLine":1,"endColumn":25},{"ruleId":"473","severity":1,"message":"519","line":2,"column":8,"nodeType":"475","messageId":"476","endLine":2,"endColumn":13},{"ruleId":"473","severity":1,"message":"520","line":5,"column":8,"nodeType":"475","messageId":"476","endLine":5,"endColumn":14},{"ruleId":"473","severity":1,"message":"484","line":1,"column":17,"nodeType":"475","messageId":"476","endLine":1,"endColumn":25},{"ruleId":"473","severity":1,"message":"521","line":7,"column":52,"nodeType":"475","messageId":"476","endLine":7,"endColumn":59},{"ruleId":"473","severity":1,"message":"484","line":1,"column":17,"nodeType":"475","messageId":"476","endLine":1,"endColumn":25},{"ruleId":"473","severity":1,"message":"484","line":1,"column":17,"nodeType":"475","messageId":"476","endLine":1,"endColumn":25},{"ruleId":"473","severity":1,"message":"522","line":7,"column":63,"nodeType":"475","messageId":"476","endLine":7,"endColumn":74},{"ruleId":"473","severity":1,"message":"484","line":1,"column":38,"nodeType":"475","messageId":"476","endLine":1,"endColumn":46},{"ruleId":"496","severity":1,"message":"523","line":52,"column":8,"nodeType":"498","endLine":52,"endColumn":76,"suggestions":"524"},{"ruleId":"473","severity":1,"message":"518","line":50,"column":15,"nodeType":"475","messageId":"476","endLine":50,"endColumn":19},{"ruleId":"473","severity":1,"message":"484","line":1,"column":38,"nodeType":"475","messageId":"476","endLine":1,"endColumn":46},{"ruleId":"496","severity":1,"message":"523","line":52,"column":8,"nodeType":"498","endLine":52,"endColumn":76,"suggestions":"525"},{"ruleId":"485","severity":1,"message":"486","line":78,"column":24,"nodeType":"483","endLine":78,"endColumn":91},{"ruleId":"473","severity":1,"message":"526","line":33,"column":5,"nodeType":"475","messageId":"476","endLine":33,"endColumn":24},{"ruleId":"473","severity":1,"message":"527","line":43,"column":5,"nodeType":"475","messageId":"476","endLine":43,"endColumn":24},{"ruleId":"473","severity":1,"message":"528","line":47,"column":5,"nodeType":"475","messageId":"476","endLine":47,"endColumn":20},{"ruleId":"473","severity":1,"message":"529","line":55,"column":5,"nodeType":"475","messageId":"476","endLine":55,"endColumn":23},{"ruleId":"473","severity":1,"message":"530","line":59,"column":5,"nodeType":"475","messageId":"476","endLine":59,"endColumn":23},{"ruleId":"473","severity":1,"message":"531","line":64,"column":5,"nodeType":"475","messageId":"476","endLine":64,"endColumn":19},{"ruleId":"473","severity":1,"message":"532","line":71,"column":5,"nodeType":"475","messageId":"476","endLine":71,"endColumn":22},{"ruleId":"473","severity":1,"message":"533","line":75,"column":5,"nodeType":"475","messageId":"476","endLine":75,"endColumn":22},{"ruleId":"473","severity":1,"message":"534","line":89,"column":5,"nodeType":"475","messageId":"476","endLine":89,"endColumn":26},{"ruleId":"473","severity":1,"message":"535","line":1,"column":27,"nodeType":"475","messageId":"476","endLine":1,"endColumn":36},{"ruleId":"473","severity":1,"message":"536","line":7,"column":9,"nodeType":"475","messageId":"476","endLine":7,"endColumn":14},{"ruleId":"473","severity":1,"message":"536","line":10,"column":9,"nodeType":"475","messageId":"476","endLine":10,"endColumn":14},{"ruleId":"473","severity":1,"message":"537","line":2,"column":10,"nodeType":"475","messageId":"476","endLine":2,"endColumn":17},{"ruleId":"473","severity":1,"message":"538","line":2,"column":19,"nodeType":"475","messageId":"476","endLine":2,"endColumn":23},{"ruleId":"473","severity":1,"message":"539","line":2,"column":25,"nodeType":"475","messageId":"476","endLine":2,"endColumn":35},{"ruleId":"473","severity":1,"message":"535","line":1,"column":27,"nodeType":"475","messageId":"476","endLine":1,"endColumn":36},{"ruleId":"473","severity":1,"message":"537","line":4,"column":10,"nodeType":"475","messageId":"476","endLine":4,"endColumn":17},{"ruleId":"473","severity":1,"message":"538","line":4,"column":19,"nodeType":"475","messageId":"476","endLine":4,"endColumn":23},{"ruleId":"473","severity":1,"message":"539","line":4,"column":25,"nodeType":"475","messageId":"476","endLine":4,"endColumn":35},{"ruleId":"473","severity":1,"message":"491","line":8,"column":10,"nodeType":"475","messageId":"476","endLine":8,"endColumn":18},{"ruleId":"473","severity":1,"message":"492","line":8,"column":19,"nodeType":"475","messageId":"476","endLine":8,"endColumn":30},{"ruleId":"473","severity":1,"message":"540","line":11,"column":10,"nodeType":"475","messageId":"476","endLine":11,"endColumn":17},{"ruleId":"473","severity":1,"message":"541","line":11,"column":18,"nodeType":"475","messageId":"476","endLine":11,"endColumn":28},{"ruleId":"473","severity":1,"message":"536","line":12,"column":9,"nodeType":"475","messageId":"476","endLine":12,"endColumn":14},{"ruleId":"501","severity":1,"message":"542","line":37,"column":44,"nodeType":"503","messageId":"504","endLine":37,"endColumn":46},{"ruleId":"473","severity":1,"message":"535","line":1,"column":27,"nodeType":"475","messageId":"476","endLine":1,"endColumn":36},{"ruleId":"473","severity":1,"message":"543","line":9,"column":10,"nodeType":"475","messageId":"476","endLine":9,"endColumn":19},{"ruleId":"473","severity":1,"message":"544","line":9,"column":21,"nodeType":"475","messageId":"476","endLine":9,"endColumn":33},{"ruleId":"473","severity":1,"message":"536","line":10,"column":9,"nodeType":"475","messageId":"476","endLine":10,"endColumn":14},{"ruleId":"473","severity":1,"message":"545","line":7,"column":5,"nodeType":"475","messageId":"476","endLine":7,"endColumn":30},{"ruleId":"473","severity":1,"message":"490","line":11,"column":5,"nodeType":"475","messageId":"476","endLine":11,"endColumn":33},{"ruleId":"473","severity":1,"message":"546","line":13,"column":5,"nodeType":"475","messageId":"476","endLine":13,"endColumn":17},{"ruleId":"485","severity":1,"message":"486","line":8,"column":17,"nodeType":"483","endLine":11,"endColumn":19},{"ruleId":"473","severity":1,"message":"547","line":8,"column":5,"nodeType":"475","messageId":"476","endLine":8,"endColumn":30},{"ruleId":"473","severity":1,"message":"546","line":10,"column":5,"nodeType":"475","messageId":"476","endLine":10,"endColumn":17},{"ruleId":"485","severity":1,"message":"486","line":23,"column":25,"nodeType":"483","endLine":23,"endColumn":78},{"ruleId":"469","replacedBy":"548"},{"ruleId":"471","replacedBy":"549"},{"ruleId":"473","severity":1,"message":"550","line":12,"column":16,"nodeType":"475","messageId":"476","endLine":12,"endColumn":23},{"ruleId":"496","severity":1,"message":"551","line":70,"column":6,"nodeType":"498","endLine":70,"endColumn":12,"suggestions":"552"},{"ruleId":"473","severity":1,"message":"553","line":146,"column":9,"nodeType":"475","messageId":"476","endLine":146,"endColumn":19},"no-native-reassign",["554"],"no-negated-in-lhs",["555"],"no-unused-vars","'quizReducer' is defined but never used.","Identifier","unusedVar","'Cart' is defined but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'loading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'banners' is assigned a value but never used.","'addItemToCart' is defined but never used.","'deleteRegisterCourse' is defined but never used.","'DELETE_REGISTER_COURSE_RESET' is defined but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'useRef' is defined but never used.","'ReactPlayer' is defined but never used.","'getCourseLesson' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reviewError'. Either include it or remove the dependency array.","ArrayExpression",["556"],"'checkCompleteTopic' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useAlert' is defined but never used.","'removeItemFromCart' is defined but never used.","'newRegisterCourse' is defined but never used.","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.",["557"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["558"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["559"],"React Hook useEffect has missing dependencies: 'user._id' and 'user.role'. Either include them or remove the dependency array.",["560"],"'oldImages' is assigned a value but never used.","'courseId' is assigned a value but never used.","'data' is assigned a value but never used.","'axios' is defined but never used.","'Loader' is defined but never used.","'newQuiz' is defined but never used.","'updateTopic' is defined but never used.","React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["561"],["562"],"'DELETE_LESSON_RESET' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.","'NEW_TOPIC_RESET' is defined but never used.","'DELETE_TOPIC_RESET' is defined but never used.","'UPDATE_TOPIC_RESET' is defined but never used.","'NEW_QUIZ_RESET' is defined but never used.","'DELETE_QUIZ_RESET' is defined but never used.","'UPDATE_QUIZ_RESET' is defined but never used.","'DELETE_DOCUMENT_RESET' is defined but never used.","'useEffect' is defined but never used.","'alert' is assigned a value but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'correct' is assigned a value but never used.","'setCorrect' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'videoName' is assigned a value but never used.","'setVideoName' is assigned a value but never used.","'NEW_REGISTER_COURSE_RESET' is defined but never used.","'CLEAR_ERRORS' is defined but never used.","'DELETE_ALL_NOTIFIES_RESET' is defined but never used.",["554"],["555"],"'BellOff' is defined but never used.","React Hook useEffect has missing dependencies: 'key', 'sortedByKey', and 'storageKey'. Either include them or remove the dependency array.",["563"],"'markAsRead' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"574","fix":"576"},{"desc":"577","fix":"578"},"Update the dependencies array to be: [dispatch, alert, error, lessonError, success, match.params.id, checked, checkedExercise, reviewSuccess, complete, isUpdated, reviewError]",{"range":"579","text":"580"},"Update the dependencies array to be: [alert, dispatch, isDeleted]",{"range":"581","text":"582"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"583","text":"584"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"585","text":"586"},"Update the dependencies array to be: [dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role, user._id]",{"range":"587","text":"588"},"Update the dependencies array to be: [dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role]",{"range":"589","text":"590"},{"range":"591","text":"590"},"Update the dependencies array to be: [data, key, sortedByKey, storageKey]",{"range":"592","text":"593"},[3716,3833],"[dispatch, alert, error, lessonError, success, match.params.id, checked, checkedExercise, reviewSuccess, complete, isUpdated, reviewError]",[1138,1158],"[alert, dispatch, isDeleted]",[1391,1435],"[dispatch, alert, error, history, isUpdated, user]",[1009,1059],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1856,1924],"[dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role, user._id]",[1703,1771],"[dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role]",[1664,1732],[2519,2525],"[data, key, sortedByKey, storageKey]"]