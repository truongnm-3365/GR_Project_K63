[{"/home/truong/GR_Project_K63/frontend/src/index.js":"1","/home/truong/GR_Project_K63/frontend/src/App.js":"2","/home/truong/GR_Project_K63/frontend/src/store.js":"3","/home/truong/GR_Project_K63/frontend/src/Context/ChatProvider.js":"4","/home/truong/GR_Project_K63/frontend/src/actions/userActions.js":"5","/home/truong/GR_Project_K63/frontend/src/reducers/cartReducers.js":"6","/home/truong/GR_Project_K63/frontend/src/reducers/notifyReducer.js":"7","/home/truong/GR_Project_K63/frontend/src/reducers/userReducers.js":"8","/home/truong/GR_Project_K63/frontend/src/reducers/orderReducers.js":"9","/home/truong/GR_Project_K63/frontend/src/reducers/categoryReducer.js":"10","/home/truong/GR_Project_K63/frontend/src/reducers/registerCourseReducer.js":"11","/home/truong/GR_Project_K63/frontend/src/reducers/courseReducers.js":"12","/home/truong/GR_Project_K63/frontend/src/reducers/bannerReducer.js":"13","/home/truong/GR_Project_K63/frontend/src/pages/RegisterCourse/RegisterCourseList.js":"14","/home/truong/GR_Project_K63/frontend/src/pages/Home/Home.js":"15","/home/truong/GR_Project_K63/frontend/src/pages/User/UpdateProfile.js":"16","/home/truong/GR_Project_K63/frontend/src/pages/Course/Lesson.js":"17","/home/truong/GR_Project_K63/frontend/src/pages/User/NewPassword.js":"18","/home/truong/GR_Project_K63/frontend/src/pages/User/UpdatePassword.js":"19","/home/truong/GR_Project_K63/frontend/src/pages/Course/CourseDetails.js":"20","/home/truong/GR_Project_K63/frontend/src/pages/User/Profile.js":"21","/home/truong/GR_Project_K63/frontend/src/pages/User/ForgotPassword.js":"22","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/OrdersList.js":"23","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Dashboard.js":"24","/home/truong/GR_Project_K63/frontend/src/pages/User/Login.js":"25","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/NewCourse.js":"26","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/CoursesList.js":"27","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Users/UsersList.js":"28","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/ProcessOrder.js":"29","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Topic/NewTopic.js":"30","/home/truong/GR_Project_K63/frontend/src/pages/User/Register.js":"31","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Users/UpdateUser.js":"32","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/CourseReview/CourseReviews.js":"33","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Lesson/NewLesson.js":"34","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/UpdateCourse.js":"35","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Category/CategoryList.js":"36","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Category/UpdateCategory.js":"37","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Category/NewCategory.js":"38","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Document/NewDocument.js":"39","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Quiz/NewQuiz.js":"40","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Banner/BannerList.js":"41","/home/truong/GR_Project_K63/frontend/src/pages/Chat/Chatpage.js":"42","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Banner/NewBanner.js":"43","/home/truong/GR_Project_K63/frontend/src/pages/Search/Search.js":"44","/home/truong/GR_Project_K63/frontend/src/pages/About/About.js":"45","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Banner/UpdateBanner.js":"46","/home/truong/GR_Project_K63/frontend/src/pages/ChatBot/ChatBot.js":"47","/home/truong/GR_Project_K63/frontend/src/components/layout/Footer.js":"48","/home/truong/GR_Project_K63/frontend/src/components/route/ProtectedRoute.js":"49","/home/truong/GR_Project_K63/frontend/src/components/cart/Shipping.js":"50","/home/truong/GR_Project_K63/frontend/src/components/layout/Header.js":"51","/home/truong/GR_Project_K63/frontend/src/components/cart/ConfirmOrder.js":"52","/home/truong/GR_Project_K63/frontend/src/components/cart/Payment.js":"53","/home/truong/GR_Project_K63/frontend/src/components/cart/OrderSuccess.js":"54","/home/truong/GR_Project_K63/frontend/src/components/layout/MetaData.js":"55","/home/truong/GR_Project_K63/frontend/src/actions/registerCourseAction.js":"56","/home/truong/GR_Project_K63/frontend/src/actions/cartActions.js":"57","/home/truong/GR_Project_K63/frontend/src/components/layout/Loader.js":"58","/home/truong/GR_Project_K63/frontend/src/actions/bannerAction.js":"59","/home/truong/GR_Project_K63/frontend/src/actions/courseActions.js":"60","/home/truong/GR_Project_K63/frontend/src/actions/categoryAction.js":"61","/home/truong/GR_Project_K63/frontend/src/constants/cartConstants.js":"62","/home/truong/GR_Project_K63/frontend/src/constants/userConstants.js":"63","/home/truong/GR_Project_K63/frontend/src/constants/orderConstants.js":"64","/home/truong/GR_Project_K63/frontend/src/constants/notifyContants.js":"65","/home/truong/GR_Project_K63/frontend/src/constants/registerCourseContants.js":"66","/home/truong/GR_Project_K63/frontend/src/constants/courseConstants.js":"67","/home/truong/GR_Project_K63/frontend/src/constants/categoryConstant.js":"68","/home/truong/GR_Project_K63/frontend/src/constants/bannerConstant.js":"69","/home/truong/GR_Project_K63/frontend/src/actions/orderActions.js":"70","/home/truong/GR_Project_K63/frontend/src/components/cart/CheckoutSteps.js":"71","/home/truong/GR_Project_K63/frontend/src/actions/notifyAction.js":"72","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Sidebar.js":"73","/home/truong/GR_Project_K63/frontend/src/components/layout/Search.js":"74","/home/truong/GR_Project_K63/frontend/src/components/banner/Banner.js":"75","/home/truong/GR_Project_K63/frontend/src/components/layout/NotifyMe/NotifyMe.js":"76","/home/truong/GR_Project_K63/frontend/src/components/chat/MyChats.js":"77","/home/truong/GR_Project_K63/frontend/src/components/course/SearchCourse.js":"78","/home/truong/GR_Project_K63/frontend/src/components/chat/Chatbox.js":"79","/home/truong/GR_Project_K63/frontend/src/components/chat/miscellaneous/SideDrawer.js":"80","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Document/DocumentForm.js":"81","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Quiz/QuizList.js":"82","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Quiz/QuizForm.js":"83","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Document/DocumentList.js":"84","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Lesson/UploadsList.js":"85","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Lesson/UploadForm.js":"86","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Topic/TopicForm.js":"87","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Topic/TopicList.js":"88","/home/truong/GR_Project_K63/frontend/src/components/course/Course.js":"89","/home/truong/GR_Project_K63/frontend/src/components/review/ListReviews.js":"90","/home/truong/GR_Project_K63/frontend/src/components/quiz/Quiz.js":"91","/home/truong/GR_Project_K63/frontend/src/components/regularCourses/regularCourses.js":"92","/home/truong/GR_Project_K63/frontend/src/components/chat/ChatLoading.js":"93","/home/truong/GR_Project_K63/frontend/src/components/chat/SingleChat.js":"94","/home/truong/GR_Project_K63/frontend/src/components/chat/userAvatar/UserListItem.js":"95","/home/truong/GR_Project_K63/frontend/src/config/ChatLogics.js":"96","/home/truong/GR_Project_K63/frontend/src/components/chat/ScrollableChat.js":"97","/home/truong/GR_Project_K63/frontend/src/components/chat/miscellaneous/ProfileModal.js":"98","/home/truong/GR_Project_K63/frontend/src/components/course/RegularCourse.js":"99"},{"size":705,"mtime":1682424312971,"results":"100","hashOfConfig":"101"},{"size":6622,"mtime":1682424312971,"results":"102","hashOfConfig":"101"},{"size":3400,"mtime":1682424312975,"results":"103","hashOfConfig":"101"},{"size":985,"mtime":1682424312971,"results":"104","hashOfConfig":"101"},{"size":8125,"mtime":1682424312971,"results":"105","hashOfConfig":"101"},{"size":1102,"mtime":1682424312975,"results":"106","hashOfConfig":"101"},{"size":1633,"mtime":1682424312975,"results":"107","hashOfConfig":"101"},{"size":7142,"mtime":1682424312975,"results":"108","hashOfConfig":"101"},{"size":4375,"mtime":1682424312975,"results":"109","hashOfConfig":"101"},{"size":4011,"mtime":1682424312975,"results":"110","hashOfConfig":"101"},{"size":3538,"mtime":1682424312975,"results":"111","hashOfConfig":"101"},{"size":20591,"mtime":1682424312975,"results":"112","hashOfConfig":"101"},{"size":3899,"mtime":1682424312975,"results":"113","hashOfConfig":"101"},{"size":4196,"mtime":1682424312975,"results":"114","hashOfConfig":"101"},{"size":3354,"mtime":1682424312975,"results":"115","hashOfConfig":"101"},{"size":5317,"mtime":1682424312975,"results":"116","hashOfConfig":"101"},{"size":15502,"mtime":1682424312971,"results":"117","hashOfConfig":"101"},{"size":2867,"mtime":1682424312975,"results":"118","hashOfConfig":"101"},{"size":3012,"mtime":1682424312975,"results":"119","hashOfConfig":"101"},{"size":14482,"mtime":1682424312971,"results":"120","hashOfConfig":"101"},{"size":3791,"mtime":1682424312975,"results":"121","hashOfConfig":"101"},{"size":2222,"mtime":1682424312975,"results":"122","hashOfConfig":"101"},{"size":3858,"mtime":1682424312975,"results":"123","hashOfConfig":"101"},{"size":5798,"mtime":1682424312975,"results":"124","hashOfConfig":"101"},{"size":3484,"mtime":1682424312975,"results":"125","hashOfConfig":"101"},{"size":8655,"mtime":1682424312975,"results":"126","hashOfConfig":"101"},{"size":7961,"mtime":1682424312975,"results":"127","hashOfConfig":"101"},{"size":3988,"mtime":1682424312975,"results":"128","hashOfConfig":"101"},{"size":6303,"mtime":1682424312975,"results":"129","hashOfConfig":"101"},{"size":3269,"mtime":1682424312975,"results":"130","hashOfConfig":"101"},{"size":6036,"mtime":1682424312975,"results":"131","hashOfConfig":"101"},{"size":4677,"mtime":1682424312975,"results":"132","hashOfConfig":"101"},{"size":4554,"mtime":1682424312975,"results":"133","hashOfConfig":"101"},{"size":3274,"mtime":1682424312975,"results":"134","hashOfConfig":"101"},{"size":10529,"mtime":1682424312975,"results":"135","hashOfConfig":"101"},{"size":4174,"mtime":1682424312971,"results":"136","hashOfConfig":"101"},{"size":3479,"mtime":1682424312971,"results":"137","hashOfConfig":"101"},{"size":2923,"mtime":1682424312971,"results":"138","hashOfConfig":"101"},{"size":3275,"mtime":1682424312975,"results":"139","hashOfConfig":"101"},{"size":3210,"mtime":1682424312975,"results":"140","hashOfConfig":"101"},{"size":3342,"mtime":1682424312971,"results":"141","hashOfConfig":"101"},{"size":845,"mtime":1682424312971,"results":"142","hashOfConfig":"101"},{"size":4268,"mtime":1682424312971,"results":"143","hashOfConfig":"101"},{"size":9409,"mtime":1682424312975,"results":"144","hashOfConfig":"101"},{"size":2646,"mtime":1682424312971,"results":"145","hashOfConfig":"101"},{"size":4958,"mtime":1682424312971,"results":"146","hashOfConfig":"101"},{"size":3231,"mtime":1682424312971,"results":"147","hashOfConfig":"101"},{"size":4677,"mtime":1682424312971,"results":"148","hashOfConfig":"101"},{"size":920,"mtime":1682424312971,"results":"149","hashOfConfig":"101"},{"size":4762,"mtime":1682424312971,"results":"150","hashOfConfig":"101"},{"size":7869,"mtime":1682424312971,"results":"151","hashOfConfig":"101"},{"size":3733,"mtime":1682424312971,"results":"152","hashOfConfig":"101"},{"size":5498,"mtime":1682424312971,"results":"153","hashOfConfig":"101"},{"size":732,"mtime":1682424312971,"results":"154","hashOfConfig":"101"},{"size":232,"mtime":1682424312971,"results":"155","hashOfConfig":"101"},{"size":3410,"mtime":1682424312971,"results":"156","hashOfConfig":"101"},{"size":1072,"mtime":1682424312971,"results":"157","hashOfConfig":"101"},{"size":133,"mtime":1682424312971,"results":"158","hashOfConfig":"101"},{"size":3094,"mtime":1682424312971,"results":"159","hashOfConfig":"101"},{"size":17444,"mtime":1682424312971,"results":"160","hashOfConfig":"101"},{"size":3194,"mtime":1682424312971,"results":"161","hashOfConfig":"101"},{"size":146,"mtime":1682424312971,"results":"162","hashOfConfig":"101"},{"size":2385,"mtime":1682424312971,"results":"163","hashOfConfig":"101"},{"size":1160,"mtime":1682424312971,"results":"164","hashOfConfig":"101"},{"size":491,"mtime":1682424312971,"results":"165","hashOfConfig":"101"},{"size":1159,"mtime":1682424312971,"results":"166","hashOfConfig":"101"},{"size":5498,"mtime":1682424312971,"results":"167","hashOfConfig":"101"},{"size":1151,"mtime":1682424312971,"results":"168","hashOfConfig":"101"},{"size":1073,"mtime":1682424312971,"results":"169","hashOfConfig":"101"},{"size":3664,"mtime":1682424312971,"results":"170","hashOfConfig":"101"},{"size":1844,"mtime":1682424312971,"results":"171","hashOfConfig":"101"},{"size":1214,"mtime":1682424312971,"results":"172","hashOfConfig":"101"},{"size":3529,"mtime":1682424312975,"results":"173","hashOfConfig":"101"},{"size":1032,"mtime":1682424312971,"results":"174","hashOfConfig":"101"},{"size":803,"mtime":1682424312971,"results":"175","hashOfConfig":"101"},{"size":7089,"mtime":1682424312971,"results":"176","hashOfConfig":"101"},{"size":2622,"mtime":1682424312971,"results":"177","hashOfConfig":"101"},{"size":1894,"mtime":1682424312971,"results":"178","hashOfConfig":"101"},{"size":611,"mtime":1682424312971,"results":"179","hashOfConfig":"101"},{"size":3353,"mtime":1682424312971,"results":"180","hashOfConfig":"101"},{"size":2188,"mtime":1682424312975,"results":"181","hashOfConfig":"101"},{"size":1531,"mtime":1682424312975,"results":"182","hashOfConfig":"101"},{"size":3356,"mtime":1682424312975,"results":"183","hashOfConfig":"101"},{"size":1792,"mtime":1682424312975,"results":"184","hashOfConfig":"101"},{"size":1480,"mtime":1682424312975,"results":"185","hashOfConfig":"101"},{"size":2173,"mtime":1682424312975,"results":"186","hashOfConfig":"101"},{"size":1057,"mtime":1682424312975,"results":"187","hashOfConfig":"101"},{"size":1152,"mtime":1682424312975,"results":"188","hashOfConfig":"101"},{"size":1392,"mtime":1682424312971,"results":"189","hashOfConfig":"101"},{"size":800,"mtime":1682424312971,"results":"190","hashOfConfig":"101"},{"size":2054,"mtime":1682424312971,"results":"191","hashOfConfig":"101"},{"size":1831,"mtime":1682424312971,"results":"192","hashOfConfig":"101"},{"size":158,"mtime":1682424312971,"results":"193","hashOfConfig":"101"},{"size":5847,"mtime":1682424312971,"results":"194","hashOfConfig":"101"},{"size":607,"mtime":1682424312971,"results":"195","hashOfConfig":"101"},{"size":1343,"mtime":1682424312971,"results":"196","hashOfConfig":"101"},{"size":1525,"mtime":1682424312971,"results":"197","hashOfConfig":"101"},{"size":1106,"mtime":1682424312971,"results":"198","hashOfConfig":"101"},{"size":1373,"mtime":1682424312971,"results":"199","hashOfConfig":"101"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"15f9q58",{"filePath":"203","messages":"204","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"202"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"202"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"202"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"202"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"202"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"202"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"202"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"202"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"202"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"202"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"202"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"202"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"202"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"202"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"202"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"202"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"202"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"202"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"202"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"202"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"202"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"202"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"202"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"312","usedDeprecatedRules":"202"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"202"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"202"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"202"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"202"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"202"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"202"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"202"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"202"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"202"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"202"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"202"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"202"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"202"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"202"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"202"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"202"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"202"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"202"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},"/home/truong/GR_Project_K63/frontend/src/index.js",[],["442","443"],"/home/truong/GR_Project_K63/frontend/src/App.js",["444","445","446","447","448","449","450","451"],"import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/layout/Header'\nimport Footer from './components/layout/Footer'\n\nimport Home from './pages/Home/Home'\nimport CourseDetails from './pages/Course/CourseDetails'\n\n\nimport RegisterCourseList from './pages/RegisterCourse/RegisterCourseList'\nimport Shipping from './components/cart/Shipping'\nimport ConfirmOrder from './components/cart/ConfirmOrder'\nimport Payment from './components/cart/Payment'\nimport OrderSuccess from './components/cart/OrderSuccess'\n\n\nimport Login from './pages/User/Login'\nimport Register from './pages/User/Register'\nimport Profile from './pages/User/Profile'\nimport UpdateProfile from './pages/User/UpdateProfile'\nimport UpdatePassword from './pages/User/UpdatePassword'\nimport ForgotPassword from './pages/User/ForgotPassword'\nimport NewPassword from './pages/User/NewPassword'\n\nimport Dashboard from './pages/Dashboard/Dashboard'\nimport CoursesList from './pages/Dashboard/Courses/CoursesList'\nimport NewCourse from './pages/Dashboard/Courses/NewCourse'\nimport UpdateCourse from './pages/Dashboard/Courses/UpdateCourse'\nimport OrdersList from './pages/Dashboard/OrdersList'\nimport ProcessOrder from './pages/Dashboard/ProcessOrder'\nimport UsersList from './pages/Dashboard/Users/UsersList'\nimport UpdateUser from './pages/Dashboard/Users/UpdateUser'\nimport CourseReviews from './pages/Dashboard/CourseReview/CourseReviews'\nimport NewLesson from './pages/Dashboard/Courses/Lesson/NewLesson'\nimport Lessons from './pages/Course/Lesson'\nimport ProtectedRoute from './components/route/ProtectedRoute'\nimport { loadUser } from './actions/userActions'\nimport { useSelector } from 'react-redux'\nimport store from './store'\nimport axios from 'axios'\n\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport NewTopic from './pages/Dashboard/Courses/Topic/NewTopic'\nimport NewQuiz from './pages/Dashboard/Courses/Quiz/NewQuiz'\nimport NewDocument from './pages/Dashboard/Courses/Document/NewDocument'\nimport CategoryList from './pages/Dashboard/Category/CategoryList'\nimport NewCategory from './pages/Dashboard/Category/NewCategory'\nimport UpdateCategory from './pages/Dashboard/Category/UpdateCategory'\nimport BannerList from './pages/Dashboard/Banner/BannerList'\nimport NewBanner from './pages/Dashboard/Banner/NewBanner'\nimport UpdateBanner from './pages/Dashboard/Banner/UpdateBanner'\nimport Search from './pages/Search/Search'\nimport Chatpage from \"./pages/Chat/Chatpage\";\nimport ChatBot from './pages/ChatBot/ChatBot'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport About from './pages/About/About'\n\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState('');\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    // async function getStripApiKey() {\n    //   const { data } = await axios.get('/api/v1/stripeapi');\n\n    //   setStripeApiKey(data.stripeApiKey)\n    // }\n\n    // getStripApiKey();\n\n  }, [])\n\n\n  \n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"\">\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/chats\" component={Chatpage} />\n          <Route path=\"/chatbot\" component={ChatBot} />\n          <Route path=\"/search\" component={Search} exact />\n          <Route path=\"/course/:id\" component={CourseDetails} exact />\n          <Route path=\"/course/:id/lessons\"  component={Lessons} exact/>\n          <Route path=\"/registerCourse\" component={RegisterCourseList} exact />\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n          {/* {stripeApiKey &&\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements>\n          } */}\n          \n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\n          <ProtectedRoute path=\"/profile/:id\" component={Profile} exact />\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n          \n        </div>\n\n        <ProtectedRoute path=\"/admin/courses\" isAdmin={true} component={Dashboard} exact />\n        <ProtectedRoute path=\"/me/courses\" isAdmin={false} component={CoursesList} exact />\n        <ProtectedRoute path=\"/me/course\" isAdmin={false} component={NewCourse} exact />\n        <ProtectedRoute path=\"/me/course/:id\" isAdmin={false} component={UpdateCourse} exact />\n        <ProtectedRoute path=\"/me/course/:id/lessons\" isAdmin={false} component={NewLesson} exact />\n        <ProtectedRoute path=\"/me/course/:id/documents\" isAdmin={false} component={NewDocument} exact />\n        <ProtectedRoute path=\"/me/course/:id/topics\" isAdmin={false} component={NewTopic} exact />\n        <ProtectedRoute path=\"/me/topic/:id/quizs\" isAdmin={false} component={NewQuiz} exact />\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={CourseReviews} exact />\n        <ProtectedRoute path=\"/admin/categories\" isAdmin={false} component={CategoryList} exact />\n        <ProtectedRoute path=\"/admin/category/new\" isAdmin={false} component={NewCategory} exact />\n        <ProtectedRoute path=\"/admin/category/update/:id\" isAdmin={false} component={UpdateCategory} exact />\n        <ProtectedRoute path=\"/admin/banners\" isAdmin={false} component={BannerList} exact />\n        <ProtectedRoute path=\"/admin/banner/new\" isAdmin={false} component={NewBanner} exact />\n        <ProtectedRoute path=\"/admin/banner/update/:id\" isAdmin={false} component={UpdateBanner} exact />\n\n       \n        <Footer />\n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/truong/GR_Project_K63/frontend/src/store.js",["452"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { coursesReducer, newCourseReducer, courseReducer, courseDetailsReducer, newReviewReducer, courseReviewsReducer, reviewReducer, newLessonReducer, courseLessonsReducer, lessonReducer, courseLessonReducer, courseTopicReducer, courseTopicsReducer, newTopicReducer, newQuizReducer, topicQuizReducer, topicQuizsReducer, quizReducer, newDocumentReducer, courseDocumentsReducer, documentReducer, regularCoursesReducer } from './reducers/courseReducers'\nimport { notifiesReducer } from './reducers/notifyReducer';\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer, profileReducer } from './reducers/userReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\nimport { newRegisterCourseReducer, RegisterCourseReducer, registerCoursesReducer } from './reducers/registerCourseReducer';\nimport { categoriesReducer, categoryDetailsReducer, categoryReducer, newCategoryReducer } from './reducers/categoryReducer';\nimport { bannerDetailsReducer, bannerReducer, bannersReducer, newBannerReducer } from './reducers/bannerReducer';\n\n\nconst reducer = combineReducers({\n    courses: coursesReducer,\n    regularCourses: regularCoursesReducer,\n    courseDetails: courseDetailsReducer,\n    newCourse: newCourseReducer,\n    course: courseReducer,\n    courseReviews: courseReviewsReducer,\n    review: reviewReducer,\n    courseLessons: courseLessonsReducer,\n    courseTopics: courseTopicsReducer,\n    newTopic: newTopicReducer,\n    topic: courseTopicReducer,\n    newQuiz: newQuizReducer,\n    quiz: topicQuizReducer,\n    topicQuizs:topicQuizsReducer,\n    lesson: lessonReducer,\n    media: courseLessonReducer,\n    newDoc: newDocumentReducer,\n    docs: courseDocumentsReducer,\n    doc:documentReducer,\n    auth: authReducer,\n    user: userReducer,\n    allUsers: allUsersReducer,\n    userDetails: userDetailsReducer,\n    forgotPassword: forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder: newOrderReducer,\n    myOrders: myOrdersReducer,\n    allOrders: allOrdersReducer,\n    orderDetails: orderDetailsReducer,\n    order: orderReducer,\n    newReview: newReviewReducer,\n    newLesson: newLessonReducer,\n    notifies: notifiesReducer,\n    registerCourse: RegisterCourseReducer,\n    registerCourses: registerCoursesReducer,\n    newRegisterCourse: newRegisterCourseReducer,\n    categories: categoriesReducer,\n    newCategory: newCategoryReducer,\n    category: categoryReducer,\n    categoryDetails: categoryDetailsReducer,\n    banners: bannersReducer,\n    newBanner: newBannerReducer,\n    banner: bannerReducer,\n    bannerDetails: bannerDetailsReducer,\n    profile: profileReducer\n})\n\n\nlet initialState = {\n    // cart: {\n    //     cartItems: localStorage.getItem('cartItems')\n    //         ? JSON.parse(localStorage.getItem('cartItems'))\n    //         : [],\n    //     shippingInfo: localStorage.getItem('shippingInfo')\n    //         ? JSON.parse(localStorage.getItem('shippingInfo'))\n    //         : {}\n    // }\n}\n\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\n\nexport default store;","/home/truong/GR_Project_K63/frontend/src/Context/ChatProvider.js",["453","454","455","456"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport store from '../store'\nimport { useSelector } from \"react-redux\";\nimport { loadUser } from \"../actions/userActions\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [notify, setNotify] = useState([]);\n  \n  const [chats, setChats] = useState();\n\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\n\n  useEffect(() => {\n   \n    store.dispatch(loadUser())\n    \n  }, [store.dispatch]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        notify,\n        setNotify,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","/home/truong/GR_Project_K63/frontend/src/actions/userActions.js",[],"/home/truong/GR_Project_K63/frontend/src/reducers/cartReducers.js",[],"/home/truong/GR_Project_K63/frontend/src/reducers/notifyReducer.js",[],"/home/truong/GR_Project_K63/frontend/src/reducers/userReducers.js",["457"],"import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOAD_PROFILE_REQUEST,\n    LOAD_PROFILE_SUCCESS,\n    LOAD_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_RESET,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\nexport const authReducer = (state = { user: {}}, action) => {\n    switch (action.type) {\n\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true,\n                isAuthenticated: false,\n            }\n\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const profileReducer = (state = {profile :{}}, action) => {\n    switch(action.type){\n        case LOAD_PROFILE_REQUEST:\n            return{\n                loading: true\n            }\n        case LOAD_PROFILE_SUCCESS:\n            return {\n                ...state,\n                loading: false,  \n                profile: action.payload\n            }\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                profile: null,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const userReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_USER_REQUEST:\n        case DELETE_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_USER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_USER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n        case DELETE_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const forgotPasswordReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case FORGOT_PASSWORD_REQUEST:\n        case NEW_PASSWORD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n\n        case FORGOT_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                message: action.payload\n            }\n\n        case NEW_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                success: action.payload\n            }\n\n        case FORGOT_PASSWORD_FAIL:\n        case NEW_PASSWORD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_USERS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case ALL_USERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                users: action.payload\n            }\n\n        case ALL_USERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload\n            }\n\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}","/home/truong/GR_Project_K63/frontend/src/reducers/orderReducers.js",[],"/home/truong/GR_Project_K63/frontend/src/reducers/categoryReducer.js",[],"/home/truong/GR_Project_K63/frontend/src/reducers/registerCourseReducer.js",[],"/home/truong/GR_Project_K63/frontend/src/reducers/courseReducers.js",[],"/home/truong/GR_Project_K63/frontend/src/reducers/bannerReducer.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/RegisterCourse/RegisterCourseList.js",["458","459","460","461"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../../components/layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\nimport { getMeRegisterCourses,newRegisterCourse,deleteRegisterCourse } from '../../actions/registerCourseAction'\nimport { useEffect } from 'react'\nimport { DELETE_REGISTER_COURSE_RESET } from '../../constants/registerCourseContants'\nconst CourseList = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { registerCourses } = useSelector(state => state.registerCourses)\n\n    const alert = useAlert();\n\n    const { isDeleted } = useSelector(state => state.registerCourse)\n\n    const removeCourseHandler = (id) => {\n        dispatch(deleteRegisterCourse(id))\n    }\n\n    useEffect(()=>{\n        dispatch(getMeRegisterCourses())\n        if(isDeleted){\n            alert.success('Khóa học đã được bỏ đăng ký')\n            dispatch({ type: DELETE_REGISTER_COURSE_RESET })\n        }\n    },[dispatch,isDeleted])\n\n\n    // const checkoutHandler = () => {\n    //     history.push('/login?redirect=shipping')\n    // }\n\n    return (\n        <div className='container'>\n            <MetaData title={'Your Cart'} />\n            {registerCourses && registerCourses.length !== 0 ?  (\n                <Fragment>\n                    <h2 className=\"mt-5\">Số lượng đã đăng ký: <b>{registerCourses? registerCourses.length: 0} khóa học</b></h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-12\">\n\n                            {registerCourses && registerCourses.map(item => (\n                                <Fragment>\n                                    <hr />\n\n                                    <div className=\"cart-item\" key={item.course}>\n                                        <div className=\"row\">\n                                            <div className=\"col-4 col-lg-3\">\n                                                <img src={item.images[0].url} alt=\"Laptop\" height=\"90\" width=\"115\" />\n                                            </div>\n\n                                            <div className=\"col-6 col-lg-3\" style={{fontSize:'30px'}}>\n                                                <Link to={`/course/${item.course}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"mt-4 mt-lg-0\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCourseHandler(item._id)} >\n                                                    {' '}Hủy Đăng ký\n                                                </i>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </Fragment>\n                            ))}\n\n                        </div>\n{/* \n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{registerCourses.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">${registerCourses.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                            </div>\n                        </div> */}\n                    </div>\n                </Fragment>\n            ): <h2 className=\"mt-5\">Bạn chưa đăng ký khóa học nào</h2> }\n        </div>\n    )\n}\n\nexport default CourseList\n","/home/truong/GR_Project_K63/frontend/src/pages/Home/Home.js",["462","463","464","465"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Pagination from 'react-js-pagination'\n\nimport MetaData from '../../components/layout/MetaData'\n\nimport Loader from '../../components/layout/Loader'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert';\nimport { getCourses } from '../../actions/courseActions'\nimport { getCategories } from '../../actions/categoryAction';\n\nimport { getBanners } from '../../actions/bannerAction';\nimport Banner from '../../components/banner/Banner';\nimport Course from '../../components/course/Course';\nimport RegularCourses from '../../components/regularCourses/regularCourses';\n\n\nconst Home = () => {\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([0, 1000000])\n    const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, courses, error, coursesCount, resPerPage, filteredCoursesCount } = useSelector(state => state.courses)\n\n    \n    const keyword =  \"\"\n\n    \n    useEffect(() => {\n        \n        dispatch(getCategories());\n        dispatch(getBanners());\n        \n        if (error) {\n            return alert.error(error)\n        }\n\n\n        dispatch(getCourses(keyword, currentPage, price, category, rating));\n        \n\n\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n\n    let count = coursesCount;\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Onraincoosu - Hãy tận hưởng những khóa bổ ích'} />\n                    <Banner/>\n                    \n\n                    <section id=\"courses\" className=\"container mt-5\">\n                        <RegularCourses courses={courses}/>\n                       <h1 id=\"courses_heading\">Khóa học mới nhất</h1>\n                        <div className=\"row\">\n\n                            {\n                                courses.map(course => (\n                                        <Course key={course._id} course={course} col={3} />\n                                ))\n                            }\n\n                        </div>\n                    </section>\n\n                    {resPerPage <= count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={coursesCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Tiếp'}\n                                prevPageText={'Trước'}\n                                firstPageText={'Đầu tiên'}\n                                lastPageText={'Cuối cùng'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n                    \n\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Home\n","/home/truong/GR_Project_K63/frontend/src/pages/User/UpdateProfile.js",["466"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../../components/layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Thông tin đã được cập nhật thành công')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('email', email);\n        //formData.append('avatar', avatar);\n        for (let key in avatar) {\n            formData.append('avatar', avatar[key]);\n        }\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(e.target.files)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Cập nhật thông tin'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Cập nhật thông tin</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Tên</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Ảnh đại diện</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Chọn ảnh đại diện\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Cập nhật</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","/home/truong/GR_Project_K63/frontend/src/pages/Course/Lesson.js",["467","468","469"],"import { useEffect, useState } from \"react\";\nimport Loader from '../../components/layout/Loader'\nimport { clearErrors, getCourseLessons, getCourseLesson, getCourseTopics, getTopicQuizs, getCourseDetails, getCourseDocuments, newReview } from '../../actions/courseActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NEW_LESSON_RESET,NEW_REVIEW_RESET } from '../../constants/courseConstants'\nimport { Collapse } from 'antd';\nimport { useAlert } from 'react-alert'\nimport './index.css'\nimport Quiz from \"../../components/quiz/Quiz\";\nimport ListReviews from \"../../components/review/ListReviews\";\nimport { NEW_REGISTER_COURSE_RESET } from \"../../constants/registerCourseContants\";\nimport { comleteVideo, completedVideo, getMeRegisterCourses } from \"../../actions/registerCourseAction\";\n\n\nconst Lessons = ({match}) => {\n  const { Panel } = Collapse;\n  const dispatch = useDispatch();\n  const alert = useAlert()\n  const { loading, lessons,error } = useSelector(state => state.courseLessons)\n  const { error: lessonError, success } = useSelector(state => state.newLesson)\n  const {  topics } = useSelector(state => state.courseTopics)\n  const {  quizs } = useSelector(state => state.topicQuizs)\n  const { documents } = useSelector(state => state.docs)\n  const { error: reviewError, success:reviewSuccess } = useSelector(state => state.newReview)\n  const [index, setIndex] = useState(0)\n  const [indexTopic,setIndexTopic] = useState(0)\n  const [checked, setChecked] = useState([true])\n  const [checkedExercise, setCheckedExercise] = useState([false])\n  const [exercise,setExercise] = useState(false)\n  const { course } = useSelector(state => state.courseDetails)\n  const {user} = useSelector(state => state.auth)\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const onChangeChecked = (index) =>{\n    \n    const newCheck = []\n    for( let i; i < lessons.length + 1; i++){\n      newCheck[i] = false;\n    }\n    newCheck[index] = true;\n    console.log(newCheck)\n    setChecked(newCheck)\n    setCheckedExercise([false])\n    setIndex(index);\n    \n  }\n\n  const onChangeCheckedExercise = (index) =>{\n    const newCheck = []\n    for( let i; i < topics.length; i++){\n      newCheck[i] = false;\n    } \n\n    newCheck[index] = true;\n    setCheckedExercise(newCheck)\n    setChecked([false])\n    console.log(newCheck,index)\n  }\n\n\n  const openInNewTab = (url) => {\n    window.open(url, '_blank', 'noreferrer');\n  };\n\n  const { completeVideos } = useSelector(state => state.registerCourses)\n  const { success: complete } = useSelector(state => state.newRegisterCourse)\n  const { isUpdated } = useSelector(state => state.registerCourse)\n  \n\n\n  useEffect(() => {\n    dispatch(getCourseLessons(match.params.id))\n    dispatch(getCourseTopics(match.params.id))\n    dispatch(getCourseDetails(match.params.id))\n    dispatch(getCourseDocuments(match.params.id))\n    dispatch(getMeRegisterCourses())\n    \n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    if (lessonError) {\n        alert.error(lessonError);\n        dispatch(clearErrors())\n    }\n    \n    if (success) {\n        alert.success('Đăng tải thành công')\n        dispatch({ type: NEW_LESSON_RESET })\n    }\n    if (reviewError) {\n      alert.error(reviewError);\n      dispatch(clearErrors())\n  }\n\n  if (reviewSuccess) {\n      alert.success('Đánh giá được đăng tải thành công')\n      dispatch({ type: NEW_REVIEW_RESET })\n  } \n  \n  if (complete || isUpdated) {\n    dispatch({type: NEW_REGISTER_COURSE_RESET})\n  }\n   \n}, [dispatch, alert, error,lessonError,success,match.params.id,checked,checkedExercise,reviewSuccess,complete,isUpdated])\n  \n\nfunction setUserRatings() {\n  const stars = document.querySelectorAll('.star');\n\n  stars.forEach((star, index) => {\n      star.starValue = index + 1;\n\n      ['click', 'mouseover', 'mouseout'].forEach(function (e) {\n          star.addEventListener(e, showRatings);\n      })\n  })\n\n  function showRatings(e) {\n      stars.forEach((star, index) => {\n          if (e.type === 'click') {\n              if (index < this.starValue) {\n                  star.classList.add('orange');\n\n                  setRating(this.starValue)\n              } else {\n                  star.classList.remove('orange')\n              }\n          }\n\n          if (e.type === 'mouseover') {\n              if (index < this.starValue) {\n                  star.classList.add('yellow');\n              } else {\n                  star.classList.remove('yellow')\n              }\n          }\n\n          if (e.type === 'mouseout') {\n              star.classList.remove('yellow')\n          }\n      })\n  }\n}\n\nconst reviewHandler = (e) => {\n  e.preventDefault();\n  let formData = new FormData();\n  let formdata ={\n      rating,\n      comment,\n      courseId: match.params.id\n  }\n  formData.append('rating', rating);\n  formData.append('comment', comment);\n  formData.append('courseId', match.params.id);\n\n  dispatch(newReview(formdata));\n}\n\nconst checkCompleteVideo = (mediaId) =>{\n  if(user && completeVideos){\n    for(let i = 0; i < completeVideos.length; i++){\n      if(completeVideos[i].user === user._id && completeVideos[i].media === mediaId){\n        return true\n      }\n    }\n    return false\n  }\n\n}\n\nconst checkCompletedVideo = (mediaId) =>{\n  if(completeVideos && user){\n    for(let i = 0; i < completeVideos.length; i++){\n      if(completeVideos[i].user === user._id && completeVideos[i].completed && completeVideos[i].media === mediaId){\n        return true\n      }\n    }\n    return false\n  }\n\n}\n\nconst checkCompletedTopic = (topicId) =>{\n  if(completeVideos && user){\n    const completedVideos = completeVideos.filter(item => item.topic === topicId && item.user === user._id)\n    if(completedVideos.length === 0){\n      return false;\n    }\n    for(let i = 0; i < completedVideos.length;  i++){\n      if(!completedVideos[i].completed){\n        return false\n      }\n    }\n    return true\n  }\n\n}\n\n\nreturn (\n    <>\n        {loading  ? <Loader/> :\n        <div className=\"container\">        \n        <div className=\"row mt-5\">\n        {exercise === false && lessons.length !== 0 &&\n              <div className=\"col-md-8\">\n                <video\n                    onEnded={() => {\n                      if(lessons[index +1]){\n                        let data={\n                          course: match.params.id,\n                          topic: lessons[index + 1].topicId,\n                          media: lessons[index + 1]._id\n                        }\n                        dispatch(comleteVideo(data))\n                      }\n\n\n                      let tmp={\n                        course: match.params.id,\n                        topic: lessons[index].topicId,\n                        media: lessons[index]._id\n                      }\n                     \n                      dispatch(completedVideo(tmp))\n                    }}\n                    controls\n                  >\n                    <source src={ lessons[index] ? lessons[index].videos : \"\"} />\n                </video>\n            \n              </div>\n            } \n\n            {exercise ? <Quiz quizs={quizs}/> : ''}\n      <div className=\"col-md-4\">\n          <div className=\"season_tabs\">\n            {topics[indexTopic] &&\n            <Collapse defaultActiveKey={[topics[indexTopic]._id]}>\n            {topics && topics.map((topic,indexTopic) => {\n              return (\n                <Panel  header={topic.name} key={topic._id}>\n                   {lessons &&\n                    lessons.map((lesson,index) => {\n                      if(lesson.topicId === topic._id){\n                        return (\n                          <>\n                            {checkCompleteVideo(lesson._id) ? \n                            <div key={lesson._id} className=\"season_tab\">\n                            {index === 0 ? \n                              <input  onChange={() => {onChangeChecked(index);setIndexTopic(indexTopic);setExercise(false)}} type=\"radio\" id={`tab-${index+1}`} name={`tab-group-1`} checked={checked[0]}/> \n                              :<input onChange={() => {onChangeChecked(index);setIndexTopic(indexTopic);setExercise(false)}} type=\"radio\" id={`tab-${index+1}`} name={`tab-group-1`} checked={checked[index]}/>\n                              }\n                          \n                            <label className=\"d-flex justify-content-between\" htmlFor={`tab-${index+1}`}>\n                              <span>{lesson.name}</span>\n                              {checkCompletedVideo(lesson._id) ?\n                              <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i> : \"\"\n                              }\n                            </label>\n                            \n  \n                              \n                            </div>\n                            :\n  \n                            <div key={lesson._id} className=\"season_tab video-lock\">\n                          \n                            <label className=\"d-flex justify-content-between\" htmlFor={`tab-${index+1}`}>\n                              <span>{lesson.name}</span>\n                              <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                            </label>\n                            </div>\n                          }\n  \n                          </>\n  \n                        );\n                        \n                      }\n\n                    })}\n                  {\n                  checkCompletedTopic(topic._id) ?  \n                  <div className=\"season_tab\">\n                      <input  onChange={() => {setExercise(true) ; dispatch(getTopicQuizs(topic._id)); onChangeCheckedExercise(indexTopic);setIndexTopic(indexTopic)}} type=\"radio\" id={`tabb-${indexTopic}`} name={`tab-group-1`} checked={checkedExercise[indexTopic]}/> \n                    <label className=\"d-flex justify-content-between\" htmlFor={`tabb-${indexTopic}`}>\n                        <span>Bài tập</span>\n                        \n                    </label>\n                    \n                      \n                  </div>\n                  :\n                  <div className=\"season_tab video-lock\"> \n                    <label className=\"d-flex justify-content-between\" htmlFor={`tabb-${indexTopic}`}>\n                        <span>Bài tập</span>\n                        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                        \n                    </label>\n                    \n                      \n                  </div>\n                  }\n                </Panel>\n              )\n            })}\n            </Collapse>\n            }\n          </div>\n      </div>\n\n        </div>\n\n        <div>\n          <div className=\"col-md-8 mt-3\">\n            {documents &&\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n              \n                <th>Bài giảng</th>\n              </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n              {\n                documents.map((document) => {\n                  return (\n                    <>\n                        {document.docs.map((doc) => {\n                          return (\n                            <>\n                              <button\n                                style={{width:'100px',height:'100px',marginRight:'10px',background:'white'}}\n                                role=\"link\"\n                                onClick={() => openInNewTab(`http://localhost:4000${doc}`)}\n                              >\n                                <i style={{fontSize:'40px',color:'red'}} className=\"fa fa-file-pdf-o \" aria-hidden=\"true\"></i>\n                                <div>{document.name}</div>\n                              </button>\n  \n                            </>\n\n                          );\n                        })}\n\n                    </>\n                  );\n                })}\n                </td>\n                </tr>\n            </tbody>\n          </table>\n          }\n          </div>\n          <div className=\"mt-5\">\n            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mb-2\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\n            Gửi đánh giá\n            </button>\n                                :\n            <div className=\"alert alert-danger mt-5\" type='alert'>Đăng nhập để viết đánh giá</div>\n            }\n            <div className=\"row mt-2\" style={{height:'0px'}}>\n              <div className=\"rating w-50\">\n\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Đánh giá</h5>\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"modal-body\">\n\n                                                    <ul className=\"stars\" >\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                    </ul>\n\n                                                    <textarea\n                                                        name=\"review\"\n                                                        id=\"review\" className=\"form-control mt-3\"\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    >\n\n                                                    </textarea>\n\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={(e) => reviewHandler(e)} data-dismiss=\"modal\" aria-label=\"Close\">Gửi</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n            </div>\n            \n            {course.details && course.details.reviews && course.details.reviews.length > 0 && (\n              <ListReviews reviews={course.details.reviews} />\n            )}\n          </div>\n        </div>\n\n\n    \n      </div>\n\n         }\n    </>\n\n  );\n};\n\nexport default Lessons;\n","/home/truong/GR_Project_K63/frontend/src/pages/User/NewPassword.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/User/UpdatePassword.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Course/CourseDetails.js",["470","471"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Loader from '../../components/layout/Loader'\nimport MetaData from '../../components/layout/MetaData'\nimport ListReviews from '../../components/review/ListReviews'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCourseDetails, newReview, clearErrors, getCourseLessons, getCourseTopics } from '../../actions/courseActions'\nimport { NEW_REVIEW_RESET } from '../../constants/courseConstants'\nimport { getMeRegisterCourses, newRegisterCourse } from '../../actions/registerCourseAction'\nimport { NEW_REGISTER_COURSE_RESET } from '../../constants/registerCourseContants'\nimport { Collapse } from 'antd'\nimport './index.css'\nconst CourseDetails = ({ match }) => {\n\n    const { Panel } = Collapse;\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const [indexTopic,setIndexTopic] = useState(0)\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, course } = useSelector(state => state.courseDetails)\n    const { user } = useSelector(state => state.auth)\n    const { error: reviewError, success } = useSelector(state => state.newReview)\n    const { registerCourses } = useSelector(state => state.registerCourses)\n    const { success: newSuccess} = useSelector(state => state.newRegisterCourse)\n    const { lessons  } = useSelector(state => state.courseLessons)\n    const {  topics } = useSelector(state => state.courseTopics)\n\n    const formatDate = (dateInput) =>{\n        const date = new Date(dateInput)\n        return \"ngày \" + ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + ' tháng ' + ((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + ' năm ' +  date.getFullYear()\n    }\n\n    useEffect(() => {\n        dispatch(getCourseDetails(match.params.id))\n        dispatch(getMeRegisterCourses())\n        dispatch(getCourseLessons(match.params.id))\n        dispatch(getCourseTopics(match.params.id))\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (reviewError) {\n            alert.error(reviewError);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            alert.success('Đánh giá được đăng tải thành công')\n            dispatch({ type: NEW_REVIEW_RESET })\n        }\n\n        if (newSuccess) {\n            alert.success('Đăng ký thành công')\n            dispatch({ type: NEW_REGISTER_COURSE_RESET })\n        }\n\n\n    }, [dispatch, alert, error, reviewError, match.params.id,success,newSuccess])\n\n\n\n    const addCourse = () =>{\n        dispatch(newRegisterCourse(match.params.id))\n    }\n\n\n    const isRegister = () =>{\n        for(let i =0; i < registerCourses?.length; i++){\n            if(registerCourses[i].course === match.params.id){\n                return true\n            }\n        }\n        return false\n    }\n\n    function setUserRatings() {\n        const stars = document.querySelectorAll('.star');\n\n        stars.forEach((star, index) => {\n            star.starValue = index + 1;\n\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\n                star.addEventListener(e, showRatings);\n            })\n        })\n\n        function showRatings(e) {\n            stars.forEach((star, index) => {\n                if (e.type === 'click') {\n                    if (index < this.starValue) {\n                        star.classList.add('orange');\n\n                        setRating(this.starValue)\n                    } else {\n                        star.classList.remove('orange')\n                    }\n                }\n\n                if (e.type === 'mouseover') {\n                    if (index < this.starValue) {\n                        star.classList.add('yellow');\n                    } else {\n                        star.classList.remove('yellow')\n                    }\n                }\n\n                if (e.type === 'mouseout') {\n                    star.classList.remove('yellow')\n                }\n            })\n        }\n    }\n\n    const reviewHandler = (e) => {\n        e.preventDefault();\n        let formData = new FormData();\n        let formdata ={\n            rating,\n            comment,\n            courseId: match.params.id\n        }\n        formData.append('rating', rating);\n        formData.append('comment', comment);\n        formData.append('courseId', match.params.id);\n\n        dispatch(newReview(formdata));\n    }\n\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : course.details && (\n                <div className='container'>\n                    <MetaData title={course.details.name} />\n                    <div className=\"row d-flex justify-content-around\">\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"course_image\">\n                            \n                            {course.details.images && course.details.images.map(image => (\n                                <img className=\"d-block w-100\" src={image.url} alt={course.title} />\n                            ))}\n                            <div><h2 className='mt-5'>Danh sách bài học</h2></div>\n                            <div>\n                                <div className=\"season_tabs\">\n                                    {topics[indexTopic] &&\n                                    <Collapse defaultActiveKey={[topics[indexTopic]._id]}>\n                                    {topics && topics.map((topic,indexTopic) => {\n                                    return (\n                                        <Panel  header={topic.name} key={topic._id}>\n                                        {lessons &&\n                                            lessons.map((lesson,index) => {\n                                            if(lesson.topicId === topic._id){\n                                                return (\n                                                <>\n                                                    <div key={lesson._id} className=\"season_tab\">\n                                                \n                                                    <label className=\"d-flex justify-content-between\" htmlFor={`tab-${index+1}`}>\n                                                        <span>{lesson.name}</span>\n                                                    </label>\n                                                    \n                                                    </div>\n                        \n                                                </>\n                        \n                                                );\n                                                \n                                            }\n\n                                            })}\n                                        \n                                            <div className=\"season_tab\"> \n                                            <label className=\"d-flex justify-content-between\" htmlFor={`tabb-${indexTopic}`}>\n                                                <span>Bài tập</span>\n                                                \n                                            </label>\n                                            \n                                            \n                                        </div>\n                                        </Panel>\n                                    )\n                                    })}\n                                    </Collapse>\n                                    }\n                                </div>\n                            </div>\n\n                            \n                           \n                    </div>\n\n                        <div className=\"col-12 col-lg-5 mt-5\">\n                            <h3>{course.details.name}</h3>\n                            <p id=\"course_id\">Khóa học # {course.details._id}</p>\n\n                            <hr />\n\n                            <div className=\"rating-outer\">\n                                <div className=\"rating-inner\" style={{ width: `${(course.details.ratings / 5) * 100}%` }}></div>\n                            </div>\n                            <span id=\"no_of_reviews\">({course.details.numOfReviews} Reviews)</span>\n\n                            <hr />\n\n                            <p id=\"course_price\">{course.details.price} ĐỒNG</p>\n                            {new Date() > new Date(course.details.startDate) && new Date() < new Date(course.details.endDate) ? \n                            <>\n                            {\n                                isRegister() ? \n                                <>\n                                <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" >Đã đăng ký</button>\n                                <Link to={`/course/${course.details._id}/lessons`}>\n                                    <button type=\"button\" id=\"cart_btn\" className=\"btn btn-danger d-inline ml-4\" >Xem khóa học</button>\n                                \n                                </Link>\n                                </>\n                                :<>\n                                {user ?\n                                    <button onClick={() => addCourse()} type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" >Đăng ký học</button>\n                                :  <div className=\"alert alert-danger mt-5\" type='alert'>Đăng nhập để đăng ký khóa học</div> }\n                                </>                                \n                               }\n\n\n                            </>\n                            :\n                            <div className=\"alert alert-danger mt-5\" type='alert'>Khóa học hiện tại nằm ngoài khoảng thời gian khả dụng</div>\n                            }                           \n\n                            <hr />\n\n                            <h4 className=\"mt-2\">Mô tả:</h4>\n                            <p>{course.details.description}</p>\n                            <hr />\n\n                            <h4 className=\"mt-2\">Thông tin tác giả:</h4>\n                            <p>Tên: {course.user.name}</p>\n                            <p>Email: {course.user.email}</p>\n                            <Link to={`/profile/${course.user._id}`} >Xem thêm thông tin chi tiết</Link>\n                            <hr />\n                            {/* <p id=\"course_seller mb-3\">Sold by: <strong>{course.seller}</strong></p> */}\n\n                             <h4 className='mt-2'>Thời gian</h4>\n                             <p>Ngày bắt đầu: {formatDate(course.details.startDate)}</p> \n                             <p>Ngày kết thúc: {formatDate(course.details.endDate)}</p>       \n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\n                                Gửi đánh giá\n                            </button>\n                                :\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Đăng nhập để viết đánh giá</div>\n                            }\n\n\n                            <div className=\"row mt-2 \">\n                                <div className=\"rating w-50\">\n\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Đánh giá</h5>\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"modal-body\">\n\n                                                    <ul className=\"stars\" >\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                    </ul>\n\n                                                    <textarea\n                                                        name=\"review\"\n                                                        id=\"review\" className=\"form-control mt-3\"\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    >\n\n                                                    </textarea>\n\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={(e) => reviewHandler(e)} data-dismiss=\"modal\" aria-label=\"Close\">Gửi</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {course.details.reviews && course.details.reviews.length > 0 && (\n                        <ListReviews reviews={course.details.reviews} />\n                    )}\n\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default CourseDetails\n","/home/truong/GR_Project_K63/frontend/src/pages/User/Profile.js",["472","473","474"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Loader from '../../components/layout/Loader'\nimport MetaData from '../../components/layout/MetaData'\nimport { clearErrors, publicProfile } from '../../actions/userActions'\nimport Pagination from 'react-js-pagination'\nimport Course from '../../components/course/Course'\n\nconst Profile = ({ match }) => {\n\n    const { user, loading, error } = useSelector(state => state.auth)\n\n    const { profile } = useSelector(state => state.profile)\n    \n\n    const dispatch = useDispatch();\n\n    let userId = match.params.id\n\n    let userPublic\n\n    useEffect(() => {\n        if(userId)\n            dispatch(publicProfile(match.params.id))\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }            \n       \n    },[dispatch,userId])\n\n    \n    if(userId){\n        userPublic = profile\n    }else{\n        userPublic = user\n    }\n\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <div className='container'>\n                    <MetaData title={'Thông tin của tôi'} />\n                    {(user?._id === profile?._id || !userId) ?\n                    <h2 className=\"mt-5\">Thông tin của tôi</h2> :  <h2 className=\"mt-5\">Thông tin cá nhân</h2>}\n                    <div className=\"row justify-content-around mt-5 user-info\">\n                        <div className=\"col-12 col-md-3\">\n                            <figure className='avatar avatar-profile'>\n                                <img className=\"rounded-circle img-fluid\" src={userPublic?.avatar?.url} alt={userPublic?.name} />\n                            </figure>\n                            {(user?._id === profile?._id || !userId) &&\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                                Chỉnh sửa thông tin\n                            </Link>}\n                        </div>\n\n                        <div className=\"col-12 col-md-5\">\n                            <h4>Tên</h4>\n                            <p>{userPublic?.name}</p>\n\n                            <h4>Email</h4>\n                            <p>{userPublic?.email}</p>\n\n                            <h4>Ngày tham gia</h4>\n                            <p>{String(userPublic?.createdAt).substring(0, 10)}</p>\n\n                            {/* {userPublic?.role !== 'admin' && (\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\n                                    My Orders\n                                </Link>\n                            )} */}\n\n                            {(user?._id === profile?._id || !userId) &&\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                                Đổi mật khẩu\n                            </Link>}\n                        </div>\n                        \n                    </div>\n                    <hr></hr>\n                    <section id=\"courses\" className=\"mt-5\">\n                        {userPublic?.courses ?  <h2 id=\"courses_heading\">Khóa học đang được hiện thị trên web</h2> : \"\" }\n                        <div className=\"row\">\n\n                            {(\n                                    userPublic?.courses?.map(course => (\n                                        <Course key={course._id} course={course} col={3} />\n                                    ))\n                            )}\n\n                        </div>\n                    </section>\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","/home/truong/GR_Project_K63/frontend/src/pages/User/ForgotPassword.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/OrdersList.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Dashboard.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/User/Login.js",["475"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../../components/layout/Loader'\nimport MetaData from '../../components/layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n            \n        }\n       \n        if (error) {\n           \n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Đăng nhập'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Đăng nhập</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Mật khẩu</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Quên mật khẩu?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    ĐĂNG NHẬP\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">Tạo tài khoản mới?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/NewCourse.js",["476"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../../../components/layout/MetaData'\nimport Sidebar from '../Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newCourse, clearErrors } from '../../../actions/courseActions'\nimport { NEW_COURSE_RESET } from '../../../constants/courseConstants'\n\nimport { getCategories } from '../../../actions/categoryAction'\n\n\nconst NewCourse = ({ history }) => {\n\n    const { categories } = useSelector(state => state.categories);\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('Công nghệ thông tin');\n    const [images, setImages] = useState([]);\n    const [startDate,setStartDate] = useState('');\n    const [endDate,setEndDate] = useState('');\n   \n    const [imagesPreview, setImagesPreview] = useState([])\n\n    // const categories = [\n    //     'Công nghệ thông tin',\n    //     'Ngoại ngữ'\n    // ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state.newCourse);\n\n    useEffect(() => {\n        dispatch(getCategories());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/me/courses');\n            alert.success('Tạo khóa học thành công');\n            dispatch({ type: NEW_COURSE_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', price);\n        formData.append('description', description);\n        formData.append('category', category);\n        formData.append('startDate',startDate);\n        formData.append('endDate',endDate);\n\n        for (let key in images) {\n            formData.append(\"images\", images[key]);\n        }\n\n        console.log(images)\n        const data = {name,price,description,category,images,endDate,startDate}\n\n        //console.log(images)\n        \n\n        if(name && price && description && category && images && endDate && startDate){\n            \n            dispatch(newCourse(formData))\n        }else{\n            alert.error('Thông tin khóa học bị thiếu');\n        }\n            \n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])  \n                    setImages(e.target.files)\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Khóa học mới'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">Khóa học mới</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Tên</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Giá</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Mô tả</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Danh mục</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories && categories.map(category => (\n                                            <option key={category._id} value={category.name} >{category.name}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n\n                                <div className='form-group'>\n                                    <label htmlFor='startDate_field'>Ngày bắt đầu</label>\n                                    <input\n                                        type='date'\n                                        id='startDate_field'\n                                        className='form-control'\n                                        onChange={(e) => setStartDate(e.target.value)}\n                                    />\n                                </div>\n                                <div className='form-group'>\n                                    <label htmlFor='startDate_field'>Ngày kết thúc</label>\n                                    <input\n                                        type='date'\n                                        id='endDate_field'\n                                        className='form-control'\n                                        onChange={(e) => setEndDate(e.target.value)}\n                                    />\n                                </div>\n\n\n                                <div className='form-group'>\n                                    <label>Ảnh đại diện</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            //multiple\n                                            accept=\".png, .jpeg, .jpg\"\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Chọn ảnh\n                                     </label>\n                                    </div>\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    TẠO MỚI\n                                </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewCourse\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/CoursesList.js",["477"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Table,Tag, Input  } from 'antd';\n\nimport MetaData from '../../../components/layout/MetaData'\nimport Loader from '../../../components/layout/Loader'\nimport Sidebar from '../Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getMeCourses, getAdminCourses, deleteCourse, clearErrors, acceptCourse } from '../../../actions/courseActions'\nimport { DELETE_COURSE_RESET,  UPDATE_COURSE_RESET } from '../../../constants/courseConstants'\n\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n    },\n    {\n        title: 'Tên',\n        dataIndex: 'name',\n    },\n    {\n        title: 'Giá thành',\n        dataIndex: 'price',\n    },\n    {\n        title: 'Các chủ đề',\n        dataIndex: 'topics',\n    },\n    {\n        title: 'Các bài học',\n        dataIndex: 'lessons',\n    },\n    {\n        title: 'Tài liệu',\n        dataIndex: 'documents',\n    },\n    {\n        title: 'Trạng thái',\n        dataIndex: 'status',\n    },\n    {\n        title: 'Thao tác',\n        dataIndex: 'actions',\n    },\n];\n\nconst { Search } = Input;\n\nconst CoursesList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { user } = useSelector(state => state.auth)\n    const { loading, error, courses } = useSelector(state => state.courses);\n    const { error: deleteError, isDeleted, isUpdated } = useSelector(state => state.course)\n\n    const [search, setSearch] = useState('');\n    const [status,setStatus] = useState('');\n    const onSearch = (value) => setSearch(value);\n\n    const data = [];\n    \n\n    !!courses && courses.filter((item) => {\n        return search === ''\n          ? item\n          : (item.name.toLowerCase().includes(search.toLowerCase()) || item._id.toLowerCase().includes(search.toLowerCase()));\n      }).filter((item) => {\n        return status === ''\n          ? item\n          : (item.accepted === status);\n      }).forEach(course => {\n        data.push({\n            id: course._id,\n            name: course.name,\n            price: `${course.price} Đồng`,\n            lessons: <Fragment>\n                <Link to={`/me/course/${course._id}/lessons`} className=\"btn btn-success py-1 px-2\">\n                    <i className=\"fa fa-eye\"></i>\n                </Link>\n            </Fragment>,\n            documents: <Fragment>\n                <Link to={`/me/course/${course._id}/documents`} className=\"btn btn-success py-1 px-2\">\n                    <i className=\"fa fa-eye\"></i>\n                </Link>\n            </Fragment>,\n            topics: <Fragment>\n                <Link to={`/me/course/${course._id}/topics`} className=\"btn btn-success py-1 px-2\">\n                    <i className=\"fa fa-eye\"></i>\n                </Link>\n            </Fragment>,\n            status: <Fragment>\n                {course.accepted ?  <Tag color={'green'} >Đã phê duyệt </Tag> : <Tag color={'red'} >Chưa phê duyệt </Tag> }\n            </Fragment>,\n            actions: <Fragment>\n                <Link to={`/me/course/${course._id}`} className=\"btn btn-success py-1 px-2\">\n                    <i className=\"fa fa-pencil\"></i>\n                </Link>\n                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteCourseHandler(course._id)}>\n                    <i className=\"fa fa-trash\"></i>\n                </button>\n                {user.role === 'admin' && course.accepted === false &&\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => acceptCourseHandler(course._id)}>\n                        Phê duyệt\n                    </button>\n                }\n            </Fragment>\n        })\n    })\n    \n\n    const deleteCourseHandler = (id) => {\n        dispatch(deleteCourse(id))\n    }\n\n    const acceptCourseHandler = (id) =>{\n        dispatch(acceptCourse(id,courses))\n    }\n    useEffect(() => {\n        if(user.role === 'user')\n            dispatch(getMeCourses(user._id));\n        else\n            dispatch(getAdminCourses());\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Xóa khóa học thành công');\n            history.push('/me/courses');\n            dispatch({ type: DELETE_COURSE_RESET })\n        }\n\n        if (isUpdated) {\n            alert.success('Phê duyệt thành công');\n            dispatch({ type: UPDATE_COURSE_RESET })\n        }\n    \n\n    }, [dispatch, alert, error, deleteError, isDeleted, isUpdated, history])\n\n\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Tất cả các khóa học'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">Tất cả các khóa học</h1>\n                        <div className='float-right m-2'>\n                            <Search\n                                placeholder=\"Nhập vào từ khóa tìm kiếm tên\"\n                                allowClear\n                                enterButton=\"Tìm kiếm\"\n                                size=\"large\"\n                                onSearch={onSearch}\n                                style={{\n                                    width: 500,\n                                }}\n                            />\n                        </div>\n\n                        {loading ? <Loader /> : (\n                            <div>\n                            <div\n                              style={{\n                                marginBottom: 16,\n                              }}\n                            >\n                             <span\n                                style={{\n                                  marginLeft: 8,\n                                }}\n                              >\n                              </span>\n                              <Button type=\"primary\" style={{ background: \"#006241\"}} onClick={() => setStatus('')}>\n                                Tất cả\n                              </Button>\n                              <span\n                                style={{\n                                  marginLeft: 8,\n                                }}\n                              >\n                              </span>\n                              <Button type=\"primary\" style={{ background: \"#006241\"}} onClick={() => {setStatus(true)}} >\n                                Đã phê duyệt\n                              </Button>\n                              <span\n                                style={{\n                                  marginLeft: 8,\n                                }}\n                              >\n                              </span>\n                              <Button type=\"primary\" style={{ background: \"#006241\"}} onClick={() => {setStatus(false)}} >\n                                Đang chờ phê duyệt\n                              </Button>\n                              <span\n                                style={{\n                                  marginLeft: 8,\n                                }}\n                              >\n                              </span>\n                            </div>\n                            <Table columns={columns} dataSource={data} \n                                   pagination={{ defaultPageSize: 4 }}\n\n                            />\n                          </div>\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default CoursesList\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Users/UsersList.js",["478","479"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table,Button, Input, Space  } from 'antd';\n\nimport MetaData from '../../../components/layout/MetaData'\nimport Loader from '../../../components/layout/Loader'\nimport Sidebar from '../Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers, deleteUser, clearErrors } from '../../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../../constants/userConstants'\n\nconst columns =[\n    {\n        title: 'ID',\n        dataIndex: 'id',\n    },\n    {\n        title: 'Tên',\n        dataIndex: 'name',\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n    },\n    {\n        title: 'Vai trò',\n        dataIndex: 'role',\n    },\n    {\n        title: 'Thao tác',\n        dataIndex: 'actions',\n    },\n]\n\nconst { Search } = Input;\n\nconst UsersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    const { isDeleted } = useSelector(state => state.user)\n\n    const [search, setSearch] = useState('');\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Người dùng này đã được xóa thành công');\n            history.push('/admin/users');\n            dispatch({ type: DELETE_USER_RESET })\n        }\n\n    }, [dispatch, alert, error, isDeleted, history])\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n\n    const data = [];\n    \n    !!users && users.filter((item) => {\n        return search === ''\n          ? item\n          : (item.name.toLowerCase().includes(search.toLowerCase()) || item.email.toLowerCase().includes(search.toLowerCase()) || item.role.toLowerCase().includes(search.toLowerCase()) );\n      }).forEach(user => {\n        data.push({\n            id: user._id,\n            name: user.name,\n            email: user.email,\n            role: user.role,\n\n            actions: <Fragment>\n                <Link to={`/admin/user/${user._id}`} className=\"btn btn-success py-1 px-2\">\n                    <i className=\"fa fa-pencil\"></i>\n                </Link>\n                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\n                    <i className=\"fa fa-trash\"></i>\n                </button>\n            </Fragment>\n        })\n    })\n\n    const onSearch = (value) => setSearch(value);\n\n    return (\n        <Fragment>\n            <MetaData title={'All Users'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">Tất cả người dùng</h1>\n                        <div className='float-right m-2'>\n                            <Search\n                                placeholder=\"Nhập vào từ khóa tìm kiếm tên, email, vai trò\"\n                                allowClear\n                                enterButton=\"Tìm kiếm\"\n                                size=\"large\"\n                                onSearch={onSearch}\n                                style={{\n                                    width: 500,\n                                }}\n                            />\n                        </div>\n\n\n                        {loading ? <Loader /> : (\n                            <Table columns={columns} dataSource={data} \n                                pagination={{ defaultPageSize: 4 }}\n\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/ProcessOrder.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Topic/NewTopic.js",["480","481"],"import React, { useState, useEffect } from \"react\";\n\nimport Loader from '../../../../components/layout/Loader'\nimport MetaData from \"../../../../components/layout/MetaData\";\nimport Sidebar from '../../Sidebar'\nimport { useAlert } from 'react-alert'\nimport {  newTopic, clearErrors, getCourseTopics, deleteTopic,updateTopic } from '../../../../actions/courseActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NEW_TOPIC_RESET,DELETE_TOPIC_RESET, UPDATE_TOPIC_RESET } from '../../../../constants/courseConstants'\nimport TopicForm from \"./TopicForm\";\nimport TopicList from \"./TopicList\";\n\nconst NewTopic = ({match}) => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { loading, topics,error } = useSelector(state => state.courseTopics)\n  const { error: topicError, success } = useSelector(state => state.newTopic)\n  const { error: crudError, isDeleted, isUpdated } = useSelector(state => state.topic)\n  useEffect(() => {\n    dispatch(getCourseTopics(match.params.id))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n    if (topicError) {\n        alert.error(topicError);\n        dispatch(clearErrors())\n    }\n    \n    if (success) {\n        alert.success('Đăng tải thành công')\n        dispatch({ type: NEW_TOPIC_RESET })\n    }\n\n    if (crudError) {\n      alert.error(crudError);\n      dispatch(clearErrors())\n    }\n\n    if (isDeleted) {\n        alert.success('Xóa thành công');\n        dispatch({ type: DELETE_TOPIC_RESET })\n    }\n    if (isUpdated) {\n      alert.success('Cập nhật thành công');\n      dispatch({ type: UPDATE_TOPIC_RESET })\n  }\n\n}, [dispatch, alert, error,topicError,success,crudError, isDeleted,isUpdated, match.params.id])\n\n  const deleteTopicHandler = (id) => {\n    dispatch(deleteTopic(id))\n  }\n  return (\n    <>\n      <MetaData title={'Những bài học mới'} />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <div\n                className=\"card\"\n                style={{\n                  height: \"auto\",\n                  width: \"auto\",\n                  margin: \"40px\",\n                  border: \"1px solid black\",\n                  padding:\"10px\"\n                }}\n              >\n                <div className=\"card-body\">\n                  <TopicForm courseId={match.params.id} newTopic={newTopic}/>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-7\">\n              <div\n                className=\"card\"\n                style={{\n                  height: \"auto\",\n                  width: \"auto\",\n                  margin: \"40px\",\n                  border: \"1px solid black\",\n                  padding:\"10px\"\n                }}\n              >\n                {loading ? <Loader /> :\n                <div className=\"card-body\">\n                  <TopicList  topics={topics} deleteTopicHandler={deleteTopicHandler} />\n                </div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n};\n\nexport default NewTopic;\n","/home/truong/GR_Project_K63/frontend/src/pages/User/Register.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Users/UpdateUser.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/CourseReview/CourseReviews.js",["482","483","484"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../../../components/layout/MetaData'\nimport Loader from '../../../components/layout/Loader'\nimport Sidebar from '../Sidebar'\nimport { Table,Button } from 'antd';\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCourseReviews, deleteReview, clearErrors } from '../../../actions/courseActions'\nimport { DELETE_REVIEW_RESET } from '../../../constants/courseConstants'\n\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n    },\n    {\n        title: 'Đánh giá',\n        dataIndex: 'rating',\n    },\n    {\n        title: 'Bình luận',\n        dataIndex: 'comment',\n    },\n    {\n        title: 'Người dùng',\n        dataIndex: 'user',\n    },\n    {\n        title: 'Thao tác',\n        dataIndex: 'actions',\n    },\n]\n\nconst CourseReviews = () => {\n\n    const [courseId, setCourseId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.courseReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (courseId !== '') {\n            dispatch(getCourseReviews(courseId))\n        }\n\n        if (isDeleted) {\n            alert.success('Xóa bình luận thành công');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, courseId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, courseId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getCourseReviews(courseId))\n    }\n\n    const data = [];\n\n    !!reviews && reviews.forEach(review => {\n        data.push({\n            id: review._id,\n            rating: review.rating,\n            comment: review.comment,\n            user: review.name,\n\n            actions:\n                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                    <i className=\"fa fa-trash\"></i>\n                </button>\n        })\n    })\n\n    return (\n        <Fragment>\n            <MetaData title={'Course Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5 mb-3\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"courseId_field\">Nhập mã khóa học</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"courseId_field\"\n                                            className=\"form-control\"\n                                            value={courseId}\n                                            onChange={(e) => setCourseId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        TÌM KIẾM\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <Table columns={columns} dataSource={data} \n                                pagination={{ defaultPageSize: 4 }}\n\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">Không có bình luận nào</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default CourseReviews\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Lesson/NewLesson.js",["485","486"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UploadForm from \"./UploadForm\";\nimport UploadsList from \"./UploadsList\";\nimport Loader from '../../../../components/layout/Loader'\nimport MetaData from \"../../../../components/layout/MetaData\";\nimport Sidebar from '../../Sidebar'\nimport { useAlert } from 'react-alert'\nimport {  newLesson, clearErrors, getCourseLessons, deleteLesson, getCourseTopics } from '../../../../actions/courseActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NEW_LESSON_RESET,DELETE_LESSON_RESET } from '../../../../constants/courseConstants'\n\nconst NewLesson = ({match}) => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { loading, lessons,error } = useSelector(state => state.courseLessons)\n  const { error: lessonError, success } = useSelector(state => state.newLesson)\n  const { error: deleteError, isDeleted } = useSelector(state => state.lesson)\n  const {  topics } = useSelector(state => state.courseTopics)\n  useEffect(() => {\n    dispatch(getCourseLessons(match.params.id))\n\n    dispatch(getCourseTopics(match.params.id))\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n    if (lessonError) {\n        alert.error(lessonError);\n        dispatch(clearErrors())\n    }\n    \n    if (success) {\n        alert.success('Đăng tải thành công')\n        dispatch({ type: NEW_LESSON_RESET })\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors())\n    }\n\n    if (isDeleted) {\n        alert.success('Xóa thành công');\n        dispatch({ type: DELETE_LESSON_RESET })\n    }\n\n}, [dispatch, alert, error,lessonError,success,deleteError, isDeleted, match.params.id])\n\n  const deleteLessonHandler = (id) => {\n    dispatch(deleteLesson(id))\n  }\n  return (\n    <>\n      <MetaData title={'Những bài học mới'} />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <div\n                className=\"card\"\n                style={{\n                  height: \"auto\",\n                  width: \"auto\",\n                  margin: \"40px\",\n                  border: \"1px solid black\",\n                  padding:\"10px\"\n                }}\n              >\n                <div className=\"card-body\">\n                  <UploadForm topics={topics} courseId={match.params.id} newLesson={newLesson}/>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-7\">\n              <div\n                className=\"card\"\n                style={{\n                  height: \"auto\",\n                  width: \"auto\",\n                  margin: \"40px\",\n                  border: \"1px solid black\",\n                }}\n              >\n                {loading ? <Loader /> :\n                <div className=\"card-body\">\n                  <UploadsList  medias={lessons} deleteLessonHandler={deleteLessonHandler} />\n                </div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n};\n\nexport default NewLesson;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/UpdateCourse.js",["487","488"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../../../components/layout/MetaData'\nimport Sidebar from '../Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateCourse, getCourseDetails, clearErrors } from '../../../actions/courseActions'\nimport { UPDATE_COURSE_RESET } from '../../../constants/courseConstants'\nimport moment from 'moment'\nimport { getCategories } from '../../../actions/categoryAction'\nconst UpdateCourse = ({ match, history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [images, setImages] = useState([]);\n    const [startDate,setStartDate] = useState('');\n    const [endDate,setEndDate] = useState('');\n\n    const [oldImages, setOldImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { categories } = useSelector(state => state.categories);\n    const { error, course } = useSelector(state => state.courseDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.course);\n\n    const courseId = match.params.id;\n\n    console.log(course);\n    useEffect(() => {\n        dispatch(getCategories());\n        dispatch(getCourseDetails(match.params.id));\n        \n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            history.push('/me/courses');\n            alert.success('Cập nhật khóa học thành công');\n            dispatch({ type: UPDATE_COURSE_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError,match])\n\n\n    const onChangeStartDate = e => {\n        const newDate = moment(new Date(e.target.value)).format('YYYY-MM-DD');\n        setStartDate(newDate);\n        \n      };\n\n      \n    const onChangeEndDate = e => {\n        const newDate = moment(new Date(e.target.value)).format('YYYY-MM-DD');\n        setEndDate(newDate);\n        \n      };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('name', name? name: course.details.name);\n        formData.append('price',  price ? price: course.details.price);\n        formData.append('description', description ? description : course.details.description);\n        formData.append('category', category ? category : course.details.category);\n\n        formData.append('startDate',startDate ? startDate : course.details.startDate);\n        formData.append('endDate',endDate ? endDate : course.details.endDate);\n\n        \n\n        if(images.length > 0){\n            for (let key in images) {\n                formData.append(\"images\", images[key]);\n            }\n            \n        }\n\n        // const data = {\n        //     name: name? name: course.details.name,\n        //     price: price ? price: course.details.price,\n        //     description:  description ? description : course.details.description,\n        //     category: category ? category : course.details.category,\n        //     images:images.length > 0 ? images : course.details.images,\n        //     startDate: startDate ? startDate : course.details.startDate,\n        //     endDate: endDate ? endDate : course.details.endDate\n        // }\n        \n        dispatch(updateCourse(course.details._id, formData))\n    }\n\n    //console.log(new Date(course.details.startDate).toJSON().slice(0,10).split('-').reverse().join('/'));\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n        \n        setImagesPreview([]);\n        setImages([])\n        setOldImages([])\n        \n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview([reader.result])\n                    setImages(e.target.files)\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Course'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        {course && course.details &&\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">Cập nhật khóa học</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Tên</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={course.details.name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Giá</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={course.details.price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Mô tả</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Danh mục</label>\n                                    <select className=\"form-control\" id=\"category_field\" defaultValue={course.details.category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories && categories.map(category => (\n                                            <option key={category._id} value={category.name} >{category.name}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n\n                                <div className='form-group'>\n                                    <label htmlFor='startDate_field'>Ngày bắt đầu</label>\n                                    <input\n                                        type='date'\n                                        id='startDate_field'\n                                        className='form-control'\n                                        defaultValue={course.details.startDate ? new Date(course.details.startDate).toISOString().substr(0, 10) :\"\"}\n                                        onChange={onChangeStartDate}\n                                    />\n                                </div>\n                                <div className='form-group'>\n                                    <label htmlFor='startDate_field'>Ngày kết thúc</label>\n                                    <input\n                                        type='date'\n                                        id='endDate_field'\n                                        className='form-control'\n                                        defaultValue={course.details.endDate ? new Date(course.details.endDate).toISOString().substr(0, 10) : \"\"}\n                                        onChange={onChangeEndDate}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Ảnh</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            accept='.png ,.jpg ,.jpeg'\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Chọn ảnh\n                                 </label>\n                                    </div>\n\n                                    {course.details.images && course.details.images.map(img => (\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    CẬP NHẬT\n                            </button>\n\n                            </form>\n                        </div>\n                        }\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateCourse\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Category/CategoryList.js",["489"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table, Input } from 'antd';\n\nimport MetaData from '../../../components/layout/MetaData'\nimport Loader from '../../../components/layout/Loader'\nimport Sidebar from '../Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { clearErrors, deleteCategory, getCategories } from '../../../actions/categoryAction'\nimport { DELETE_CATEGORY_RESET, UPDATE_CATEGORY_RESET } from '../../../constants/categoryConstant'\n\n\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n    },\n    {\n        title: 'Tên',\n        dataIndex: 'name',\n    },\n    {\n        title: 'Thao tác',\n        dataIndex: 'actions',\n    },\n]\n\nconst { Search } = Input;\n\nconst CategoryList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { user } = useSelector(state => state.auth)\n    const { loading, error, categories } = useSelector(state => state.categories);\n    const { error: deleteError, isDeleted, isUpdated } = useSelector(state => state.category)\n\n    const [search, setSearch] = useState('');\n    const onSearch = (value) => setSearch(value);\n\n    const deleteCategoryHandler = (id) => {\n        dispatch(deleteCategory(id))\n    }\n\n    useEffect(() => {\n        if(user.role === 'admin')\n            dispatch(getCategories());\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Xóa thể loại thành công');\n            history.push('/admin/categories');\n            dispatch({ type: DELETE_CATEGORY_RESET })\n        }\n\n        if (isUpdated) {\n            alert.success('Phê duyệt thành công');\n            dispatch({ type: UPDATE_CATEGORY_RESET })\n        }\n\n    }, [dispatch, alert, error, deleteError, isDeleted, isUpdated, history])\n\n    const data = [];\n\n    !!categories && categories.filter((item) => {\n        return search === ''\n          ? item\n          : (item.name.toLowerCase().includes(search.toLowerCase()));\n      }).forEach(category => {\n        data.push({\n            id: category._id,\n            name: category.name,\n            actions: <Fragment>\n                <Link to={`/admin/banner/update/${category._id}`} className=\"btn btn-success py-1 px-2\">\n                    <i className=\"fa fa-pencil\"></i>\n                </Link>\n                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteCategoryHandler(category._id)}>\n                    <i className=\"fa fa-trash\"></i>\n                </button>\n            </Fragment>\n        })\n    })\n \n\n    return (\n        <Fragment>\n            <MetaData title={'Tất cả các thể loại'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">Tất cả các thể loại</h1>\n                        <div className='float-right m-2'>\n                            <Search\n                                placeholder=\"Nhập vào từ khóa tìm kiếm tên\"\n                                allowClear\n                                enterButton=\"Tìm kiếm\"\n                                size=\"large\"\n                                onSearch={onSearch}\n                                style={{\n                                    width: 500,\n                                }}\n                            />\n                        </div>\n                        {loading ? <Loader /> : (\n                            <Table columns={columns} dataSource={data} \n                                   pagination={{ defaultPageSize: 4 }}\n\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default CategoryList\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Category/UpdateCategory.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Category/NewCategory.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Document/NewDocument.js",["490"],"import React, { useState, useEffect } from \"react\";\nimport Loader from '../../../../components/layout/Loader'\nimport MetaData from \"../../../../components/layout/MetaData\";\nimport Sidebar from '../../Sidebar'\nimport { useAlert } from 'react-alert'\nimport {  newDocument, clearErrors, getCourseDocuments, deleteDocument, getCourseTopics } from '../../../../actions/courseActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NEW_DOCUMENT_RESET,DELETE_DOCUMENT_RESET } from '../../../../constants/courseConstants'\nimport DocumentForm from \"./DocumentForm\";\nimport DocumentList from \"./DocumentList\";\n\nconst NewDocument = ({match}) => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { loading, documents,error } = useSelector(state => state.docs)\n  const { error: docError, success } = useSelector(state => state.newDoc)\n  const { error: deleteError, isDeleted } = useSelector(state => state.doc)\n  const {  topics } = useSelector(state => state.courseTopics)\n  useEffect(() => {\n    dispatch(getCourseDocuments(match.params.id))\n\n    dispatch(getCourseTopics(match.params.id))\n    \n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n    if (docError) {\n        alert.error(docError);\n        dispatch(clearErrors())\n    }\n    \n    if (success) {\n        alert.success('Đăng tải thành công')\n        dispatch({ type: NEW_DOCUMENT_RESET })\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors())\n    }\n\n    if (isDeleted) {\n        alert.success('Xóa thành công');\n        dispatch({ type: DELETE_DOCUMENT_RESET })\n    }\n\n}, [dispatch, alert, error,docError,success,deleteError, isDeleted, match.params.id])\n\n\n  const deleteDocumentHandler = (id) => {\n    dispatch(deleteDocument(id))\n  }\n  return (\n    <>\n      <MetaData title={'Những tài liệu mới'} />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <div\n                className=\"card\"\n                style={{\n                  height: \"auto\",\n                  width: \"auto\",\n                  margin: \"40px\",\n                  border: \"1px solid black\",\n                  padding:\"10px\"\n                }}\n              >\n                <div className=\"card-body\">\n                  <DocumentForm topics={topics} courseId={match.params.id} newDocument={newDocument}/>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-7\">\n              <div\n                className=\"card\"\n                style={{\n                  height: \"auto\",\n                  width: \"auto\",\n                  margin: \"40px\",\n                  border: \"1px solid black\",\n                }}\n              >\n                {loading ? <Loader /> :\n                <div className=\"card-body\">\n                  <DocumentList  documents={documents} deleteDocumentHandler={deleteDocumentHandler} />\n                </div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n};\n\nexport default NewDocument;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Quiz/NewQuiz.js",["491","492"],"import React, { useState, useEffect } from \"react\";\n\nimport Loader from '../../../../components/layout/Loader'\nimport MetaData from \"../../../../components/layout/MetaData\";\nimport Sidebar from '../../Sidebar'\nimport { useAlert } from 'react-alert'\nimport {   clearErrors, deleteQuiz, getTopicQuizs, newQuiz } from '../../../../actions/courseActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NEW_QUIZ_RESET,DELETE_QUIZ_RESET, UPDATE_QUIZ_RESET } from '../../../../constants/courseConstants'\nimport QuizForm from \"./QuizForm\";\nimport QuizList from \"./QuizList\";\n\nconst NewQuiz = ({match}) => {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { loading, quizs,error } = useSelector(state => state.topicQuizs)\n  const { error: quizError, success } = useSelector(state => state.newQuiz)\n  const { error: crudError, isDeleted, isUpdated } = useSelector(state => state.quiz)\n  console.log(quizs)\n  useEffect(() => {\n    dispatch(getTopicQuizs(match.params.id))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n    if (quizError) {\n        alert.error(quizError);\n        dispatch(clearErrors())\n    }\n    \n    if (success) {\n        alert.success('Thành công')\n        dispatch({ type: NEW_QUIZ_RESET })\n    }\n\n    if (crudError) {\n      alert.error(crudError);\n      dispatch(clearErrors())\n    }\n\n    if (isDeleted) {\n        alert.success('Xóa thành công');\n        dispatch({ type: DELETE_QUIZ_RESET })\n    }\n    if (isUpdated) {\n      alert.success('Cập nhật thành công');\n      dispatch({ type: UPDATE_QUIZ_RESET })\n  }\n\n}, [dispatch, alert, error,quizError,success,crudError, isDeleted,isUpdated, match.params.id])\n\n  const deleteQuizHandler = (id) => {\n    dispatch(deleteQuiz(id))\n  }\n  return (\n    <>\n      <MetaData title={'Những bài học mới'} />\n      <div className=\"row\">\n        <div className=\"col-12 col-md-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"col-12 col-md-10\">\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <div\n                className=\"card\"\n                style={{\n                  height: \"auto\",\n                  width: \"auto\",\n                  margin: \"40px\",\n                  border: \"1px solid black\",\n                  padding:\"10px\"\n                }}\n              >\n                <div className=\"card-body\">\n                  <QuizForm topicId={match.params.id}/>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-7\">\n              <div\n                className=\"card\"\n                style={{\n                  height: \"auto\",\n                  width: \"auto\",\n                  margin: \"40px\",\n                  border: \"1px solid black\",\n                  padding:\"10px\"\n                }}\n              >\n                {loading ? <Loader /> :\n                <div className=\"card-body\">\n                  <QuizList  quizs={quizs} deleteQuizHandler={deleteQuizHandler} />\n                </div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n};\n\nexport default NewQuiz;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Banner/BannerList.js",["493","494","495","496"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table,Button } from 'antd';\n\nimport MetaData from '../../../components/layout/MetaData'\nimport Loader from '../../../components/layout/Loader'\nimport Sidebar from '../Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { DELETE_BANNER_RESET, UPDATE_BANNER_RESET } from '../../../constants/bannerConstant'\nimport { clearErrors, deletebanner, getBanners } from '../../../actions/bannerAction'\n\n\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n    },\n    {\n        title: 'Ảnh',\n        dataIndex: 'image',\n       \n    },\n    {\n        title: 'Thao tác',\n        dataIndex: 'actions',\n    },\n]\n\nconst BannerList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { user } = useSelector(state => state.auth)\n    const { loading, error, banners } = useSelector(state => state.banners);\n    const { error: deleteError, isDeleted, isUpdated } = useSelector(state => state.banner)\n\n    const deleteBannerHandler = (id) => {\n        dispatch(deletebanner(id))\n    }\n\n    useEffect(() => {\n        if(user.role === 'admin')\n            dispatch(getBanners());\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Xóa banner thành công');\n            history.push('/admin/banners');\n            dispatch({ type: DELETE_BANNER_RESET })\n        }\n\n        if (isUpdated) {\n            alert.success('Phê duyệt thành công');\n            dispatch({ type: UPDATE_BANNER_RESET })\n        }\n\n    }, [dispatch, alert, error, deleteError, isDeleted, isUpdated, history])\n\n    const data = [];\n\n    !!banners && banners.forEach(banner => {\n        data.push({\n            id: banner._id,\n            image: <img className=\"mt-3 mr-2\" width=\"400\" src={banner.images[0].url}/>,\n            actions: <Fragment>\n                <Link to={`/admin/banner/update/${banner._id}`} className=\"btn btn-success py-1 px-2\">\n                    <i className=\"fa fa-pencil\"></i>\n                </Link>\n                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteBannerHandler(banner._id)}>\n                    <i className=\"fa fa-trash\"></i>\n                </button>\n            </Fragment>\n        })\n    })\n\n    return (\n        <Fragment>\n            <MetaData title={'Tất cả các thể loại'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">Tất cả các thể loại</h1>\n\n                        {loading ? <Loader /> : (\n                            <Table columns={columns} dataSource={data} \n                                pagination={{ defaultPageSize: 4 }}\n\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default BannerList\n","/home/truong/GR_Project_K63/frontend/src/pages/Chat/Chatpage.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Banner/NewBanner.js",["497"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../../../components/layout/MetaData'\nimport Sidebar from '../Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { clearErrors, getBanners, newBanner } from '../../../actions/bannerAction'\nimport { NEW_BANNER_RESET } from '../../../constants/bannerConstant'\n\n\nconst NewBanner = ({ history }) => {\n\n   \n    const [images, setImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state.newBanner);\n\n    useEffect(() => {\n        dispatch(getBanners());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/banners');\n            alert.success('Tạo banner thành công');\n            dispatch({ type: NEW_BANNER_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n\n        for (let key in images) {\n            formData.append(\"images\", images[key]);\n        }\n\n        const data = {images}\n        \n\n        dispatch(newBanner(formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])  \n                    setImages(e.target.files)\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Banner mới'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">Banner mới</h1>\n\n                                <div className='form-group'>\n                                    <label>Ảnh Banner</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            //multiple\n                                            accept=\".png, .jpeg, .jpg\"\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Chọn ảnh\n                                     </label>\n                                    </div>\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"600\" />\n                                    ))}\n\n                                </div>\n\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    TẠO MỚI\n                                </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewBanner\n","/home/truong/GR_Project_K63/frontend/src/pages/Search/Search.js",["498","499","500","501"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Pagination from 'react-js-pagination'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nimport MetaData from '../../components/layout/MetaData'\n\nimport Loader from '../../components/layout/Loader'\nimport { Radio, Space,InputNumber, Button } from 'antd';\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert';\nimport { getCourses } from '../../actions/courseActions'\nimport { getCategories } from '../../actions/categoryAction';\nimport { useLocation } from 'react-router-dom';\n\n\n\nimport './Search.css'\nimport SearchCourse from '../../components/course/SearchCourse';\n\nconst useQuery = () => {\n    const { search } = useLocation();\n  \n    return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst Search = ({history}) => {\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([0, 1000000])\n    const [minPrice,setMinPrice] = useState(0);\n    const [maxPrice,setMaxPrice] = useState(1000000);\n    const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n\n\n\n    const { categories } = useSelector(state => state.categories);\n\n    let query = useQuery();\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, courses, error, coursesCount, resPerPage, filteredCoursesCount } = useSelector(state => state.courses)\n\n    \n    const keyword = query.get(\"keyword\") || \"\"\n    const categoryQuery = query.get(\"category\") || \"\"\n    const ratingQuery = query.get(\"rating\") || 0\n    const minPriceQuery = query.get(\"price[gte]\") || \"\"\n    const maxPriceQuery = query.get(\"price[lte]\") || \"\"\n    const priceQuery = [minPriceQuery,maxPriceQuery].includes(\"\") ? [0,1000000] : [minPriceQuery,maxPriceQuery]\n    \n\n    useEffect(() => {\n        \n        dispatch(getCategories());\n        \n        if (error) {\n            return alert.error(error)\n        }\n\n      \n        dispatch(getCourses(keyword, currentPage, priceQuery, categoryQuery, ratingQuery));\n        \n        if(categoryQuery){\n            setCategory(categoryQuery)\n        }\n       \n\n\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating,categoryQuery,ratingQuery,minPriceQuery,maxPriceQuery])\n\n    \n\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    const onChangeCategory = (e) => {\n        setCategory(e.target.value)\n        history.push(`/search?keyword=${keyword}&&category=${e.target.value}&&rating=${rating}&&price[lte]=${price[1]}&&price[gte]=${price[0]}`)\n    };\n  \n    const onChangeStar = (e) =>{\n        setRating(e.target.value)\n        history.push(`/search?keyword=${keyword}&&category=${category}&&rating=${e.target.value}&&price[lte]=${price[1]}&&price[gte]=${price[0]}`)\n    }\n\n    const handlePrice = () =>{\n        if(minPrice <= maxPrice){\n            setPrice([minPrice,maxPrice])\n            history.push(`/search?keyword=${keyword}&&category=${category}&&rating=${rating}&&price[lte]=${maxPrice}&&price[gte]=${minPrice}`)\n        }\n            \n    }\n\n\n\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Onraincoosu - Hãy tận hưởng những khóa bổ ích'} />\n                    \n                    <section id=\"courses\" className=\"container mt-5\">\n                        {keyword && <h2 className='mb-2'>Kết quả tìm kiếm cho từ khóa: {keyword}</h2>}\n                        {categoryQuery && <h2 className='mb-2'>Kết quả tìm kiếm cho thể loại: {categoryQuery}</h2>}\n                        <div className=\"row\">\n                            \n                                <Fragment>\n                                    <div className=\"col-6 col-md-4 mt-5 mb-5\">\n                                        <div className=\"px-5\">\n                                            <h4 className=\"mb-3\">\n                                                Giá tiền\n                                            </h4>\n                                            <Space>\n                                                <InputNumber onChange={val => setMinPrice(val)}  defaultValue={minPrice} />-\n                                                <InputNumber onChange={val => setMaxPrice(val)}  defaultValue={maxPrice} />\n                                                <button className='btn btn-success' onClick={handlePrice} >Lọc</button>\n                                            </Space>\n                                            \n\n                                            <hr className=\"my-5\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Danh mục\n                                                </h4>\n\n                                                <div>\n                                                <Radio.Group onChange={onChangeCategory} value={category}>\n                                                    <Space direction=\"vertical\">\n                                                        <Radio value={\"\"}>Tất cả</Radio>\n                                                        {categories && categories.map(cate => \n                                                            <Radio key={cate._id} value={cate.name}>{cate.name}</Radio>\n                                                        )}\n                                                    </Space>\n\n                                                </Radio.Group>\n                                                </div>\n                                            </div>\n\n                                            <hr className=\"my-3\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Đánh giá\n                                                </h4>\n\n                                                <Radio.Group onChange={onChangeStar} value={rating} >\n                                                    <Space direction=\"vertical\">\n                                                        {[5, 4, 3, 2, 1,0].map(star => \n                                                            <Radio key={star} value={star}>\n                                                                <div className=\"rating-outer\">\n                                                                    <div className=\"rating-inner\"\n                                                                        style={{\n                                                                            width: `${star * 20}%`\n                                                                        }}\n                                                                    >\n                                                                    </div>\n                                                                </div>\n                                                            {' '}<span style={{fontSize:'14px'}}>từ {star} trở lên</span>\n                                                            </Radio>\n                                                        )}\n                                                    </Space>\n\n                                                </Radio.Group>\n\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-6 col-md-8\">\n                                        <div className=\"row\">\n                                            {courses.sort(function(a,b){\n                                                return new Date(b.createdAt) - new Date(a.createdAt);\n                                            }).\n                                            map(course => (\n                                                <SearchCourse key={course._id} course={course} col={4} />\n                                            ))}\n                                        </div>\n                                    </div>\n                                </Fragment>\n\n                        </div>\n                    </section>\n\n                    {resPerPage < filteredCoursesCount && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={coursesCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Tiếp'}\n                                prevPageText={'Trước'}\n                                firstPageText={'Đầu tiên'}\n                                lastPageText={'Cuối cùng'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n                    \n\n                </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default Search\n","/home/truong/GR_Project_K63/frontend/src/pages/About/About.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Banner/UpdateBanner.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/ChatBot/ChatBot.js",[],"/home/truong/GR_Project_K63/frontend/src/components/layout/Footer.js",["502","503","504","505"],"import React, { Fragment, useEffect } from 'react'\nimport './index.css'\nimport { getCategories } from '../../actions/categoryAction'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nconst Footer = () => {\n    const dispatch = useDispatch();\n\n    const { categories } = useSelector(state => state.categories);\n    const { user, loading } = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch(getCategories())\n    },[dispatch])\n\n    return (\n        <Fragment>\n\n            <div className=\"footer-bottom-area bg-dark-light section-padding-sm\" style={{position:'relative', marginTop:'40px'}}>\n                <div className=\"container py-3\">\n                    <div className=\"row widgets footer-widgets\">\n\n                        <div className=\"col-lg-3 col-md-6 col-12 my-1\">\n                            <div className=\"single-widget widget-about\">\n                                <h5 className=\"widget-title\">Onraincoosu</h5>\n                                <img style={{width: '60px', marginBottom:'20px'}} src=\"/images/logo.png\" alt=\"Logo trang web\"/>\n                                <p>Bạn sẽ có một trải nghiệm học tập vô cùng tuyệt vời và <Link to=\"/about\">Đọc thêm...</Link></p>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-6 col-12 my-1\">\n                            <div className=\"single-widget widget-quick-links\">\n                                <h5 className=\"widget-title\">Tài khoản của tôi</h5>\n                                <ul>\n                                {user && user.role === 'admin' && (\n                                    <li><Link to=\"/me/courses\">Dashboard</Link></li>\n                                )}\n                                {user && user.role === 'user' && (\n                                    <li><Link to=\"/me/courses\">Khóa học của tôi</Link></li>\n                                )}\n                                <li><Link to=\"/registerCourse\" >Khóa học đã đăng ký</Link></li>\n                                <li><Link to=\"/me\">Thông tin cá nhân</Link></li>\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-6 col-12 my-1\">\n                            <div className=\"single-widget widget-quick-links\">\n                                <h5 className=\"widget-title\">Danh mục các khóa học</h5>\n                                <ul>\n                                    {categories && categories.map((category) => (\n                                        <li><Link key={category._id}  to={`/search?keyword=&&category=${category.name}`} >{category.name}</Link></li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-6 col-12 my-1\">\n                            <div className=\"single-widget widget-contact\">\n                                <h5 className=\"widget-title\">Liên hệ với chúng tôi</h5>\n                                <ul>\n                                    <li className=\"address\">\n                                        <span className=\"icon\"><i className=\"fa fa-map-marker\"></i></span>\n                                        <p>Địa chỉ : 232 phố Kẻ Vẽ, phường Thụy Phương, quận Bắc Từ Liêm, Hà Nội.</p>\n                                    </li>\n                                    <li className=\"phone\">\n                                        <span className=\"icon\"><i className=\"fa fa-phone\"></i></span>\n                                        <p><a href=\"#\">+840123456789</a></p>\n                                    </li>\n                                    <li className=\"fax\">\n                                        <span className=\"icon\"><i className=\"fa fa-fax\"></i></span>\n                                        <p><a href=\"#\">+840123456789</a></p>\n                                    </li>\n                                    <li className=\"email\">\n                                        <span className=\"icon\"><i className=\"fa fa-envelope-o\"></i></span>\n                                        <p><a href=\"#\">onraincoosu@gmail.com</a></p>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n\n}\nexport default Footer\n","/home/truong/GR_Project_K63/frontend/src/components/route/ProtectedRoute.js",[],"/home/truong/GR_Project_K63/frontend/src/components/cart/Shipping.js",[],"/home/truong/GR_Project_K63/frontend/src/components/layout/Header.js",["506","507","508","509","510"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Route, Link, useHistory, useLocation } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\nimport { getMeNotifies, deleteAllNotifies } from '../../actions/notifyAction'\nimport Search from './Search'\nimport NotifyMe from './NotifyMe/NotifyMe'\nimport { DELETE_ALL_NOTIFIES_RESET } from '../../constants/notifyContants'\nimport '../../App.css'\nimport { getCategories } from '../../actions/categoryAction'\nimport './index.css'\nimport { MessageFilled  } from '@ant-design/icons';\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { Button } from 'antd'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { categories } = useSelector(state => state.categories);\n    const { notifies, error, isDeleted } = useSelector(state => state.notifies)\n    const {\n        notify,\n        setNotify,\n        setSelectedChat\n    } = ChatState();\n    \n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Đăng xuất thành công.')\n    }\n\n    const deleteNotifiesHandler = () =>{\n        dispatch(deleteAllNotifies(user._id))\n    }\n\n    useEffect(() => {\n        dispatch(getCategories());\n\n        if (error) {\n            return alert.error(error)\n        }\n        if(user)\n            dispatch(getMeNotifies(user._id))\n            \n        if (isDeleted) {\n                \n            dispatch({ type: DELETE_ALL_NOTIFIES_RESET })\n        }\n\n    }, [dispatch, alert, error,user,isDeleted,notify,window.location.pathname])\n\n    return (\n        \n        <Fragment>\n        <div className=\"icon-bar\">\n          <Link className=\"\" to='/chatbot'>\n            <div style={{fontSize:'14px'}}>Chat Bot</div>\n            <i class=\"fa fa-android\" aria-hidden=\"true\"></i>\n          </Link> \n        </div>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\" style={{color: 'white'}}>\n                        <Link to=\"/\">\n                            <img style={{width: '60px'}} src=\"/images/logo.png\" />\n                            {location.pathname === '/' && 'Onraincoosu'}\n                            \n                            \n                        </Link>\n                        {location.pathname !== '/' && <Button onClick={history.goBack} style={{color:'white'}} type=\"text\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i><span className='ml-1'>QUAY LẠI</span></Button>}\n                    </div>\n                    <div className=\"ml-1 dropdown d-inline dropdown-hover\">\n                        <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    <span>Thể loại</span>\n                        </Link>\n\n                        <div className=\"dropdown-menu dropdown-hover\" aria-labelledby=\"dropDownMenuButton\">\n                            {categories && categories.map((category) => (\n                                <Link key={category._id} className=\"dropdown-item\" to={`/search?keyword=&&category=${category.name}`} >{category.name}</Link>\n                            ))}\n                                    \n\n                        </div>\n\n\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center d-flex\">\n                    {/* <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link> */}\n                    \n\n                    {user ? (\n                        <>\n                            <span className='ml-3'>\n                                <NotifyMe\n                                    data={notifies.sort(function(a,b){\n                                        return new Date(b.createdAt) - new Date(a.createdAt);\n                                    })}\n                                    storageKey=\"notific_key\"\n                                    notific_key=\"createdAt\"\n                                    notific_value=\"content\"\n                                    heading=\"Thông báo\"\n                                    sortedByKey={false}\n                                    showDate={true}\n                                    size={24}\n                                    color=\"white\"\n                                    deleteNotifiesHandler={deleteNotifiesHandler}\n                                />\n                            </span>\n                            <Link to='/chats' className='ml-3 d-flex align-items-center' style={{fontSize:'40px'}}>\n\n                                <MessageFilled style={{color:'rgb(148, 224, 162)'}} />\n                                <NotificationBadge\n                                    count={notify.length}\n                                    effect={Effect.SCALE}\n                                />\n                            </Link>\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={user.avatar && user.avatar.url}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span>{user && user.name}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/me/courses\">Dashboard</Link>\n                                )}\n                                {user && user.role === 'user' && (\n                                    <Link className=\"dropdown-item\" to=\"/me/courses\">Khóa học của tôi</Link>\n                                )}\n                                {/* <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link> */}\n                                <Link className=\"dropdown-item\" to=\"/registerCourse\" >Khóa học đã đăng ký</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Thông tin cá nhân</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Đăng xuất\n                                </Link>\n\n                            </div>\n\n\n                        </div>\n\n                        </>\n                        \n                        \n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Đăng nhập</Link>}\n\n\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header\n","/home/truong/GR_Project_K63/frontend/src/components/cart/ConfirmOrder.js",[],"/home/truong/GR_Project_K63/frontend/src/components/cart/Payment.js",[],"/home/truong/GR_Project_K63/frontend/src/components/cart/OrderSuccess.js",[],"/home/truong/GR_Project_K63/frontend/src/components/layout/MetaData.js",[],"/home/truong/GR_Project_K63/frontend/src/actions/registerCourseAction.js",["511","512","513"],"import {\n    ALL_REGISTER_COURSES_REQUEST,\n    ALL_REGISTER_COURSES_FAIL,\n    ALL_REGISTER_COURSES_SUCCESS,\n    NEW_REGISTER_COURSE_FAIL,\n    NEW_REGISTER_COURSE_REQUEST,\n    NEW_REGISTER_COURSE_RESET,\n    NEW_REGISTER_COURSE_SUCCESS,\n    DELETE_REGISTER_COURSE_FAIL,\n    DELETE_REGISTER_COURSE_REQUEST,\n    DELETE_REGISTER_COURSE_RESET,\n    DELETE_REGISTER_COURSE_SUCCESS,\n    CLEAR_ERRORS,\n    UPDATE_REGISTER_COURSE_REQUEST,\n    UPDATE_REGISTER_COURSE_SUCCESS,\n    UPDATE_REGISTER_COURSE_FAIL\n} from '../constants/registerCourseContants'\n\nimport axios from 'axios'\n\nexport const getMeRegisterCourses = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_REGISTER_COURSES_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/getRegisterCourses`)\n\n       \n        dispatch({\n            type: ALL_REGISTER_COURSES_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        console.log(error);\n        dispatch({\n            type: ALL_REGISTER_COURSES_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newRegisterCourse = (courseId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REGISTER_COURSE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        \n\n        const { data } = await axios.post(`/api/v1/registerCourse/${courseId}`,{}, config)\n\n        dispatch({\n            type: NEW_REGISTER_COURSE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REGISTER_COURSE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const comleteVideo = (videoData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REGISTER_COURSE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        \n\n        const { data } = await axios.post(`/api/v1/completeVideo`,videoData, config)\n\n        dispatch({\n            type: NEW_REGISTER_COURSE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REGISTER_COURSE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const completedVideo = (videoData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_REGISTER_COURSE_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/completedVideo`,videoData,config)\n\n        dispatch({\n            type: UPDATE_REGISTER_COURSE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n\n        dispatch({\n            type: UPDATE_REGISTER_COURSE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const deleteRegisterCourse = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REGISTER_COURSE_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/cancelRegister/${id}`)\n\n        dispatch({\n            type: DELETE_REGISTER_COURSE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n\n        dispatch({\n            type: DELETE_REGISTER_COURSE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}","/home/truong/GR_Project_K63/frontend/src/actions/cartActions.js",[],"/home/truong/GR_Project_K63/frontend/src/components/layout/Loader.js",[],"/home/truong/GR_Project_K63/frontend/src/actions/bannerAction.js",[],"/home/truong/GR_Project_K63/frontend/src/actions/courseActions.js",["514","515","516","517","518","519","520","521","522"],"import axios from 'axios';\n\nimport {\n    ALL_COURSES_REQUEST,\n    ALL_COURSES_SUCCESS,\n    ALL_COURSES_FAIL,\n    ADMIN_COURSES_REQUEST,\n    ADMIN_COURSES_SUCCESS,\n    ADMIN_COURSES_FAIL,\n    NEW_COURSE_REQUEST,\n    NEW_COURSE_SUCCESS,\n    NEW_COURSE_FAIL,\n    DELETE_COURSE_REQUEST,\n    DELETE_COURSE_SUCCESS,\n    DELETE_COURSE_FAIL,\n    UPDATE_COURSE_REQUEST,\n    UPDATE_COURSE_SUCCESS,\n    UPDATE_COURSE_FAIL,\n    COURSE_DETAILS_REQUEST,\n    COURSE_DETAILS_SUCCESS,\n    COURSE_DETAILS_FAIL,\n    NEW_LESSON_REQUEST,\n    NEW_LESSON_SUCCESS,\n    NEW_LESSON_FAIL,\n    GET_LESSONS_REQUEST,\n    GET_LESSONS_SUCCESS,\n    GET_LESSONS_FAIL,\n    GET_LESSON_REQUEST,\n    GET_LESSON_SUCCESS,\n    GET_LESSON_FAIL,\n    DELETE_LESSON_REQUEST,\n    DELETE_LESSON_SUCCESS,\n    DELETE_LESSON_RESET,\n    DELETE_LESSON_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    NEW_TOPIC_REQUEST,\n    NEW_TOPIC_SUCCESS,\n    NEW_TOPIC_RESET,\n    NEW_TOPIC_FAIL,\n    GET_TOPICS_REQUEST,\n    GET_TOPICS_SUCCESS,\n    GET_TOPICS_FAIL,\n\n    DELETE_TOPIC_REQUEST,\n    DELETE_TOPIC_SUCCESS,\n    DELETE_TOPIC_RESET,\n    DELETE_TOPIC_FAIL,\n    UPDATE_TOPIC_REQUEST,\n    UPDATE_TOPIC_SUCCESS,\n    UPDATE_TOPIC_RESET,\n    UPDATE_TOPIC_FAIL,\n\n    NEW_QUIZ_REQUEST,\n    NEW_QUIZ_SUCCESS,\n    NEW_QUIZ_RESET,\n    NEW_QUIZ_FAIL,\n    GET_QUIZS_REQUEST,\n    GET_QUIZS_SUCCESS,\n    GET_QUIZS_FAIL,\n    DELETE_QUIZ_REQUEST,\n    DELETE_QUIZ_SUCCESS,\n    DELETE_QUIZ_RESET,\n    DELETE_QUIZ_FAIL,\n    UPDATE_QUIZ_REQUEST,\n    UPDATE_QUIZ_SUCCESS,\n    UPDATE_QUIZ_RESET,\n    UPDATE_QUIZ_FAIL,\n\n    NEW_DOCUMENT_REQUEST,\n    NEW_DOCUMENT_SUCCESS,\n    NEW_DOCUMENT_FAIL,\n    GET_DOCUMENTS_REQUEST,\n    GET_DOCUMENTS_SUCCESS,\n    GET_DOCUMENTS_FAIL,\n    GET_DOCUMENT_REQUEST,\n    GET_DOCUMENT_SUCCESS,\n    GET_DOCUMENT_FAIL,\n    DELETE_DOCUMENT_REQUEST,\n    DELETE_DOCUMENT_SUCCESS,\n    DELETE_DOCUMENT_RESET,\n    DELETE_DOCUMENT_FAIL,\n    CLEAR_ERRORS,\n    REGULAR_COURSES_REQUEST,\n    REGULAR_COURSES_SUCCESS,\n    REGULAR_COURSES_FAIL\n\n} from '../constants/courseConstants'\n\nexport const getCourses = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_COURSES_REQUEST })\n\n        let link = `/api/v1/courses?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `/api/v1/courses?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        console.log(data);\n\n        dispatch({\n            type: ALL_COURSES_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_COURSES_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newCourse = (courseData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_COURSE_REQUEST })\n\n        const config = {\n            credentials: 'include',\n            headers: {'Content-type': 'multipart/form-data; boundary=XXX' },\n            body: '--XXX\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"filename.csv\"\\r\\nContent-Type: text/csv\\r\\n\\r\\nA,B,C\\r\\n1,1.1,name1\\r\\n2,2.2,name2\\r\\n\\r\\n--XXX--'\n        }\n\n        const { data } = await axios.post(`/api/v1/course/new`, courseData, config)\n\n        dispatch({\n            type: NEW_COURSE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_COURSE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete course (Admin)\nexport const deleteCourse = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_COURSE_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/course/${id}`)\n\n        dispatch({\n            type: DELETE_COURSE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_COURSE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Course (ADMIN)\nexport const updateCourse = (id, courseData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_COURSE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/course/${id}`, courseData, config)\n\n        dispatch({\n            type: UPDATE_COURSE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_COURSE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const acceptCourse = (id, courseData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_COURSE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/course/accept/${id}`, courseData, config)\n\n        dispatch({\n            type: UPDATE_COURSE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_COURSE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getCourseDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: COURSE_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/course/${id}`)\n\n        dispatch({\n            type: COURSE_DETAILS_SUCCESS,\n            payload: data.course\n        })\n\n    } catch (error) {\n        dispatch({\n            type: COURSE_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newLesson = (lessonData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_LESSON_REQUEST })\n\n        const config = {\n            credentials: 'include',\n            headers: {'Content-type': 'multipart/form-data; boundary=XXX' },\n            body: '--XXX\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"filename.csv\"\\r\\nContent-Type: text/csv\\r\\n\\r\\nA,B,C\\r\\n1,1.1,name1\\r\\n2,2.2,name2\\r\\n\\r\\n--XXX--'\n        }\n\n       \n\n        const { data } = await axios.post(`/api/v1/media/create`, lessonData, config)\n\n        dispatch({\n            type: NEW_LESSON_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_LESSON_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getCourseLessons = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_LESSONS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/media/all/${id}`)\n\n        dispatch({\n            type: GET_LESSONS_SUCCESS,\n            payload: data.media\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_LESSONS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getCourseLesson = (courseId,index) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_LESSON_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/media/${courseId}/${index}`)\n\n        dispatch({\n            type: GET_LESSON_SUCCESS,\n            payload: data.media\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_LESSON_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const deleteLesson = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_LESSON_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/media/delete/${id}`)\n\n        dispatch({\n            type: DELETE_LESSON_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n\n\n        dispatch({\n            type: DELETE_LESSON_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        \n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminCourses = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_COURSES_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/courses`)\n\n        dispatch({\n            type: ADMIN_COURSES_SUCCESS,\n            payload: data.courses\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_COURSES_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getRegularCourses = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGULAR_COURSES_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/regularCourses`)\n\n        dispatch({\n            type: REGULAR_COURSES_SUCCESS,\n            payload: data.regularCourses\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: REGULAR_COURSES_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getMeCourses = (userId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_COURSES_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/me/courses/${userId}`)\n\n        dispatch({\n            type: ADMIN_COURSES_SUCCESS,\n            payload: data.courses\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_COURSES_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get course reviews\nexport const getCourseReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete course review\nexport const deleteReview = (id, courseId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&courseId=${courseId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n    \n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}\n\n\nexport const newTopic = (topicData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_TOPIC_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n\n\n        const { data } = await axios.post(`/api/v1/topic/new`, topicData, config)\n\n        dispatch({\n            type: NEW_TOPIC_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_TOPIC_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getCourseTopics = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_TOPICS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/topics/${id}`)\n\n        dispatch({\n            type: GET_TOPICS_SUCCESS,\n            payload: data.topics\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_TOPICS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\nexport const deleteTopic = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_TOPIC_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/topic/delete/${id}`)\n\n        dispatch({\n            type: DELETE_TOPIC_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n\n        dispatch({\n            type: DELETE_TOPIC_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const updateTopic = (id, topicData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_TOPIC_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/topic/update/${id}`, topicData, config)\n\n        dispatch({\n            type: UPDATE_TOPIC_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_TOPIC_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\nexport const newQuiz = (quizData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_QUIZ_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n\n        const { data } = await axios.post(`/api/v1/quiz/new`, quizData, config)\n\n        dispatch({\n            type: NEW_QUIZ_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_QUIZ_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getTopicQuizs = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_QUIZS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/quizs/${id}`)\n\n        dispatch({\n            type: GET_QUIZS_SUCCESS,\n            payload: data.quiz\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_QUIZS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\nexport const deleteQuiz = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_QUIZ_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/quiz/delete/${id}`)\n\n        dispatch({\n            type: DELETE_QUIZ_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n\n\n        dispatch({\n            type: DELETE_QUIZ_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const updateQuiz = (id, quizData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_QUIZ_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/quiz/update/${id}`, quizData, config)\n\n        dispatch({\n            type: UPDATE_QUIZ_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_QUIZ_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const newDocument = (docData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_DOCUMENT_REQUEST })\n\n        const config = {\n            credentials: 'include',\n            headers: {'Content-type': 'multipart/form-data; boundary=XXX' },\n            body: '--XXX\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"filename.csv\"\\r\\nContent-Type: text/csv\\r\\n\\r\\nA,B,C\\r\\n1,1.1,name1\\r\\n2,2.2,name2\\r\\n\\r\\n--XXX--'\n        }\n\n       \n\n        const { data } = await axios.post(`/api/v1/document/create`, docData, config)\n\n        dispatch({\n            type: NEW_DOCUMENT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_DOCUMENT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getCourseDocuments = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_DOCUMENTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/document/all/${id}`)\n\n        dispatch({\n            type: GET_DOCUMENTS_SUCCESS,\n            payload: data.documents\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_DOCUMENTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getCourseDocument = (courseId,index) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_DOCUMENT_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/document/${courseId}/${index}`)\n\n        dispatch({\n            type: GET_DOCUMENT_SUCCESS,\n            payload: data.document\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_DOCUMENT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const deleteDocument = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_DOCUMENT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/document/delete/${id}`)\n\n        dispatch({\n            type: DELETE_DOCUMENT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: DELETE_DOCUMENT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n","/home/truong/GR_Project_K63/frontend/src/actions/categoryAction.js",[],"/home/truong/GR_Project_K63/frontend/src/constants/cartConstants.js",[],"/home/truong/GR_Project_K63/frontend/src/constants/userConstants.js",[],"/home/truong/GR_Project_K63/frontend/src/constants/orderConstants.js",[],"/home/truong/GR_Project_K63/frontend/src/constants/notifyContants.js",[],"/home/truong/GR_Project_K63/frontend/src/constants/registerCourseContants.js",[],"/home/truong/GR_Project_K63/frontend/src/constants/courseConstants.js",[],"/home/truong/GR_Project_K63/frontend/src/constants/categoryConstant.js",[],"/home/truong/GR_Project_K63/frontend/src/constants/bannerConstant.js",[],"/home/truong/GR_Project_K63/frontend/src/actions/orderActions.js",[],"/home/truong/GR_Project_K63/frontend/src/components/cart/CheckoutSteps.js",[],"/home/truong/GR_Project_K63/frontend/src/actions/notifyAction.js",["523","524"],"import axios from 'axios';\nimport {\n    GET_NOTIFIES_REQUEST,\n    GET_NOTIFIES_SUCCESS,\n    GET_NOTIFIES_FAIL,\n    DELETE_ALL_NOTIFIES_FAIL,\n    DELETE_ALL_NOTIFIES_REQUEST,\n    DELETE_ALL_NOTIFIES_RESET,\n    DELETE_ALL_NOTIFIES_SUCCESS,\n    CLEAR_ERRORS\n\n} from '../constants/notifyContants'\nexport const getMeNotifies = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_NOTIFIES_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/me/notifies/${id}`)\n\n        dispatch({\n            type: GET_NOTIFIES_SUCCESS,\n            payload: data.notifies\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_NOTIFIES_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const deleteAllNotifies = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_ALL_NOTIFIES_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/me/notifies/delete/${id}`)\n\n        dispatch({\n            type: DELETE_ALL_NOTIFIES_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ALL_NOTIFIES_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Sidebar.js",[],"/home/truong/GR_Project_K63/frontend/src/components/layout/Search.js",[],"/home/truong/GR_Project_K63/frontend/src/components/banner/Banner.js",["525"],"import { useEffect } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBanners } from \"../../actions/bannerAction\";\n\nimport './index.css'\n\nconst Banner = () => {\n    const { banners } = useSelector(state => state.banners)\n    const dispatch = useDispatch();\n    useEffect(() => {\n        \n        dispatch(getBanners());\n\n    }, [dispatch])\n\n  return (\n    <>\n        <div className=\"\">\n            <Carousel >\n                {banners && banners.map(banner => (\n                    <Carousel.Item key={banner._id}>\n                        <img className=\"banner\" src={banner.images[0].url} />\n                    </Carousel.Item>\n                ))}\n            </Carousel>\n        </div>\n\n    </>\n  )\n}\n\nexport default Banner","/home/truong/GR_Project_K63/frontend/src/components/layout/NotifyMe/NotifyMe.js",["526","527","528"],"import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Overlay from \"react-bootstrap/Overlay\";\nimport Popover from \"react-bootstrap/Popover\";\nimport Button from \"react-bootstrap/Button\";\n\nimport moment from \"moment\";\nimport {Link} from \"react-router-dom\"\n\nimport { reactLocalStorage } from \"reactjs-localstorage\";\n\nimport { Bell, BellOff, BookOpen, AlertTriangle } from \"react-feather\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./NotifyMe.css\";\n\nconst NotifyMe = (props) => {\n  moment.locale(navigator.languages[0].toLowerCase());\n\n  // State variabls\n  const [showCount, setShowCount] = useState(false);\n  const [messageCount, setMessageCount] = useState(0);\n  const [show, setShow] = useState(false);\n  const [target, setTarget] = useState(null);\n  const [raedIndex, setReadIndex] = useState(0);\n\n  // Useref for the overlay\n  const ref = useRef(null);\n\n\n  // Props passed to the component\n  const data = props.data;\n  const storageKey = props.storageKey || \"notification_timeline_storage_id\";\n  const key = props.notific_key;\n  const notificationMsg = props.notific_value;\n  const sortedByKey = props.sortedByKey;\n  const heading = props.heading || \"Thông báo\";\n  const bellSize = props.size || 32;\n  const bellColor = props.color || \"#FFFFFF\";\n  const multiLineSplitter = props.multiLineSplitter || \"\\n\";\n  const showDate = props.showDate || false;\n  const deleteNotifiesHandler = props.deleteNotifiesHandler;\n\n  useEffect(() => {\n    if (!sortedByKey) {\n      data.sort((a, b) => b[key] - a[key]);\n    }\n\n    let readItemLs = reactLocalStorage.getObject(storageKey);\n    let readMsgId = Object.keys(readItemLs).length > 0 ? readItemLs[\"id\"] : \"\";\n\n  \n    let readIndex =\n      readMsgId === \"\"\n        ? data.length\n        : data.findIndex((elem) => elem[key] === readMsgId);\n\n    if(readIndex === -1){\n        readIndex = data.length\n    } \n\n    setReadIndex(readIndex);\n\n    (data.length && readIndex) > 0 ? setShowCount(true) : setShowCount(false);\n    setMessageCount(readIndex);\n  }, [data]);\n\n  const handleClick = (event) => {\n    setShow(!show);\n    setTarget(event.target);\n  };\n\n  // Calculate the day diff\n  const getDayDiff = (timestamp) => {\n    let a = moment();\n    let b = moment(timestamp);\n    let diff = a.diff(b, \"year\");\n    if (diff === 0) {\n      diff = a.diff(b, \"month\");\n      if (diff === 0) {\n        diff = a.diff(b, \"days\");\n        if (diff === 0) {\n          diff = a.diff(b, \"hour\");\n          if (diff === 0) {\n            diff = a.diff(b, \"minute\");\n            if (diff === 0) {\n              diff = a.diff(b, \"second\");\n              return `${diff} giây trước`;\n            } else {\n              return `${diff} phút trước`;\n            }\n          } else {\n            return `${diff} giờ trước`;\n          }\n        } else {\n          return `${diff} ngày trước`;\n        }\n      } else {\n        return `${diff} tháng trước`;\n      }\n    } else {\n      return `${diff} năm trước`;\n    }\n  };\n\n  const getWhen = (timestamp) => {\n    let when = `${moment(timestamp).format(\"L\")} ${moment(timestamp).format(\n      \"LTS\"\n    )}`;\n    return when;\n  };\n\n  // Get the notification message\n  const getContent = (message) => {\n    \n    if (message.indexOf(multiLineSplitter) >= 0) {\n      let splitted = message.split(multiLineSplitter);\n      let ret = \"<ul>\";\n\n      for (let i = 0; i <= splitted.length - 1; i++) {\n        if (splitted[i] !== \"\") {\n          ret = ret + \"<li>\" + splitted[i] + \"</li>\";\n        }\n      }\n\n      ret = ret + \"</ul>\";\n      return {\n        __html: ret\n      };\n    }\n    return {\n      __html: `<ul><li>${message}</li></ul>`\n    };\n  };\n\n  // Hide the notification on clicking outside\n  const hide = () => {\n    setShow(false);\n  };\n\n  // Call the function when mark as read link is clicked\n  const markAsRead = () => {\n    setShowCount(false);\n    reactLocalStorage.setObject(storageKey, { id: data[0][key] });\n    setReadIndex(0);\n  };\n\n  return (\n    <>\n      <div className=\"notification-container\">\n        <div\n          className={\n            showCount ? \"notification notify show-count\" : \"notification notify\"\n          }\n          data-count={messageCount}\n          onClick={(event) => handleClick(event)}\n        >\n          <Bell color={bellColor} size={bellSize} />\n        </div>\n      </div>\n\n      <div ref={ref}>\n        <Overlay\n          show={show}\n          target={target}\n          placement=\"bottom\"\n          container={ref.current}\n          containerPadding={20}\n          rootClose={true}\n          onHide={hide}\n        >\n          <Popover id=\"popover-contained\">\n            <Popover.Title as=\"h3\">{heading}</Popover.Title>\n            <Popover.Content style={{ padding: \"3px 3px\" }}>\n              {showCount && (\n                <div>\n                  <Button variant=\"link\" onClick={deleteNotifiesHandler}>\n                    <BookOpen size={24} />\n                        {' '}Đánh dấu đã đọc tất cả\n                  </Button>\n                </div>\n              )}\n              <ul className=\"notification-info-panel\">\n                {data.length > 0 ? (\n                  data.map((message, index) => (\n                    <li\n                      className={\n                        index < raedIndex\n                          ? \"notification-message unread\"\n                          : \"notification-message\"\n                      }\n                      key={index}\n                    >\n                      <Link to= {`course/${message['course']}`}>\n                        <div className=\"timestamp\">\n                          <span style={{paddingLeft: '8px'}}>{getDayDiff(message[key])}</span>\n                          {showDate && (\n                            <span>\n                              {\" (\"}\n                              {getWhen(message[key])}\n                              {\")\"}\n                            </span>\n                          )}\n                        </div>\n                        <div\n                          className=\"content\"\n                          dangerouslySetInnerHTML={getContent(\n                            message[notificationMsg]\n                          )}\n                        />\n                      </Link>\n\n                    </li>\n                  ))\n                ) : (\n                  <>\n                    <AlertTriangle color=\"#000000\" size={32} />\n                    <h6 className=\"nodata\">Không tìm thấy thông báo</h6>\n                  </>\n                )}\n              </ul>\n            </Popover.Content>\n          </Popover>\n        </Overlay>\n      </div>\n    </>\n  );\n};\n\nNotifyMe.prototype = {\n  storageKey: PropTypes.string,\n  notific_key: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  notific_value: PropTypes.string.isRequired,\n  sortedByKey: PropTypes.bool,\n  color: PropTypes.string,\n  size: PropTypes.string,\n  heading: PropTypes.string,\n  multiLineSplitter: PropTypes.string,\n  showDate: PropTypes.bool\n};\n\nexport default NotifyMe;\n","/home/truong/GR_Project_K63/frontend/src/components/chat/MyChats.js",["529"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { useAlert } from \"react-alert\";\n\nconst MyChats = ({ fetchAgain }) => {\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  let alert = useAlert()\n\n  let chatsStyle = (chat) => ({\n    cursor:\"pointer\",\n    background: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n    color: selectedChat === chat ? \"white\" : \"black\",\n    borderRadius:'10px',\n    padding:'5px 10px',\n    marginBottom:'10px'\n  })\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n\n      const { data } = await axios.get(\"/api/v1/chat\");\n      setChats(data);\n    } catch (error) {\n      alert.error('Khổng tải được tin nhắn')\n    }\n  };\n\n  useEffect(() => {\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n\n    <>\n      <div\n        style={{display:\"flex\",background:'white',borderRadius:'10px',borderWidth:'1px'}}\n        className=\"flex-column align-items-center p-3 col-12 col-md-3 \"\n      >\n        <div\n          className=\"pb-3 px-3 d-flex w-100 justify-content-between align-items-center\"\n          style={{fontSize:'26px'}}\n        >\n          Tin nhắn của tôi\n        </div>\n        <div\n          className=\"d-flex flex-column p-3\"\n          style={{background:\"#F8F8F8\",width:'100%',height:'100%',borderRadius:'10px',overflowY:'hidden'}}\n        >\n          {chats ? (\n            <div style={{overflowY:\"scroll\"}}>\n              {chats.map((chat) => (\n                <div\n                  onClick={() => setSelectedChat(chat)}\n                  style={chatsStyle(chat)}                \n                  key={chat._id}\n                >\n                  <div>\n                    {!chat.isGroupChat\n                      ? getSender(user, chat.users)\n                      : chat.chatName}\n                  </div>\n                  {chat.latestMessage && (\n                    <div style={{fontSize:\"16px\"}}>\n                      <b>{chat.latestMessage.sender.name} : </b>\n                      {chat.latestMessage.content.length > 50\n                        ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                        : chat.latestMessage.content}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <ChatLoading />\n          )}\n        </div>\n      </div>\n    </>\n\n  );\n};\n\nexport default MyChats;\n","/home/truong/GR_Project_K63/frontend/src/components/course/SearchCourse.js",["530"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './index.css'\n\nconst SearchCourse = ({ course, col }) => {\n    return (\n        <Link className='w-100' to={`/course/${course._id}`} >\n            <div className={`mx-5 mb-1 w-100`}>\n            <div className=\"card p-3 rounded d-flex flex-row d-flex justify-content-between\">\n                <div className='d-flex'>\n                    <img\n                        className=\"card-img-top mx-3 \"\n                        src={course.images[0].url}\n                    />\n                    <div className=\"d-flex flex-column\">\n                        <h5 className=\"card-title font-weight-bold\">\n                            <Link to={`/course/${course._id}`}>{course.name}</Link>\n                        </h5>\n                        <p>{course.description}</p>\n                        <div className=\"ratings mt-auto\">\n                            <div className=\"rating-outer\" style={{fontSize:'14px'}}>\n                                <div className=\"rating-inner\" style={{ fontSize:'14px', width: `${(course.ratings / 5) * 100}%` }}></div>\n                            </div>\n                            <span id=\"no_of_reviews\">({course.numOfReviews} Đánh giá)</span>\n                        </div>\n                        <span className=\"mt-3\">Số lượt đăng ký: {course.users?.length}</span>\n                        <p className=\"\">{course.price === 0 ? \"Giá trị: Miễn phí\" : 'Giá trị: ' + course.price}</p>\n                    \n                    </div>\n                </div>\n\n                {/* <div className='d-flex d-flex align-items-center'>\n                <Link to={`/course/${course._id}`} id=\"view_btn\" className=\"btn btn-block \">Xem chi tiết</Link>\n                </div> */}\n               \n            </div>\n        </div>\n        </Link>\n\n    )\n}\n\nexport default SearchCourse","/home/truong/GR_Project_K63/frontend/src/components/chat/Chatbox.js",[],"/home/truong/GR_Project_K63/frontend/src/components/chat/miscellaneous/SideDrawer.js",["531","532","533","534","535"],"import { Drawer, Button, Input, Tooltip, Spin, notification  } from 'antd';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ChatLoading from \"../ChatLoading\";\nimport { getSender } from \"../../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../../Context/ChatProvider\";\nimport { useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const alert = useAlert();\n\n  const { user } = useSelector(state => state.auth)\n  const showDrawer = () => {\n    setOpen(true);\n  };\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const {\n    setSelectedChat,\n    chats,\n    setChats,\n  } = ChatState();\n\n  useEffect(async () => {\n    try {\n      setLoading(true);\n\n      const { data } = await axios.get(`/api/v1/user?search=${search}`);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      alert.error('Tìm kiếm thất bại')\n    }\n  },[])\n\n  const handleSearch = async () => {\n    try {\n      setLoading(true);\n\n      const { data } = await axios.get(`/api/v1/user?search=${search}`);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      alert.error(\"Tìm kiếm thất bại\")\n    }\n  };\n\n  const accessChat = async (userId) => {\n\n    try {\n      setLoadingChat(true);\n\n      const { data } = await axios.post(`/api/v1/chat`, { userId });\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      alert.error('Không tải được chat')\n    }\n  };\n\n\n  return (\n    <>\n      <div style={{background:'white',borderWidth:'5px'}} className=\"d-flex justify-content-between align-items-center w-100 px-5 py-10 mt-4\" >\n          <Tooltip title=\"Tìm kiếm người để nhắn tin\"  placement=\"bottomRight\">\n            <Button variant=\"ghost\" onClick={showDrawer}>\n              <i className=\"fa fa-search\"></i>\n              <span className=\"px-4\">\n                Danh sách người có thể nhắn tin\n              </span> \n            </Button>\n          </Tooltip>\n      </div>\n\n      <Drawer placement=\"left\" title=\"Tìm kiếm người dùng\" onClose={onClose} open={open}>\n            <div className='d-flex p-2'>\n              <Input\n                placeholder=\"Tìm kiếm bằng tên hoặc email\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Tìm kiếm</Button>\n            </div>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((item) => (\n                <UserListItem\n                  key={item._id}\n                  user={item}\n                  handleFunction={() => accessChat(item._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spin style={{display:'flex', marginLeft:'auto'}} />}\n         \n       \n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Document/DocumentForm.js",["536"],"import React, { useState, useEffect } from \"react\";\nimport { useAlert } from 'react-alert'\nimport { useDispatch } from 'react-redux'\n\nconst DocumentForm = ({courseId, newDocument,topics }) => {\n  const [name, setName] = useState(\"\");\n  const [topicId,setTopicId] = useState('');\n  const [documents, setDocuments] = useState([]);\n \n  const alert = useAlert();\n  const dispatch = useDispatch();\n  \n useEffect(() =>{\n  if(topics.length > 0)\n    setTopicId(topics[0]._id)\n },[topics])\n\n  const hadleSubmit = (e) => {\n    e.preventDefault();\n\n    let formdata = new FormData();\n    for (let key in documents) {\n      formdata.append(\"documents\", documents[key]);\n    }\n\n    formdata.append(\"name\", name);\n    formdata.append(\"courseId\",courseId);\n    formdata.append(\"topicId\",topicId)\n    setName(\"\");\n    dispatch(newDocument(formdata));\n\n  };\n\n  return (\n    <>\n      <form onSubmit={hadleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Tiêu đề</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={name}  \n            className=\"form-control\"\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Chủ đề</label>\n          <select className=\"form-control\" value={topicId} onChange={(e) => setTopicId(e.target.value)}>\n            {topics && topics.map(topic => {\n              return <option key={topic._id} value={topic._id}>{topic.name}</option>\n            })} \n            \n            \n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"documents\">Đăng tải document bài giảng</label>\n          <input\n            type=\"file\"\n            name=\"documents\"\n            id=\"documents\"\n            className=\"form-control\"\n            accept=\".pdf\"\n            \n            onChange={(e) => {\n              setDocuments(e.target.files);\n            }}\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default DocumentForm;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Quiz/QuizList.js",["537","538","539"],"import React from \"react\";\nimport { Divider, List, Typography } from 'antd';\nconst QuizList = ({ quizs,deleteQuizHandler }) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Danh sách các câu hỏi</th>\n              <th>Câu trả lời</th>\n            </tr>\n          </thead>\n          <tbody>\n            {quizs &&\n              quizs.map((quiz) => {\n                return (\n                  <tr>\n                    <td>\n                      {quiz.question}\n                      <button className=\"float-right\" onClick={() => deleteQuizHandler(quiz._id)}>Xóa</button>\n                    </td>\n                    <td>\n                    <ul class=\"list-group\">\n                      {quiz.choice && quiz.choice.map((choice,index) => {\n                        return (\n                          <li index={index} class=\"list-group-item d-flex justify-content-between align-items-center\">\n                            {choice.body}\n                            {choice.isCorrect &&<span class=\"badge badge-primary badge-pill\">Đáp án đúng</span>}\n                           \n                          </li>\n                        )\n                      })}\n                    </ul>\n                    </td>\n                    \n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizList;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Quiz/QuizForm.js",["540","541","542","543","544","545","546","547","548","549"],"import React, { useState, useEffect } from \"react\";\nimport { useAlert } from 'react-alert'\nimport { useDispatch } from 'react-redux'\nimport { Divider, List, Typography } from 'antd';\nimport { newQuiz } from \"../../../../actions/courseActions\";\nconst QuizForm = ({topicId}) => {\n  const [question, setQuestion] = useState(\"\");\n  const [quantity,setQuantity] = useState([1]);\n  const [choice,setChoice] = useState({})\n  const [choices,setChoices] = useState([])\n  const [correct,setCorrect] = useState(true)\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  console.log(question)\n  const hadleSubmit = (e) => {\n    e.preventDefault();\n\n    let formdata = new FormData();\n\n    formdata.append(\"question\", question);\n    formdata.append(\"topicId\",topicId);\n    formdata.append(\"choice\",choices);\n\n   \n    dispatch(newQuiz({question,topicId,choice:choices}));\n    setQuestion(\"\");\n    setChoices([]);\n    setChoice(\"\");\n  };\n\n  const addChoice = () =>{\n    setChoices(prev => [...prev,choice])\n    \n  }\n\n  const deleteChoice = (body) => {\n    let newChoices = choices.filter(choice => {\n      if(choice.body !== body)\n      return choice\n    })\n\n    setChoices(newChoices)\n  }\n\n  const addCorrect = (e) =>{\n    let newChoices = choices.map(item => {\n        if(item.body === e){\n            return {body:item.body,isCorrect:true}\n        }else{\n            return {body:item.body,isCorrect:false}\n        }\n    })\n    setChoices(newChoices)\n  }\n\n  return (\n    <>\n      <form onSubmit={(e) => hadleSubmit(e)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Câu hỏi</label>\n          <input\n            type=\"text\"\n            name=\"question\"\n            id=\"question\"\n            value={question}  \n            className=\"form-control\"\n            onChange={(e) => setQuestion(e.target.value)}\n          />\n        </div>\n\n        <button style={{position:'absolute', bottom:'10px'}} type=\"submit\" className=\"btn btn-success mt-2\">\n          Gửi\n        </button>\n      </form>\n      <div className=\"form-group\">\n                <label htmlFor=\"name\">Phương án lựa chọn</label>\n                <input\n                  type=\"text\"\n                  name=\"choice\"\n                 \n                  className=\"form-control\"\n                  onChange={(e) => setChoice({body: e.target.value, isCorrect:false})}\n                />\n                <button onClick={() => addChoice()} className=\"mt-1 btn btn-success float-right\">Thêm</button>\n        </div>\n\n        <div className=\"mb-5\">\n        {choices[0] ? <h4 className=\"mt-5\">Danh sách đáp án</h4> : ''}\n        <ul class=\"list-group\">\n          {choices && choices.map((choice,index) => {\n            return (\n              <li index={index} class=\"list-group-item d-flex justify-content-between align-items-center\">\n                {choice.body}\n                {choice.isCorrect &&<span class=\"badge badge-primary badge-pill\">Đáp án đúng</span>}\n                <button onClick={() => addCorrect(choice.body)} className=\"btn btn-success float-right btn-sm mb-2\">Đặt đúng</button>\n                <button onClick={() => deleteChoice(choice.body)} className=\"btn btn-success float-right btn-sm mb-2\">Xóa</button>\n              </li>\n            )\n          })}\n        </ul>\n        </div>\n        \n    </>\n  );\n};\n\nexport default QuizForm;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Document/DocumentList.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Lesson/UploadsList.js",[],"/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Lesson/UploadForm.js",["550"],"import React, { useState, useEffect } from \"react\";\nimport { useAlert } from 'react-alert'\nimport { useDispatch } from 'react-redux'\n\nconst UploadForm = ({courseId, newLesson,topics }) => {\n  const [name, setName] = useState(\"\");\n  const [topicId,setTopicId] = useState(topics[0]?._id);\n  const [videos, setVideos] = useState([]);\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  \n  useEffect(() =>{\n    setTopicId(topics[0]?._id)\n  },[topics])\n\n  const hadleSubmit = (e) => {\n    e.preventDefault();\n\n    let formdata = new FormData();\n    for (let key in videos) {\n      formdata.append(\"videos\", videos[key]);\n    }\n\n    formdata.append(\"name\", name);\n    formdata.append(\"courseId\",courseId);\n    formdata.append(\"topicId\",topicId)\n    setName(\"\");\n    dispatch(newLesson(formdata));\n\n  };\n\n  return (\n    <>\n      <form onSubmit={hadleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Tiêu đề</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={name}  \n            className=\"form-control\"\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Chủ đề</label>\n          <select className=\"form-control\" defaultValue={topicId} onChange={(e) => setTopicId(e.target.value)}>\n            {topics && topics.map(topic => {\n              return <option key={topic._id} value={topic._id}>{topic.name}</option>\n            })} \n            \n            \n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"videos\">Đăng tải video bài giảng</label>\n          <input\n            type=\"file\"\n            name=\"videos\"\n            id=\"videos\"\n            multiple\n            className=\"form-control\"\n            accept=\".mp4, .mkv\"\n            \n            onChange={(e) => {\n              setVideos(e.target.files);\n            }}\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default UploadForm;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Topic/TopicForm.js",["551","552"],"import React, { useState, useEffect } from \"react\";\nimport { useAlert } from 'react-alert'\nimport { useDispatch } from 'react-redux'\n\nconst TopicForm = ({courseId, newTopic }) => {\n  const [name, setName] = useState(\"\");\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  \n  const hadleSubmit = (e) => {\n    e.preventDefault();\n\n    let formdata = new FormData();\n\n    formdata.append(\"name\", name);\n    formdata.append(\"courseId\",courseId);\n    setName(\"\");\n    dispatch(newTopic({name,courseId}));\n\n  };\n\n  return (\n    <>\n      <form onSubmit={hadleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Tên chủ đề</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={name}  \n            className=\"form-control\"\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\n          Gửi\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default TopicForm;\n","/home/truong/GR_Project_K63/frontend/src/pages/Dashboard/Courses/Topic/TopicList.js",[],"/home/truong/GR_Project_K63/frontend/src/components/course/Course.js",["553"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Course = ({ course, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded \">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={course.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/course/${course._id}`}>{course.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(course.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({course.numOfReviews} Đánh giá)</span>\n                    </div>\n                    <p className=\"mt-3\">Số lượt đăng ký: {course.users?.length}</p>\n                    <p className=\"card-text\">{course.price === 0 ? \"Giá trị: Miễn phí\" : 'Giá trị: ' + course.price}</p>\n                    <Link to={`/course/${course._id}`} id=\"view_btn\" className=\"btn btn-block\">Xem chi tiết</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Course\n","/home/truong/GR_Project_K63/frontend/src/components/review/ListReviews.js",[],"/home/truong/GR_Project_K63/frontend/src/components/quiz/Quiz.js",[],"/home/truong/GR_Project_K63/frontend/src/components/regularCourses/regularCourses.js",["554","555","556","557"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminCourses, getCourses, getRegularCourses } from '../../actions/courseActions';\n\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport Course from '../course/Course';\nimport RegularCourse from '../course/RegularCourse';\nconst responsive = {\n  superLargeDesktop: {\n    breakpoint: { max: 4000, min: 3000 },\n    items: 5\n  },\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 3\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 2\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1\n  }\n};\n\nconst RegularCourses = () => {\n\n  const { loading, regularCourses, error  } = useSelector(state => state.regularCourses)\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    \n    dispatch(getRegularCourses());\n\n    if (error) {\n        return alert.error(error)\n    }\n\n    \n\n}, [dispatch,error])\n\n  return (\n    <div>\n         <h1 id=\"courses_heading\">Khóa học phổ biến</h1>\n        <Carousel\n            swipeable={false}\n            draggable={false}\n            showDots={true}\n            responsive={responsive}\n            ssr={true}\n            infinite={true}\n            autoPlaySpeed={1000}\n            keyBoardControl={true}\n            customTransition=\"all .5\"\n            transitionDuration={500}\n            containerClass=\"carousel-container\"\n            removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n            dotListClass=\"custom-dot-list-style\"\n            itemClass=\"carousel-item-padding-40-px\"\n        >\n            {regularCourses?.map(course => (\n                <RegularCourse key={course._id} course={course}/>\n            ))}\n        </Carousel>\n\n    </div>\n  )\n}\n\nexport default RegularCourses","/home/truong/GR_Project_K63/frontend/src/components/chat/ChatLoading.js",[],"/home/truong/GR_Project_K63/frontend/src/components/chat/SingleChat.js",[],"/home/truong/GR_Project_K63/frontend/src/components/chat/userAvatar/UserListItem.js",["558"],"import { Avatar, Card, Space } from \"antd\";\n\nimport './index.css'\n\nconst UserListItem = ({ handleFunction, user }) => {\n\n  return (\n    <div className=\"user-list-item\"\n      onClick={handleFunction}\n    >\n      <Avatar\n        style={{marginRight:'2rem'}}\n        size={'large'}\n        name={user.name}\n        src={user.avatar.url}\n      />\n      <Space direction='vertical'>\n        <span style={{fontSize:'16px'}}>{user.name}</span>\n        <span style={{fontSize:'16px'}}>\n          <b>Email : </b>\n          {user.email}\n        </span>\n      </Space>\n    </div>\n  );\n};\n\nexport default UserListItem;\n","/home/truong/GR_Project_K63/frontend/src/config/ChatLogics.js",[],"/home/truong/GR_Project_K63/frontend/src/components/chat/ScrollableChat.js",[],"/home/truong/GR_Project_K63/frontend/src/components/chat/miscellaneous/ProfileModal.js",[],"/home/truong/GR_Project_K63/frontend/src/components/course/RegularCourse.js",["559"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst RegularCourse = ({ course }) => {\n    return (\n        <div className={`mx-5 mb-5`}>\n            <div className=\"card p-3 rounded \">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={course.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/course/${course._id}`}>{course.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(course.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({course.numOfReviews} Đánh giá)</span>\n                    </div>\n                    <p className=\"mt-3\">Số lượt đăng ký: {course.users?.length}</p>\n                    <p className=\"card-text\">{course.price === 0 ? \"Giá trị: Miễn phí\" : 'Giá trị: ' + course.price}</p>\n                    <Link to={`/course/${course._id}`} id=\"view_btn\" className=\"btn btn-block\">Xem chi tiết</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RegularCourse\n",{"ruleId":"560","replacedBy":"561"},{"ruleId":"562","replacedBy":"563"},{"ruleId":"564","severity":1,"message":"565","line":14,"column":8,"nodeType":"566","messageId":"567","endLine":14,"endColumn":15},{"ruleId":"564","severity":1,"message":"568","line":39,"column":10,"nodeType":"566","messageId":"567","endLine":39,"endColumn":21},{"ruleId":"564","severity":1,"message":"569","line":41,"column":8,"nodeType":"566","messageId":"567","endLine":41,"endColumn":13},{"ruleId":"564","severity":1,"message":"570","line":43,"column":10,"nodeType":"566","messageId":"567","endLine":43,"endColumn":18},{"ruleId":"564","severity":1,"message":"571","line":44,"column":10,"nodeType":"566","messageId":"567","endLine":44,"endColumn":20},{"ruleId":"564","severity":1,"message":"572","line":57,"column":10,"nodeType":"566","messageId":"567","endLine":57,"endColumn":14},{"ruleId":"564","severity":1,"message":"573","line":63,"column":10,"nodeType":"566","messageId":"567","endLine":63,"endColumn":22},{"ruleId":"564","severity":1,"message":"574","line":63,"column":24,"nodeType":"566","messageId":"567","endLine":63,"endColumn":39},{"ruleId":"564","severity":1,"message":"575","line":5,"column":323,"nodeType":"566","messageId":"567","endLine":5,"endColumn":334},{"ruleId":"564","severity":1,"message":"576","line":2,"column":10,"nodeType":"566","messageId":"567","endLine":2,"endColumn":20},{"ruleId":"564","severity":1,"message":"577","line":15,"column":17,"nodeType":"566","messageId":"567","endLine":15,"endColumn":32},{"ruleId":"564","severity":1,"message":"578","line":15,"column":34,"nodeType":"566","messageId":"567","endLine":15,"endColumn":41},{"ruleId":"579","severity":1,"message":"580","line":21,"column":6,"nodeType":"581","endLine":21,"endColumn":22,"suggestions":"582"},{"ruleId":"564","severity":1,"message":"583","line":13,"column":5,"nodeType":"566","messageId":"567","endLine":13,"endColumn":22},{"ruleId":"564","severity":1,"message":"584","line":8,"column":10,"nodeType":"566","messageId":"567","endLine":8,"endColumn":23},{"ruleId":"564","severity":1,"message":"585","line":8,"column":25,"nodeType":"566","messageId":"567","endLine":8,"endColumn":43},{"ruleId":"564","severity":1,"message":"586","line":9,"column":31,"nodeType":"566","messageId":"567","endLine":9,"endColumn":48},{"ruleId":"579","severity":1,"message":"587","line":32,"column":7,"nodeType":"581","endLine":32,"endColumn":27,"suggestions":"588"},{"ruleId":"564","severity":1,"message":"589","line":22,"column":19,"nodeType":"566","messageId":"567","endLine":22,"endColumn":27},{"ruleId":"564","severity":1,"message":"590","line":23,"column":22,"nodeType":"566","messageId":"567","endLine":23,"endColumn":33},{"ruleId":"564","severity":1,"message":"591","line":24,"column":20,"nodeType":"566","messageId":"567","endLine":24,"endColumn":29},{"ruleId":"564","severity":1,"message":"592","line":29,"column":64,"nodeType":"566","messageId":"567","endLine":29,"endColumn":84},{"ruleId":"579","severity":1,"message":"593","line":47,"column":8,"nodeType":"581","endLine":47,"endColumn":52,"suggestions":"594"},{"ruleId":"564","severity":1,"message":"595","line":3,"column":41,"nodeType":"566","messageId":"567","endLine":3,"endColumn":56},{"ruleId":"579","severity":1,"message":"596","line":105,"column":4,"nodeType":"581","endLine":105,"endColumn":121,"suggestions":"597"},{"ruleId":"598","severity":1,"message":"599","line":246,"column":48,"nodeType":"600","messageId":"601","endLine":246,"endColumn":50},{"ruleId":"564","severity":1,"message":"602","line":20,"column":23,"nodeType":"566","messageId":"567","endLine":20,"endColumn":36},{"ruleId":"598","severity":1,"message":"599","line":155,"column":72,"nodeType":"600","messageId":"601","endLine":155,"endColumn":74},{"ruleId":"564","severity":1,"message":"603","line":1,"column":38,"nodeType":"566","messageId":"567","endLine":1,"endColumn":46},{"ruleId":"564","severity":1,"message":"604","line":8,"column":8,"nodeType":"566","messageId":"567","endLine":8,"endColumn":18},{"ruleId":"579","severity":1,"message":"605","line":32,"column":7,"nodeType":"581","endLine":32,"endColumn":24,"suggestions":"606"},{"ruleId":"579","severity":1,"message":"607","line":36,"column":8,"nodeType":"581","endLine":36,"endColumn":58,"suggestions":"608"},{"ruleId":"564","severity":1,"message":"609","line":69,"column":15,"nodeType":"566","messageId":"567","endLine":69,"endColumn":19},{"ruleId":"579","severity":1,"message":"610","line":148,"column":8,"nodeType":"581","endLine":148,"endColumn":76,"suggestions":"611"},{"ruleId":"564","severity":1,"message":"612","line":3,"column":16,"nodeType":"566","messageId":"567","endLine":3,"endColumn":22},{"ruleId":"564","severity":1,"message":"613","line":3,"column":31,"nodeType":"566","messageId":"567","endLine":3,"endColumn":36},{"ruleId":"564","severity":1,"message":"603","line":1,"column":17,"nodeType":"566","messageId":"567","endLine":1,"endColumn":25},{"ruleId":"564","severity":1,"message":"614","line":7,"column":63,"nodeType":"566","messageId":"567","endLine":7,"endColumn":74},{"ruleId":"564","severity":1,"message":"615","line":2,"column":10,"nodeType":"566","messageId":"567","endLine":2,"endColumn":22},{"ruleId":"564","severity":1,"message":"616","line":5,"column":8,"nodeType":"566","messageId":"567","endLine":5,"endColumn":14},{"ruleId":"564","severity":1,"message":"612","line":7,"column":16,"nodeType":"566","messageId":"567","endLine":7,"endColumn":22},{"ruleId":"564","severity":1,"message":"603","line":1,"column":17,"nodeType":"566","messageId":"567","endLine":1,"endColumn":25},{"ruleId":"564","severity":1,"message":"569","line":2,"column":8,"nodeType":"566","messageId":"567","endLine":2,"endColumn":13},{"ruleId":"564","severity":1,"message":"617","line":22,"column":12,"nodeType":"566","messageId":"567","endLine":22,"endColumn":21},{"ruleId":"564","severity":1,"message":"618","line":32,"column":11,"nodeType":"566","messageId":"567","endLine":32,"endColumn":19},{"ruleId":"579","severity":1,"message":"619","line":72,"column":8,"nodeType":"581","endLine":72,"endColumn":76,"suggestions":"620"},{"ruleId":"564","severity":1,"message":"603","line":1,"column":17,"nodeType":"566","messageId":"567","endLine":1,"endColumn":25},{"ruleId":"564","severity":1,"message":"603","line":1,"column":17,"nodeType":"566","messageId":"567","endLine":1,"endColumn":25},{"ruleId":"564","severity":1,"message":"621","line":7,"column":52,"nodeType":"566","messageId":"567","endLine":7,"endColumn":59},{"ruleId":"564","severity":1,"message":"603","line":1,"column":38,"nodeType":"566","messageId":"567","endLine":1,"endColumn":46},{"ruleId":"564","severity":1,"message":"612","line":3,"column":16,"nodeType":"566","messageId":"567","endLine":3,"endColumn":22},{"ruleId":"579","severity":1,"message":"619","line":68,"column":8,"nodeType":"581","endLine":68,"endColumn":76,"suggestions":"622"},{"ruleId":"623","severity":1,"message":"624","line":75,"column":20,"nodeType":"625","endLine":75,"endColumn":87},{"ruleId":"564","severity":1,"message":"609","line":50,"column":15,"nodeType":"566","messageId":"567","endLine":50,"endColumn":19},{"ruleId":"564","severity":1,"message":"626","line":3,"column":8,"nodeType":"566","messageId":"567","endLine":3,"endColumn":14},{"ruleId":"564","severity":1,"message":"612","line":9,"column":36,"nodeType":"566","messageId":"567","endLine":9,"endColumn":42},{"ruleId":"579","severity":1,"message":"627","line":73,"column":8,"nodeType":"581","endLine":73,"endColumn":133,"suggestions":"628"},{"ruleId":"629","severity":1,"message":"630","line":182,"column":47,"nodeType":"631","messageId":"632","endLine":182,"endColumn":48,"fix":"633"},{"ruleId":"564","severity":1,"message":"578","line":10,"column":19,"nodeType":"566","messageId":"567","endLine":10,"endColumn":26},{"ruleId":"634","severity":1,"message":"635","line":68,"column":44,"nodeType":"625","endLine":68,"endColumn":56},{"ruleId":"634","severity":1,"message":"635","line":72,"column":44,"nodeType":"625","endLine":72,"endColumn":56},{"ruleId":"634","severity":1,"message":"635","line":76,"column":44,"nodeType":"625","endLine":76,"endColumn":56},{"ruleId":"564","severity":1,"message":"603","line":1,"column":38,"nodeType":"566","messageId":"567","endLine":1,"endColumn":46},{"ruleId":"564","severity":1,"message":"636","line":31,"column":9,"nodeType":"566","messageId":"567","endLine":31,"endColumn":18},{"ruleId":"564","severity":1,"message":"637","line":32,"column":9,"nodeType":"566","messageId":"567","endLine":32,"endColumn":24},{"ruleId":"579","severity":1,"message":"638","line":59,"column":8,"nodeType":"581","endLine":59,"endColumn":79,"suggestions":"639"},{"ruleId":"623","severity":1,"message":"624","line":74,"column":29,"nodeType":"625","endLine":74,"endColumn":83},{"ruleId":"564","severity":1,"message":"640","line":7,"column":5,"nodeType":"566","messageId":"567","endLine":7,"endColumn":30},{"ruleId":"564","severity":1,"message":"641","line":11,"column":5,"nodeType":"566","messageId":"567","endLine":11,"endColumn":33},{"ruleId":"564","severity":1,"message":"642","line":13,"column":5,"nodeType":"566","messageId":"567","endLine":13,"endColumn":17},{"ruleId":"564","severity":1,"message":"643","line":33,"column":5,"nodeType":"566","messageId":"567","endLine":33,"endColumn":24},{"ruleId":"564","severity":1,"message":"644","line":43,"column":5,"nodeType":"566","messageId":"567","endLine":43,"endColumn":24},{"ruleId":"564","severity":1,"message":"645","line":47,"column":5,"nodeType":"566","messageId":"567","endLine":47,"endColumn":20},{"ruleId":"564","severity":1,"message":"646","line":55,"column":5,"nodeType":"566","messageId":"567","endLine":55,"endColumn":23},{"ruleId":"564","severity":1,"message":"647","line":59,"column":5,"nodeType":"566","messageId":"567","endLine":59,"endColumn":23},{"ruleId":"564","severity":1,"message":"648","line":64,"column":5,"nodeType":"566","messageId":"567","endLine":64,"endColumn":19},{"ruleId":"564","severity":1,"message":"649","line":71,"column":5,"nodeType":"566","messageId":"567","endLine":71,"endColumn":22},{"ruleId":"564","severity":1,"message":"650","line":75,"column":5,"nodeType":"566","messageId":"567","endLine":75,"endColumn":22},{"ruleId":"564","severity":1,"message":"651","line":89,"column":5,"nodeType":"566","messageId":"567","endLine":89,"endColumn":26},{"ruleId":"564","severity":1,"message":"652","line":8,"column":5,"nodeType":"566","messageId":"567","endLine":8,"endColumn":30},{"ruleId":"564","severity":1,"message":"642","line":10,"column":5,"nodeType":"566","messageId":"567","endLine":10,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":23,"column":25,"nodeType":"625","endLine":23,"endColumn":78},{"ruleId":"564","severity":1,"message":"653","line":13,"column":16,"nodeType":"566","messageId":"567","endLine":13,"endColumn":23},{"ruleId":"579","severity":1,"message":"654","line":67,"column":6,"nodeType":"581","endLine":67,"endColumn":12,"suggestions":"655"},{"ruleId":"564","severity":1,"message":"656","line":143,"column":9,"nodeType":"566","messageId":"567","endLine":143,"endColumn":19},{"ruleId":"564","severity":1,"message":"603","line":2,"column":21,"nodeType":"566","messageId":"567","endLine":2,"endColumn":29},{"ruleId":"623","severity":1,"message":"624","line":11,"column":21,"nodeType":"625","endLine":14,"endColumn":23},{"ruleId":"564","severity":1,"message":"657","line":1,"column":48,"nodeType":"566","messageId":"567","endLine":1,"endColumn":60},{"ruleId":"564","severity":1,"message":"658","line":5,"column":10,"nodeType":"566","messageId":"567","endLine":5,"endColumn":19},{"ruleId":"564","severity":1,"message":"659","line":20,"column":11,"nodeType":"566","messageId":"567","endLine":20,"endColumn":15},{"ruleId":"579","severity":1,"message":"660","line":34,"column":13,"nodeType":"600","endLine":45,"endColumn":4},{"ruleId":"579","severity":1,"message":"661","line":45,"column":5,"nodeType":"581","endLine":45,"endColumn":7,"suggestions":"662"},{"ruleId":"564","severity":1,"message":"663","line":10,"column":9,"nodeType":"566","messageId":"567","endLine":10,"endColumn":14},{"ruleId":"564","severity":1,"message":"664","line":2,"column":10,"nodeType":"566","messageId":"567","endLine":2,"endColumn":17},{"ruleId":"564","severity":1,"message":"665","line":2,"column":19,"nodeType":"566","messageId":"567","endLine":2,"endColumn":23},{"ruleId":"564","severity":1,"message":"666","line":2,"column":25,"nodeType":"566","messageId":"567","endLine":2,"endColumn":35},{"ruleId":"564","severity":1,"message":"667","line":1,"column":27,"nodeType":"566","messageId":"567","endLine":1,"endColumn":36},{"ruleId":"564","severity":1,"message":"664","line":4,"column":10,"nodeType":"566","messageId":"567","endLine":4,"endColumn":17},{"ruleId":"564","severity":1,"message":"665","line":4,"column":19,"nodeType":"566","messageId":"567","endLine":4,"endColumn":23},{"ruleId":"564","severity":1,"message":"666","line":4,"column":25,"nodeType":"566","messageId":"567","endLine":4,"endColumn":35},{"ruleId":"564","severity":1,"message":"668","line":8,"column":10,"nodeType":"566","messageId":"567","endLine":8,"endColumn":18},{"ruleId":"564","severity":1,"message":"669","line":8,"column":19,"nodeType":"566","messageId":"567","endLine":8,"endColumn":30},{"ruleId":"564","severity":1,"message":"670","line":11,"column":10,"nodeType":"566","messageId":"567","endLine":11,"endColumn":17},{"ruleId":"564","severity":1,"message":"671","line":11,"column":18,"nodeType":"566","messageId":"567","endLine":11,"endColumn":28},{"ruleId":"564","severity":1,"message":"663","line":12,"column":9,"nodeType":"566","messageId":"567","endLine":12,"endColumn":14},{"ruleId":"598","severity":1,"message":"672","line":37,"column":44,"nodeType":"600","messageId":"601","endLine":37,"endColumn":46},{"ruleId":"564","severity":1,"message":"663","line":9,"column":9,"nodeType":"566","messageId":"567","endLine":9,"endColumn":14},{"ruleId":"564","severity":1,"message":"667","line":1,"column":27,"nodeType":"566","messageId":"567","endLine":1,"endColumn":36},{"ruleId":"564","severity":1,"message":"663","line":7,"column":9,"nodeType":"566","messageId":"567","endLine":7,"endColumn":14},{"ruleId":"623","severity":1,"message":"624","line":8,"column":17,"nodeType":"625","endLine":11,"endColumn":19},{"ruleId":"564","severity":1,"message":"673","line":3,"column":10,"nodeType":"566","messageId":"567","endLine":3,"endColumn":25},{"ruleId":"564","severity":1,"message":"674","line":3,"column":27,"nodeType":"566","messageId":"567","endLine":3,"endColumn":37},{"ruleId":"564","severity":1,"message":"675","line":7,"column":8,"nodeType":"566","messageId":"567","endLine":7,"endColumn":14},{"ruleId":"564","severity":1,"message":"578","line":30,"column":11,"nodeType":"566","messageId":"567","endLine":30,"endColumn":18},{"ruleId":"564","severity":1,"message":"676","line":1,"column":18,"nodeType":"566","messageId":"567","endLine":1,"endColumn":22},{"ruleId":"623","severity":1,"message":"624","line":8,"column":17,"nodeType":"625","endLine":11,"endColumn":19},"no-native-reassign",["677"],"no-negated-in-lhs",["678"],"no-unused-vars","'Payment' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'axios' is defined but never used.","'Elements' is defined but never used.","'loadStripe' is defined but never used.","'Link' is defined but never used.","'stripeApiKey' is assigned a value but never used.","'setStripeApiKey' is assigned a value but never used.","'quizReducer' is defined but never used.","'useHistory' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'store.dispatch'. Either exclude it or remove the dependency array. Outer scope values like 'store.dispatch' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["679"],"'LOAD_PROFILE_FAIL' is defined but never used.","'addItemToCart' is defined but never used.","'removeItemFromCart' is defined but never used.","'newRegisterCourse' is defined but never used.","React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.",["680"],"'setPrice' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'setRating' is assigned a value but never used.","'filteredCoursesCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["681"],"'getCourseLesson' is defined but never used.","React Hook useEffect has a missing dependency: 'reviewError'. Either include it or remove the dependency array.",["682"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setIndexTopic' is assigned a value but never used.","'useState' is defined but never used.","'Pagination' is defined but never used.","React Hook useEffect has missing dependencies: 'error' and 'match.params.id'. Either include them or remove the dependency array.",["683"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["684"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user._id' and 'user.role'. Either include them or remove the dependency array.",["685"],"'Button' is defined but never used.","'Space' is defined but never used.","'updateTopic' is defined but never used.","'MDBDataTable' is defined but never used.","'Loader' is defined but never used.","'oldImages' is assigned a value but never used.","'courseId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["686"],"'newQuiz' is defined but never used.",["687"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Slider' is defined but never used.","React Hook useEffect has a missing dependency: 'priceQuery'. Either include it or remove the dependency array.",["688"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"689","text":"690"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setNotify' is assigned a value but never used.","'setSelectedChat' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window.location.pathname'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["691"],"'NEW_REGISTER_COURSE_RESET' is defined but never used.","'DELETE_REGISTER_COURSE_RESET' is defined but never used.","'CLEAR_ERRORS' is defined but never used.","'DELETE_LESSON_RESET' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.","'NEW_TOPIC_RESET' is defined but never used.","'DELETE_TOPIC_RESET' is defined but never used.","'UPDATE_TOPIC_RESET' is defined but never used.","'NEW_QUIZ_RESET' is defined but never used.","'DELETE_QUIZ_RESET' is defined but never used.","'UPDATE_QUIZ_RESET' is defined but never used.","'DELETE_DOCUMENT_RESET' is defined but never used.","'DELETE_ALL_NOTIFIES_RESET' is defined but never used.","'BellOff' is defined but never used.","React Hook useEffect has missing dependencies: 'key', 'sortedByKey', and 'storageKey'. Either include them or remove the dependency array.",["692"],"'markAsRead' is assigned a value but never used.","'notification' is defined but never used.","'getSender' is defined but never used.","'user' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'alert' and 'search'. Either include them or remove the dependency array.",["693"],"'alert' is assigned a value but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'useEffect' is defined but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'correct' is assigned a value but never used.","'setCorrect' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'getAdminCourses' is defined but never used.","'getCourses' is defined but never used.","'Course' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"708","fix":"710"},{"desc":"711","fix":"712"},[7974,8020],"\n                                            .",{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},"Update the dependencies array to be: []",{"range":"719","text":"720"},"Update the dependencies array to be: [alert, dispatch, isDeleted]",{"range":"721","text":"722"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"723","text":"724"},"Update the dependencies array to be: [dispatch, alert, error, lessonError, success, match.params.id, checked, checkedExercise, reviewSuccess, complete, isUpdated, reviewError]",{"range":"725","text":"726"},"Update the dependencies array to be: [dispatch, error, match.params.id, userId]",{"range":"727","text":"728"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"729","text":"730"},"Update the dependencies array to be: [dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role, user._id]",{"range":"731","text":"732"},"Update the dependencies array to be: [dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role]",{"range":"733","text":"734"},{"range":"735","text":"734"},"Update the dependencies array to be: [dispatch, alert, error, keyword, currentPage, price, category, rating, categoryQuery, ratingQuery, minPriceQuery, maxPriceQuery, priceQuery]",{"range":"736","text":"737"},"Update the dependencies array to be: [dispatch, alert, error, user, isDeleted, notify]",{"range":"738","text":"739"},"Update the dependencies array to be: [data, key, sortedByKey, storageKey]",{"range":"740","text":"741"},"Update the dependencies array to be: [alert, search]",{"range":"742","text":"743"},[615,631],"[]",[1107,1127],"[alert, dispatch, isDeleted]",[1345,1389],"[dispatch, alert, error, history, isUpdated, user]",[3560,3677],"[dispatch, alert, error, lessonError, success, match.params.id, checked, checkedExercise, reviewSuccess, complete, isUpdated, reviewError]",[916,933],"[dispatch, error, match.params.id, userId]",[974,1024],"[dispatch, alert, isAuthenticated, error, history, redirect]",[4655,4723],"[dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role, user._id]",[1985,2053],"[dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role]",[1831,1899],[2192,2317],"[dispatch, alert, error, keyword, currentPage, price, category, rating, categoryQuery, ratingQuery, minPriceQuery, maxPriceQuery, priceQuery]",[1857,1928],"[dispatch, alert, error, user, isDeleted, notify]",[2059,2065],"[data, key, sortedByKey, storageKey]",[1240,1242],"[alert, search]"]